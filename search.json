[{"path":"https://galah.ala.org.au/articles/choosing_an_atlas.html","id":"set-organisation","dir":"Articles","previous_headings":"","what":"Set Organisation","title":"Choosing an atlas","text":"Set atlas want use changing atlas argument galah_config(). atlas argument can accept full name, acronym, region select given atlas, available via show_all(atlases). value provided, automatically update galah’s server configuration selected atlas. default atlas Australia. intend download records, may need register user profile relevant atlas first.","code":"galah_config(atlas = \"GBIF.es\", email = \"your_email_here\")"},{"path":"https://galah.ala.org.au/articles/choosing_an_atlas.html","id":"look-up-information","dir":"Articles","previous_headings":"","what":"Look up Information","title":"Choosing an atlas","text":"can use look-functions find useful information Atlas set. Available information may vary Living Atlas.","code":"galah_config(atlas = \"Guatemala\") ## Atlas selected: Sistema Nacional de Información sobre Diversidad Biológica de Guatemala (SNIBgt) [Guatemala] show_all(datasets) ## # A tibble: 100 × 3 ##    name                                                                                                                         uri   uid   ##    <chr>                                                                                                                        <chr> <chr> ##  1 A Distribution and Taxonomic Reference Dataset of Geranium (Geraniaceae) in the New World                                    http… dr321 ##  2 A global database for the distributions of crop wild relatives                                                               http… dr12  ##  3 A matrix-based revision of the genus Hypogena Dejean, 1834 (Coleoptera Tenebrionidae)                                        http… dr467 ##  4 A new Mexican species of Chrysina Kirby (Coleoptera: Scarabaeidae: Rutelinae), with nomenclatural changes, new records, and… http… dr554 ##  5 A new species of Setostylus Matile and new records of Setostylus bellulus (Williston) (Diptera: Keroplatidae)                http… dr538 ##  6 A revision of the genus Bromeloecia Spuler (Diptera: Sphaeroceridae: Limosininae)                                            http… dr481 ##  7 A synopsis of American Caraphia Gahan, 1906 (Coleoptera: Cerambycidae: Lepturinae) with description of two new species       http… dr539 ##  8 A synopsis of the Neotropical genus Protoneura (Odonata: Coenagrionidae)                                                     http… dr448 ##  9 A systematic revision of the genus Archocentrus (Perciformes: Cichlidae), with the description of two new genera and six ne… http… dr362 ## 10 A taxonomic monograph of the genus Tylodinus Champion (Coleoptera: Curculionidae: Cryptorhynchinae: Tylodina) of Chiapas, M… http… dr564 ## # … with 90 more rows show_all(fields) ## # A tibble: 129 × 4 ##    id                   description                                                                                             type  link  ##    <chr>                <chr>                                                                                                   <chr> <chr> ##  1 all_image_url        Image URLs for this record                                                                              fiel… <NA>  ##  2 assertion_user_id    User ID of the person who has made an assertion about this record                                       fiel… <NA>  ##  3 assertions           A list of all assertions (user and system supplied) for a record resulting from data quality tests      fiel… <NA>  ##  4 assertions_missing   Assertion indicating missing field values for a record. E.g. missing basis of record                    fiel… <NA>  ##  5 assertions_passed    Assertion indicating a data quality test has been passed by this record                                 fiel… <NA>  ##  6 assertions_unchecked Assertion indicating a data quality test was not performed for this record typically due to the absenc… fiel… <NA>  ##  7 basis_of_record      The basis of record e.g. Specimen, Observation http://rs.tdwg.org/dwc/terms/basisOfRecord               fiel… <NA>  ##  8 catalogue_number     http://rs.tdwg.org/dwc/terms/catalogNumber                                                              fiel… <NA>  ##  9 class                The class the Atlas has matched this record to in the NSL http://rs.tdwg.org/dwc/terms/class            fiel… <NA>  ## 10 collection_code      The collection code for this record. This will be populated if the data has come from a museum or herb… fiel… <NA>  ## # … with 119 more rows search_all(fields, \"year\") ## # A tibble: 3 × 4 ##   id              description                                                                                                   type  link  ##   <chr>           <chr>                                                                                                         <chr> <chr> ## 1 year            http://rs.tdwg.org/dwc/terms/year                                                                             fiel… <NA>  ## 2 occurrence_year Year ranges for a search. Calculated based on the unique values for a query.                                  fiel… <NA>  ## 3 date_precision  The precision of the date information for the record. Values include 'Day', 'Month', 'Year', 'Year range', '… fiel… <NA> search_taxa(\"lagomorpha\") ## # A tibble: 1 × 12 ##   search_term taxon_concept_id scientific_name scientific_name_authorship rank  kingdom  phylum   class    order      family genus species ##   <chr>       <chr>            <chr>           <chr>                      <chr> <chr>    <chr>    <chr>    <chr>      <chr>  <chr> <chr>   ## 1 lagomorpha  785              Lagomorpha      <NA>                       order Animalia Chordata Mammalia Lagomorpha <NA>   <NA>  <NA>"},{"path":"https://galah.ala.org.au/articles/choosing_an_atlas.html","id":"download-data","dir":"Articles","previous_headings":"","what":"Download data","title":"Choosing an atlas","text":"can build queries normally galah. taxonomic queries, use search_taxa() make sure searches returning correct taxonomic data. Download species occurrence records atlases atlas_occurrences()","code":"galah_config(atlas = \"United Kingdom\") ## Atlas selected: National Biodiversity Network (NBN) [United Kingdom] search_taxa(\"vlps\")   # Returns no data due to misspelling ## # A tibble: 1 × 1 ##   search_term ##   <chr>       ## 1 vlps search_taxa(\"vulpes\") # Returns data ## # A tibble: 1 × 13 ##   search_term taxon_concept_id scientific_name scientific_name_authorship rank  kingdom  superclass order class genus phylum family species ##   <chr>       <chr>            <chr>           <chr>                      <chr> <chr>    <chr>      <chr> <chr> <chr> <chr>  <chr>  <chr>   ## 1 vulpes      NBNSYS0000138878 Vulpes          Frisch, 1775               genus Animalia Tetrapoda  Carn… Mamm… Vulp… Chord… Canid… <NA> galah_call() |>   galah_identify(\"vulpes\") |>   galah_filter(year > 2010) |>   atlas_counts() ## # A tibble: 1 × 1 ##   count ##   <int> ## 1 98310 galah_config(atlas = \"Guatemala\") ## Atlas selected: Sistema Nacional de Información sobre Diversidad Biológica de Guatemala (SNIBgt) [Guatemala] galah_call() |>   galah_identify(\"Lagomorpha\") |>   galah_filter(year <= 1980) |>   galah_select(taxon_name, year) |>   atlas_occurrences() ## # A tibble: 39 × 2 ##    scientificName                                         year ##    <chr>                                                 <dbl> ##  1 Sylvilagus floridanus (J. A. Allen, 1890)              1906 ##  2 Sylvilagus floridanus (J. A. Allen, 1890)              1971 ##  3 Sylvilagus floridanus subsp. aztecus (J. Allen, 1890)  1924 ##  4 Sylvilagus floridanus (J. A. Allen, 1890)              1906 ##  5 Sylvilagus floridanus subsp. aztecus (J. Allen, 1890)  1924 ##  6 Sylvilagus brasiliensis subsp. gabbi (J. Allen, 1877)  1948 ##  7 Sylvilagus floridanus (J. A. Allen, 1890)              1971 ##  8 Sylvilagus Gray, 1867                                  1977 ##  9 Sylvilagus Gray, 1867                                  1980 ## 10 Sylvilagus floridanus subsp. aztecus (J. Allen, 1890)  1951 ## # … with 29 more rows"},{"path":"https://galah.ala.org.au/articles/choosing_an_atlas.html","id":"complex-queries-with-multiple-atlases","dir":"Articles","previous_headings":"","what":"Complex queries with multiple Atlases","title":"Choosing an atlas","text":"also possible create complex queries return data multiple Living Atlases. example, setting atlases within loop galah_config() purrr::map() allows us return total number species records Living Atlas one table.","code":"library(purrr) library(tibble) library(dplyr) library(gt)  atlases <- show_all(atlases)  counts <- map(atlases$region,    function(x){     galah_config(atlas = x)     atlas_counts() })  tibble(   atlas = atlases$region,    n = unlist(counts)) |>    filter(n > 0) |>   arrange(desc(n)) |>   gt() |>   fmt_number(column = n)"},{"path":"https://galah.ala.org.au/articles/download_data.html","id":"record-counts","dir":"Articles","previous_headings":"","what":"Record counts","title":"Download data","text":"atlas_counts() provides summary counts records specified atlas, without needing download records. addition filter arguments, optional group_by argument, provides counts binned requested field.","code":"galah_config(atlas = \"Australia\") # Total number of records in the ALA atlas_counts() ## # A tibble: 1 × 1 ##       count ##       <int> ## 1 113038010 galah_call() |>   galah_group_by(kingdom) |>   atlas_counts() ## # A tibble: 10 × 2 ##    kingdom      count ##    <chr>        <int> ##  1 Animalia  85615774 ##  2 Plantae   23758697 ##  3 Fungi      2086631 ##  4 Chromista   854754 ##  5 Protista    145019 ##  6 Bacteria     71523 ##  7 Protozoa      3250 ##  8 Eukaryota     1344 ##  9 Archaea       1106 ## 10 Virus          495"},{"path":"https://galah.ala.org.au/articles/download_data.html","id":"species-lists","dir":"Articles","previous_headings":"","what":"Species lists","title":"Download data","text":"common use case atlas data identify species occur specified region, time period, taxonomic group. atlas_species() similar search_taxa, returns taxonomic information unique identifiers tibble. differs able return information taxonomic levels species; also flexible supporting filtering:","code":"species <- galah_call() |>   galah_identify(\"Rodentia\") |>   galah_filter(stateProvince == \"Northern Territory\") |>   atlas_species()    species |> head() ## # A tibble: 6 × 10 ##   kingdom  phylum   class    order    family  genus        species                     author            species_guid               verna…¹ ##   <chr>    <chr>    <chr>    <chr>    <chr>   <chr>        <chr>                       <chr>             <chr>                      <chr>   ## 1 Animalia Chordata Mammalia Rodentia Muridae Mesembriomys Mesembriomys gouldii        (J.E. Gray, 1843) https://biodiversity.org.… Black-… ## 2 Animalia Chordata Mammalia Rodentia Muridae Zyzomys      Zyzomys argurus             (Thomas, 1889)    https://biodiversity.org.… Common… ## 3 Animalia Chordata Mammalia Rodentia Muridae Pseudomys    Pseudomys hermannsburgensis (Waite, 1896)     https://biodiversity.org.… Sandy … ## 4 Animalia Chordata Mammalia Rodentia Muridae Notomys      Notomys alexis              Thomas, 1922      https://biodiversity.org.… Spinif… ## 5 Animalia Chordata Mammalia Rodentia Muridae Melomys      Melomys burtoni             (Ramsay, 1887)    https://biodiversity.org.… Grassl… ## 6 Animalia Chordata Mammalia Rodentia Muridae Mus          Mus musculus                Linnaeus, 1758    https://biodiversity.org.… House … ## # … with abbreviated variable name ¹​vernacular_name"},{"path":"https://galah.ala.org.au/articles/download_data.html","id":"occurrence-data","dir":"Articles","previous_headings":"","what":"Occurrence data","title":"Download data","text":"download occurrence data need specify email galah_config(). email must associated active ALA account. See information config section Download occurrence records Eolophus roseicapilla","code":"galah_config(email = \"your_email@email.com\", atlas = \"Australia\") occ <- galah_call() |>   galah_identify(\"Eolophus roseicapilla\") |>   galah_filter(     stateProvince == \"Australian Capital Territory\",     year >= 2010,     profile = \"ALA\"   ) |>   galah_select(institutionID, group = \"basic\") |>   atlas_occurrences()    occ |> head() ## # A tibble: 6 × 9 ##   decimalLatitude decimalLongitude eventDate           scientificName        taxonConceptID                 recor…¹ dataR…² occur…³ insti…⁴ ##             <dbl>            <dbl> <dttm>              <chr>                 <chr>                          <chr>   <chr>   <chr>   <lgl>   ## 1           -35.9             149. 2020-09-12 14:00:00 Eolophus roseicapilla https://biodiversity.org.au/a… 17f46d… eBird … PRESENT NA      ## 2           -35.9             149. 2021-09-27 14:00:00 Eolophus roseicapilla https://biodiversity.org.au/a… dbb711… eBird … PRESENT NA      ## 3           -35.9             149. 2012-01-18 13:00:00 Eolophus roseicapilla https://biodiversity.org.au/a… 4f7cd7… BirdLi… PRESENT NA      ## 4           -35.9             149. 2017-03-17 13:00:00 Eolophus roseicapilla https://biodiversity.org.au/a… 3236c4… eBird … PRESENT NA      ## 5           -35.9             149. 2020-11-14 13:00:00 Eolophus roseicapilla https://biodiversity.org.au/a… ef2b90… eBird … PRESENT NA      ## 6           -35.8             149. 2021-04-02 13:00:00 Eolophus roseicapilla https://biodiversity.org.au/a… 45a589… eBird … PRESENT NA      ## # … with abbreviated variable names ¹​recordID, ²​dataResourceName, ³​occurrenceStatus, ⁴​institutionID"},{"path":"https://galah.ala.org.au/articles/download_data.html","id":"media-metadata","dir":"Articles","previous_headings":"","what":"Media metadata","title":"Download data","text":"addition text data describing individual occurrences attributes, ALA stores images, sounds videos associated given record. Metadata records can downloaded R using atlas_media() set filters data download functions. actually download media files computer, use [collect_media()].","code":"media_data <- galah_call() |>   galah_identify(\"Eolophus roseicapilla\") |>   galah_filter(     year == 2020,     cl22 == \"Australian Capital Territory\") |>   atlas_media()    media_data |> head() ## # A tibble: 6 × 20 ##   decima…¹ decim…² eventDate           scien…³ taxon…⁴ recor…⁵ dataR…⁶ occur…⁷ multi…⁸ media…⁹ mime_…˟ size_…˟ date_…˟ date_…˟ height width ##      <dbl>   <dbl> <dttm>              <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>     <int> <chr>   <chr>    <int> <int> ## 1    -35.6    149. 2020-08-04 01:50:00 Eoloph… https:… 063bb0… iNatur… PRESENT Image   2f4d32… image/… 2654217 2020-0… 2020-0…   1200  1800 ## 2    -35.6    149. 2020-08-04 01:50:00 Eoloph… https:… 063bb0… iNatur… PRESENT Image   734074… image/… 2422643 2020-0… 2020-0…   1200  1800 ## 3    -35.6    149. 2020-08-04 01:50:00 Eoloph… https:… 063bb0… iNatur… PRESENT Image   89171c… image/… 2212660 2020-0… 2020-0…   1200  1800 ## 4    -35.6    149. 2020-08-04 01:50:00 Eoloph… https:… 063bb0… iNatur… PRESENT Image   e681d3… image/… 3414736 2020-0… 2020-0…   1200  1800 ## 5    -35.5    149. 2020-08-26 01:53:00 Eoloph… https:… 286841… iNatur… PRESENT Image   1295c2… image/…  863158 2021-0… 2021-0…   1200  1800 ## 6    -35.5    149. 2020-10-14 02:34:00 Eoloph… https:… 064a39… iNatur… PRESENT Image   f97686… image/…  955916 2020-1… 2020-1…   1200  1800 ## # … with 4 more variables: creator <chr>, license <chr>, data_resource_uid <chr>, occurrence_id <chr>, and abbreviated variable names ## #   ¹​decimalLatitude, ²​decimalLongitude, ³​scientificName, ⁴​taxonConceptID, ⁵​recordID, ⁶​dataResourceName, ⁷​occurrenceStatus, ⁸​multimedia, ## #   ⁹​media_id, ˟​mime_type, ˟​size_in_bytes, ˟​date_uploaded, ˟​date_taken"},{"path":"https://galah.ala.org.au/articles/download_data.html","id":"taxonomic-trees","dir":"Articles","previous_headings":"","what":"Taxonomic trees","title":"Download data","text":"atlas_taxonomy provides way build taxonomic trees one clade another using ALA’s internal taxonomy. Specify taxonomic level tree go galah_down_to. function unique within galah function returns data.tree, rather tibble. Although tree format useful, converting data.frame straightforward.","code":"classes <- galah_call() |>   galah_identify(\"chordata\") |>   galah_down_to(class) |>   atlas_taxonomy() ##                             levelName ## 1  Chordata                           ## 2   ¦--Cephalochordata                ## 3   ¦   °--Amphioxi                   ## 4   ¦--Craniata                       ## 5   ¦   °--Agnatha                    ## 6   ¦       ¦--Cephalasipidomorphi    ## 7   ¦       °--Myxini                 ## 8   ¦--Tunicata                       ## 9   ¦   ¦--Appendicularia             ## 10  ¦   ¦--Ascidiacea                 ## 11  ¦   °--Thaliacea                  ## 12  °--Vertebrata                     ## 13      °--Gnathostomata              ## 14          ¦--Amphibia               ## 15          ¦--Aves                   ## 16          ¦--Mammalia               ## 17          ¦--Pisces                 ## 18          ¦   ¦--Actinopterygii     ## 19          ¦   ¦--Chondrichthyes     ## 20          ¦   ¦--Cephalaspidomorphi ## 21          ¦   °--Sarcopterygii      ## 22          °--Reptilia data.tree::ToDataFrameTypeCol(classes, type = \"rank\") |> head() ##   rank_phylum  rank_subphylum rank_superclass rank_informal          rank_class ## 1    Chordata Cephalochordata            <NA>          <NA>            Amphioxi ## 2    Chordata        Craniata         Agnatha          <NA> Cephalasipidomorphi ## 3    Chordata        Craniata         Agnatha          <NA>              Myxini ## 4    Chordata        Tunicata            <NA>          <NA>      Appendicularia ## 5    Chordata        Tunicata            <NA>          <NA>          Ascidiacea ## 6    Chordata        Tunicata            <NA>          <NA>           Thaliacea"},{"path":"https://galah.ala.org.au/articles/download_data.html","id":"configuring-galah","dir":"Articles","previous_headings":"","what":"Configuring galah","title":"Download data","text":"Various aspects galah package can customized. preserve configuration future sessions, set profile_path location .Rprofile file.","code":""},{"path":"https://galah.ala.org.au/articles/download_data.html","id":"email","dir":"Articles","previous_headings":"Configuring galah","what":"Email","title":"Download data","text":"download occurrence records, need provide email address registered ALA. can create account . email registered ALA, stored config:","code":"galah_config(email = \"myemail@gmail.com\")"},{"path":"https://galah.ala.org.au/articles/download_data.html","id":"caching","dir":"Articles","previous_headings":"Configuring galah","what":"Caching","title":"Download data","text":"galah can cache results local files. means code run multiple times, second subsequent iterations faster. default, caching session-based, meaning local files stored temporary directory automatically deleted R session ended. behaviour can altered caching permanent, setting caching directory non-temporary location. default, caching turned . turn caching , run","code":"galah_config(cache_directory = \"example/dir\") galah_config(caching = FALSE)"},{"path":"https://galah.ala.org.au/articles/download_data.html","id":"setting-the-download-reason","dir":"Articles","previous_headings":"Configuring galah","what":"Setting the download reason","title":"Download data","text":"ALA requires provide reason downloading occurrence data (via galah atlas_occurrences() function). reason set “scientific research” default, can change using galah_config(). See show_all_reasons() valid download reasons.","code":"galah_config(download_reason_id = your_reason_id)"},{"path":"https://galah.ala.org.au/articles/download_data.html","id":"debugging","dir":"Articles","previous_headings":"Configuring galah","what":"Debugging","title":"Download data","text":"things aren’t working expected, detail (particularly web requests caching behaviour) can obtained setting verbose configuration option:","code":"galah_config(verbose = TRUE)"},{"path":"https://galah.ala.org.au/articles/look_up_information.html","id":"show_all-search_all","dir":"Articles","previous_headings":"","what":"show_all() & search_all()","title":"Look up information","text":"galah 1.5.0, two simplified functions look information: show_all() search_all(). individual functions able return types information one place, rather using specific sub-functions look information. example, show available Living Atlases supported: search specific available Living Atlas: show fields: search specific field: list information types can used show_all() search_all():","code":"show_all(atlases) ## # A tibble: 11 × 4 ##    region         institution                                                             acronym url                          ##    <chr>          <chr>                                                                   <chr>   <chr>                        ##  1 Australia      Atlas of Living Australia                                               ALA     https://www.ala.org.au       ##  2 Austria        Biodiversitäts-Atlas Österreich                                         BAO     https://biodiversityatlas.at ##  3 Brazil         Sistemas de Informações sobre a Biodiversidade Brasileira               SiBBr   https://sibbr.gov.br         ##  4 Estonia        eElurikkus                                                              <NA>    https://elurikkus.ee         ##  5 France         Portail français d'accès aux données d'observation sur les espèces      OpenObs https://openobs.mnhn.fr/     ##  6 Global         Global Biodiversity Information Facility                                GBIF    https://gbif.org             ##  7 Guatemala      Sistema Nacional de Información sobre Diversidad Biológica de Guatemala SNIBgt  https://snib.conap.gob.gt    ##  8 Portugal       GBIF Portugal                                                           GBIF.pt https://www.gbif.pt          ##  9 Spain          GBIF Spain                                                              GBIF.es https://www.gbif.es          ## 10 Sweden         Swedish Biodiversity Data Infrastructure                                SBDI    https://biodiversitydata.se  ## 11 United Kingdom National Biodiversity Network                                           NBN     https://nbn.org.uk search_all(atlases, \"Spain\") ## # A tibble: 1 × 4 ##   region institution acronym url                 ##   <chr>  <chr>       <chr>   <chr>               ## 1 Spain  GBIF Spain  GBIF.es https://www.gbif.es show_all(fields) ## # A tibble: 573 × 4 ##    id                    description                                                                                        type   link  ##    <chr>                 <chr>                                                                                              <chr>  <chr> ##  1 abcdTypeStatus        ABCD field in use by herbaria                                                                      fields <NA>  ##  2 acceptedNameUsage     http://rs.tdwg.org/dwc/terms/acceptedNameUsage                                                     fields <NA>  ##  3 acceptedNameUsageID   http://rs.tdwg.org/dwc/terms/acceptedNameUsageID                                                   fields <NA>  ##  4 accessRights          <NA>                                                                                               fields <NA>  ##  5 assertionUserId       User ID of the person who has made an assertion about this record                                  fields <NA>  ##  6 assertions            A list of all assertions (user and system supplied) for a record resulting from data quality tests fields <NA>  ##  7 associatedMedia       http://rs.tdwg.org/dwc/terms/associatedMedia                                                       fields <NA>  ##  8 associatedOccurrences http://rs.tdwg.org/dwc/terms/associatedOccurrences                                                 fields <NA>  ##  9 associatedOrganisms   http://rs.tdwg.org/dwc/terms/associatedOrganisms                                                   fields <NA>  ## 10 associatedReferences  http://rs.tdwg.org/dwc/terms/associatedReferences                                                  fields <NA>  ## # … with 563 more rows search_all(fields, \"australian states\") ## # A tibble: 2 × 4 ##   id     description                                                                                                         type   link    ##   <chr>  <chr>                                                                                                               <chr>  <chr>   ## 1 cl2013 ASGS Australian States and Territories Australian Statistical Geography Standard  Australian States and Territories layers http:/… ## 2 cl22   Australian States and Territories Australian States and Territories                                                 layers http:/…"},{"path":"https://galah.ala.org.au/articles/look_up_information.html","id":"show_all_-subfunctions","dir":"Articles","previous_headings":"","what":"show_all_ subfunctions","title":"Look up information","text":"show_all useful variety cases, can still call underlying subfunctions prefer. functions - prefix show_all_ - return tibble exactly ; showing possible values category specified. functions include: show_all_fields show_all_atlases show_all_ranks show_all_profiles show_all_reasons show_all_cached_files show_all_ functions require arguments. Simply call function return accepted values tibble:","code":"show_all_atlases() ## # A tibble: 11 × 4 ##    region         institution                                                             acronym url                          ##    <chr>          <chr>                                                                   <chr>   <chr>                        ##  1 Australia      Atlas of Living Australia                                               ALA     https://www.ala.org.au       ##  2 Austria        Biodiversitäts-Atlas Österreich                                         BAO     https://biodiversityatlas.at ##  3 Brazil         Sistemas de Informações sobre a Biodiversidade Brasileira               SiBBr   https://sibbr.gov.br         ##  4 Estonia        eElurikkus                                                              <NA>    https://elurikkus.ee         ##  5 France         Portail français d'accès aux données d'observation sur les espèces      OpenObs https://openobs.mnhn.fr/     ##  6 Global         Global Biodiversity Information Facility                                GBIF    https://gbif.org             ##  7 Guatemala      Sistema Nacional de Información sobre Diversidad Biológica de Guatemala SNIBgt  https://snib.conap.gob.gt    ##  8 Portugal       GBIF Portugal                                                           GBIF.pt https://www.gbif.pt          ##  9 Spain          GBIF Spain                                                              GBIF.es https://www.gbif.es          ## 10 Sweden         Swedish Biodiversity Data Infrastructure                                SBDI    https://biodiversitydata.se  ## 11 United Kingdom National Biodiversity Network                                           NBN     https://nbn.org.uk show_all_reasons() ## # A tibble: 13 × 2 ##       id name                             ##    <int> <chr>                            ##  1     0 conservation management/planning ##  2     1 biosecurity management/planning  ##  3     2 environmental assessment         ##  4     3 education                        ##  5     4 scientific research              ##  6     5 collection management            ##  7     6 other                            ##  8     7 ecological research              ##  9     8 systematic research/taxonomy     ## 10    10 testing                          ## 11    11 citizen science                  ## 12    12 restoration/remediation          ## 13    13 species modelling"},{"path":"https://galah.ala.org.au/articles/look_up_information.html","id":"search_-subfunctions","dir":"Articles","previous_headings":"","what":"search_ subfunctions","title":"Look up information","text":"second subset lookup subfunctions use search_ prefix, differ show_all_ require query work. used search detailed information can’t summarised across whole atlas, include: search_taxa search_identifiers search_fields show_values Search single taxon multiple taxa name search_taxa. Alternatively, search_identifiers partner function search_taxa. already know taxonomic identifier, can search taxa identifier belongs search_identifiers: Sifting output show_all_fields find specific field can inefficient. Instead, might wish use search_fields look specific fields match search. search_taxa, search_fields requires query work.","code":"search_taxa(\"reptilia\") ## # A tibble: 1 × 9 ##   search_term scientific_name taxon_concept_id                                                    rank  match…¹ kingdom phylum class issues ##   <chr>       <chr>           <chr>                                                               <chr> <chr>   <chr>   <chr>  <chr> <chr>  ## 1 reptilia    REPTILIA        https://biodiversity.org.au/afd/taxa/682e1228-5b3c-45ff-833b-550ef… class exactM… Animal… Chord… Rept… noIss… ## # … with abbreviated variable name ¹​match_type search_taxa(\"reptilia\", \"aves\", \"mammalia\", \"pisces\") ## # A tibble: 4 × 10 ##   search_term scientific_name taxon_concept_id                                            rank  match…¹ kingdom phylum class issues verna…² ##   <chr>       <chr>           <chr>                                                       <chr> <chr>   <chr>   <chr>  <chr> <chr>  <chr>   ## 1 reptilia    REPTILIA        https://biodiversity.org.au/afd/taxa/682e1228-5b3c-45ff-83… class exactM… Animal… Chord… Rept… noIss… <NA>    ## 2 aves        AVES            https://biodiversity.org.au/afd/taxa/65625205-db74-4a87-b5… class exactM… Animal… Chord… Aves  noIss… Birds   ## 3 mammalia    MAMMALIA        https://biodiversity.org.au/afd/taxa/e9e7db31-04df-41fb-bd… class exactM… Animal… Chord… Mamm… noIss… Mammals ## 4 pisces      PISCES          https://biodiversity.org.au/afd/taxa/e22efeb4-2cb5-4250-8d… <NA>  exactM… Animal… Chord… <NA>  noIss… Fishes  ## # … with abbreviated variable names ¹​match_type, ²​vernacular_name search_identifiers(\"urn:lsid:biodiversity.org.au:afd.taxon:682e1228-5b3c-45ff-833b-550efd40c399\") ## # A tibble: 1 × 8 ##   scientific_name taxon_concept_id                                                          rank  match_type   kingdom  phylum class issues ##   <chr>           <chr>                                                                     <chr> <chr>        <chr>    <chr>  <chr> <chr>  ## 1 REPTILIA        https://biodiversity.org.au/afd/taxa/682e1228-5b3c-45ff-833b-550efd40c399 class taxonIdMatch Animalia Chord… Rept… noIss… search_fields(\"date\") |> head() ## # A tibble: 6 × 4 ##   id            description                                                                                                     type  link  ##   <chr>         <chr>                                                                                                           <chr> <chr> ## 1 month         \"Month of observation, specimen collection date. http://rs.tdwg.org/dwc/terms/month\"                            fiel… <NA>  ## 2 eventDate     \"The ISO formatted date of observation, specimen collection date. http://rs.tdwg.org/dwc/terms/eventDate\"       fiel… <NA>  ## 3 cl10903       \"Tenure of Australia's forests (2013) v2.0 Tenure of Australia's forests (2013) v2.0 is a continental dataset … laye… http… ## 4 cl10955       \"National Indicative Aggregated Fire Extent Dataset 2019-2020 - v20200324 The National Indicative Aggregated F… laye… http… ## 5 lastLoadDate   <NA>                                                                                                           fiel… <NA>  ## 6 datePrecision \"The precision of the date information for the record. Values include Day, Month, Year, Year range, Month rang… fiel… <NA>"},{"path":"https://galah.ala.org.au/articles/look_up_information.html","id":"show_values-search_values","dir":"Articles","previous_headings":"","what":"show_values() & search_values()","title":"Look up information","text":"desired field found, can use show_values understand information contained within field, e.g. provides information need pass meaningful queries galah_filter. works several types query, data profiles: collections:","code":"search_all(fields, \"basis\") |> show_values() ## ! Search returned 2 matched fields. ## • Showing values for 'basisOfRecord'. ## # A tibble: 9 × 2 ##   field         category            ##   <chr>         <chr>               ## 1 basisOfRecord HUMAN_OBSERVATION   ## 2 basisOfRecord PRESERVED_SPECIMEN  ## 3 basisOfRecord OBSERVATION         ## 4 basisOfRecord OCCURRENCE          ## 5 basisOfRecord MACHINE_OBSERVATION ## 6 basisOfRecord MATERIAL_SAMPLE     ## 7 basisOfRecord LIVING_SPECIMEN     ## 8 basisOfRecord MATERIAL_CITATION   ## 9 basisOfRecord FOSSIL_SPECIMEN galah_call() |>    galah_filter(basisOfRecord == \"LIVING_SPECIMEN\") |>    atlas_counts() ## # A tibble: 1 × 1 ##    count ##    <int> ## 1 213918 search_all(profiles, \"ALA\") |>    show_values() |>    head() ## ! Search returned 2 matched profiles. ## • Showing values for 'ALA'. ## # A tibble: 6 × 2 ##   description                                                                                                                        filter ##   <chr>                                                                                                                              <chr>  ## 1 \"Exclude all records where spatial validity is \\\"false\\\"\"                                                                          \"-spa… ## 2 \"Exclude all records with an assertion that the scientific name provided does not match any of the names lists used by the ALA.  … \"-ass… ## 3 \"Exclude all records with an assertion that the scientific name provided is not structured as a valid scientific name. Also catch… \"-ass… ## 4 \"Exclude all records with an assertion that the name and classification supplied can't be used to choose between 2 homonyms\"       \"-ass… ## 5 \"Exclude all records with an assertion that kingdom provided doesn't match a known kingdom e.g. Animalia, Plantae\"                 \"-ass… ## 6 \"Exclude all records with an assertion that the scientific name provided in the record does not match the expected taxonomic scop… \"-ass… search_all(collections, \"herbarium\") |>    show_values() |>    head() ## ! Search returned 21 matched collections. ## • Showing values for 'co214'. ## # A tibble: 1 × 17 ##   name            acronym uid   phone  email pubDe…¹ latit…² longi…³ websi…⁴ alaPu…⁵ dateC…⁶ lastU…⁷ userL…⁸ active numRe…⁹ numRe…˟ geogr…˟ ##   <chr>           <chr>   <chr> <chr>  <chr> <chr>     <dbl>   <dbl> <chr>   <chr>   <chr>   <chr>   <chr>   <chr>    <int>   <int> <chr>   ## 1 Allan Herbarium CHR     co214 +64 3… Herb… \"The A…   -43.6    172. http:/… https:… 2015-0… 2021-1… not av… Activ…  660000  236000 Worldw… ## # … with abbreviated variable names ¹​pubDescription, ²​latitude, ³​longitude, ⁴​websiteUrl, ⁵​alaPublicUrl, ⁶​dateCreated, ⁷​lastUpdated, ## #   ⁸​userLastModified, ⁹​numRecords, ˟​numRecordsDigitised, ˟​geographicDescription"},{"path":"https://galah.ala.org.au/articles/narrow_your_results.html","id":"galah_identify-search_taxa","dir":"Articles","previous_headings":"","what":"galah_identify & search_taxa","title":"Narrow your results","text":"Perhaps unsurprisingly, search_taxa searches taxonomic information. uses fuzzy matching work lot like search bar Atlas Living Australia website, can use search taxa scientific name. Finding desired taxon search_taxa important step using taxonomic information download data galah. example, search reptiles, first need identify whether correct query: want specific providing additional taxonomic information search_taxa, can provide data.frame containing levels taxonomic hierarchy: know search matches correct taxon taxa, can use galah_identify narrow results queries: ’re using international atlas, search_taxa automatically switch using local name-matching service. example, Portugal uses GBIF taxonomic backbone, integrates seamlessly standard workflow. Conversely, UK’s National Biodiversity Network (NBN), ’ taxonomic backbone, supported using function call.","code":"search_taxa(\"Reptilia\") ## # A tibble: 1 × 9 ##   search_term scientific_name taxon_concept_id                                                    rank  match…¹ kingdom phylum class issues ##   <chr>       <chr>           <chr>                                                               <chr> <chr>   <chr>   <chr>  <chr> <chr>  ## 1 Reptilia    REPTILIA        https://biodiversity.org.au/afd/taxa/682e1228-5b3c-45ff-833b-550ef… class exactM… Animal… Chord… Rept… noIss… ## # … with abbreviated variable name ¹​match_type search_taxa(data.frame(genus = \"Eolophus\", kingdom = \"Aves\")) ## # A tibble: 1 × 13 ##   search_term   scientific_name scientific_name_authorship taxon_concept_id    rank  match…¹ kingdom phylum class order family genus issues ##   <chr>         <chr>           <chr>                      <chr>               <chr> <chr>   <chr>   <chr>  <chr> <chr> <chr>  <chr> <chr>  ## 1 Eolophus_Aves Eolophus        Bonaparte, 1854            https://biodiversi… genus exactM… Animal… Chord… Aves  Psit… Cacat… Eolo… noIss… ## # … with abbreviated variable name ¹​match_type galah_call() |>   galah_identify(\"Reptilia\") |>   atlas_counts() ## # A tibble: 1 × 1 ##     count ##     <int> ## 1 1483960 taxa <- search_taxa(data.frame(genus = \"Eolophus\", kingdom = \"Aves\"))  galah_call() |>  galah_identify(taxa) |>  atlas_counts() ## # A tibble: 1 × 1 ##    count ##    <int> ## 1 948989 galah_config(atlas = \"Portugal\") ## Atlas selected: GBIF Portugal (GBIF.pt) [Portugal] galah_call() |>    galah_identify(\"Lepus\") |>    galah_group_by(species) |>    atlas_counts() ## # A tibble: 5 × 2 ##   species           count ##   <chr>             <int> ## 1 Lepus granatensis  1378 ## 2 Lepus microtis       64 ## 3 Lepus europaeus      10 ## 4 Lepus saxatilis       2 ## 5 Lepus capensis        1 galah_config(atlas = \"United Kingdom\") ## Atlas selected: National Biodiversity Network (NBN) [United Kingdom] galah_call() |>    galah_identify(\"Bufo\") |>    galah_group_by(species) |>    atlas_counts() ## # A tibble: 2 × 2 ##   species       count ##   <chr>         <int> ## 1 Bufo bufo     75771 ## 2 Bufo spinosus     1 ## Atlas selected: Atlas of Living Australia (ALA) [Australia]"},{"path":"https://galah.ala.org.au/articles/narrow_your_results.html","id":"galah_filter","dir":"Articles","previous_headings":"","what":"galah_filter","title":"Narrow your results","text":"Perhaps important function galah galah_filter, used filter rows queries: find available fields corresponding valid values, use field lookup functions show_all(fields), search_all(fields) & show_values(). Finally, special case galah_filter make complex taxonomic queries possible using search_taxa. using taxonConceptID field, possible build queries exclude certain taxa, example. can useful paraphyletic concepts invertebrates:","code":"# Get total record count since 2000 galah_call() |>   galah_filter(year > 2000) |>   atlas_counts() ## # A tibble: 1 × 1 ##      count ##      <int> ## 1 72951416 # Get total record count for iNaturalist in 2021 galah_call() |>   galah_filter(     year > 2000,     dataResourceName == \"iNaturalist Australia\") |>   atlas_counts() ## # A tibble: 1 × 1 ##     count ##     <int> ## 1 4093059 galah_call() |>   galah_filter(      taxonConceptID == search_taxa(\"Animalia\")$taxon_concept_id,      taxonConceptID != search_taxa(\"Chordata\")$taxon_concept_id   ) |>   galah_group_by(class) |>   atlas_counts() ## # A tibble: 83 × 2 ##    class          count ##    <chr>          <int> ##  1 Insecta      4130497 ##  2 Gastropoda    884000 ##  3 Arachnida     575918 ##  4 Malacostraca  562801 ##  5 Maxillopoda   424030 ##  6 Polychaeta    257849 ##  7 Bivalvia      216585 ##  8 Anthozoa      170859 ##  9 Demospongiae  113698 ## 10 Ostracoda      59272 ## # … with 73 more rows"},{"path":"https://galah.ala.org.au/articles/narrow_your_results.html","id":"galah_apply_profile","dir":"Articles","previous_headings":"","what":"galah_apply_profile","title":"Narrow your results","text":"working ALA, notable feature ability specify profile remove records suspect way. see full list data quality profiles, use show_all(profiles).","code":"galah_call() |>   galah_filter(year > 2000) |>   galah_apply_profile(ALA) |>   atlas_counts() ## # A tibble: 1 × 1 ##      count ##      <int> ## 1 65961801"},{"path":"https://galah.ala.org.au/articles/narrow_your_results.html","id":"galah_group_by","dir":"Articles","previous_headings":"","what":"galah_group_by","title":"Narrow your results","text":"Use galah_group_by group record counts summarise counts specified fields:","code":"# Get record counts since 2010, grouped by year and basis of record galah_call() |>   galah_filter(year > 2015 & year <= 2020) |>   galah_group_by(year, basisOfRecord) |>   atlas_counts() ## # A tibble: 25 × 3 ##    basisOfRecord     year    count ##    <chr>             <chr>   <int> ##  1 HUMAN_OBSERVATION 2020  6309237 ##  2 HUMAN_OBSERVATION 2019  5517222 ##  3 HUMAN_OBSERVATION 2018  5219772 ##  4 HUMAN_OBSERVATION 2017  4313434 ##  5 HUMAN_OBSERVATION 2016  3483112 ##  6 OCCURRENCE        2016   165997 ##  7 OCCURRENCE        2018   116242 ##  8 OCCURRENCE        2017   102206 ##  9 OCCURRENCE        2019    91640 ## 10 OCCURRENCE        2020    39429 ## # … with 15 more rows"},{"path":"https://galah.ala.org.au/articles/narrow_your_results.html","id":"galah_select","dir":"Articles","previous_headings":"","what":"galah_select","title":"Narrow your results","text":"Use galah_select choose columns returned downloading records: can also use dplyr functions work dplyr::select() galah_select()","code":"# Get *Reptilia* records from 1930, but only 'eventDate' and 'kingdom' columns occurrences <- galah_call() |>   galah_identify(\"reptilia\") |>   galah_filter(year == 1930) |>   galah_select(eventDate, kingdom) |>   atlas_occurrences()  occurrences |> head() ## # A tibble: 6 × 2 ##   eventDate           kingdom  ##   <dttm>              <chr>    ## 1 1929-12-31 14:00:00 Animalia ## 2 1929-12-31 14:00:00 Animalia ## 3 1929-12-31 14:00:00 Animalia ## 4 1929-12-31 14:00:00 Animalia ## 5 1929-12-31 14:00:00 Animalia ## 6 1929-12-31 14:00:00 Animalia occurrences <- galah_call() |>   galah_identify(\"reptilia\") |>   galah_filter(year == 1930) |>   galah_select(starts_with(\"elev\") & ends_with(\"n\")) |>   atlas_occurrences()  occurrences |> head() ## # A tibble: 6 × 55 ##   recordID  catal…¹ taxon…² verba…³ raw_v…⁴ scien…⁵ taxon…⁶ verna…⁷ kingdom phylum class order family genus species subsp…⁸ dataR…⁹ insti…˟ ##   <chr>     <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>  <chr> <chr> <chr>  <chr> <chr>   <chr>   <chr>   <chr>   ## 1 050d4cec… J3729   https:… Oxyura… coasta… Oxyura… species Taipan  Animal… Chord… Rept… Squa… Elapi… Oxyu… Oxyura… <NA>    dr1132  <NA>    ## 2 0aee0e05… 391391  https:… Tympan… Lined … Tympan… species Grassl… Animal… Chord… Rept… Squa… Agami… Tymp… Tympan… <NA>    dr361   <NA>    ## 3 0cbfa7cb… R36835  https:… Natrix… <NA>    COLUBR… family  <NA>    Animal… Chord… Rept… Squa… Colub… <NA>  <NA>    <NA>    dr346   in22    ## 4 0fb28f26… <NA>    https:… Notech… easter… Notech… species Tiger … Animal… Chord… Rept… Squa… Elapi… Note… Notech… <NA>    dr1132  <NA>    ## 5 15e65c09… 34102   https:… Emydur… Murray… Emydur… subspe… Macqua… Animal… Chord… Rept… Test… Cheli… Emyd… Emydur… Emydur… dr1132  <NA>    ## 6 170fbb84… 77798   https:… Deniso… orname… Deniso… species Orname… Animal… Chord… Rept… Squa… Elapi… Deni… Deniso… <NA>    dr1132  <NA>    ## # … with 37 more variables: institutionName <chr>, collectionUid <chr>, collectionName <chr>, `dcterms:license` <chr>, ## #   institutionCode <chr>, collectionCode <chr>, locality <chr>, verbatimLatitude <dbl>, verbatimLongitude <dbl>, ## #   verbatimCoordinateSystem <chr>, decimalLatitude <dbl>, decimalLongitude <dbl>, coordinatePrecision <dbl>, ## #   coordinateUncertaintyInMeters <dbl>, country <chr>, stateProvince <chr>, cl959 <chr>, cl21 <chr>, cl1048 <chr>, ## #   minimumElevationInMeters <lgl>, maximumElevationInMeters <lgl>, minimumDepthInMeters <lgl>, maximumDepthInMeters <lgl>, ## #   individualCount <dbl>, recordedBy <chr>, year <dbl>, month <dbl>, day <dbl>, eventDate <dttm>, verbatimBasisOfRecord <chr>, ## #   basisOfRecord <chr>, occurrenceStatus <chr>, raw_sex <chr>, preparations <chr>, informationWithheld <lgl>, …"},{"path":"https://galah.ala.org.au/articles/narrow_your_results.html","id":"galah_geolocate","dir":"Articles","previous_headings":"","what":"galah_geolocate","title":"Narrow your results","text":"Use galah_geolocate specify geographic area region limit search:","code":"# Get list of perameles species only in area specified: # (Note: This can also be specified by a shapefile) wkt <- \"POLYGON((131.36328125 -22.506468769126,135.23046875 -23.396716654542,134.17578125 -27.287832521411,127.40820312499 -26.661206402316,128.111328125 -21.037340349154,131.36328125 -22.506468769126))\"  galah_call() |>   galah_identify(\"perameles\") |>   galah_geolocate(wkt) |>   atlas_species() ## # A tibble: 2 × 10 ##   kingdom  phylum   class    order           family      genus     species                author               species_guid         verna…¹ ##   <chr>    <chr>    <chr>    <chr>           <chr>       <chr>     <chr>                  <chr>                <chr>                <chr>   ## 1 Animalia Chordata Mammalia Peramelemorphia Peramelidae Perameles Perameles eremiana     Spencer, 1897        https://biodiversit… Desert… ## 2 Animalia Chordata Mammalia Peramelemorphia Peramelidae Perameles Perameles bougainville Quoy & Gaimard, 1824 https://biodiversit… Shark … ## # … with abbreviated variable name ¹​vernacular_name"},{"path":"https://galah.ala.org.au/articles/narrow_your_results.html","id":"galah_down_to","dir":"Articles","previous_headings":"","what":"galah_down_to","title":"Narrow your results","text":"Use galah_down_to specify lowest taxonomic level contruct taxonomic tree:","code":"galah_call() |>   galah_identify(\"fungi\") |>   galah_down_to(phylum) |>   atlas_taxonomy() ##                    levelName ## 1  Fungi                     ## 2   ¦--Dikarya               ## 3   ¦   °--Entorrhizomycota  ## 4   ¦--Ascomycota            ## 5   ¦--Basidiomycota         ## 6   ¦--Blastocladiomycota    ## 7   ¦--Chytridiomycota       ## 8   ¦--Cryptomycota          ## 9   ¦--Glomeromycota         ## 10  ¦--Microspora            ## 11  ¦--Microsporidia         ## 12  ¦--Mucoromycota          ## 13  ¦--Neocallimastigomycota ## 14  ¦--Zoopagomycota         ## 15  °--Zygomycota"},{"path":"https://galah.ala.org.au/articles/piping.html","id":"piping-with-galah_call","dir":"Articles","previous_headings":"","what":"Piping with galah_call()","title":"Piping in galah","text":"may noticed examples dplyr pipes begin data, galah pipes begin galah_call() (sure add parentheses!). function tells galah using pipes construct query. Follow preferred pipe (|> base %>% magrittr). can narrow query line--line using galah_ functions. Finally, end atlas_ function identify type data want query. example using counts bandicoot records: second example, download occurrence records bandicoots 2021, also include information records zero coordinates: Note order galah_ functions added doesn’t matter, long galah_call() goes first, atlas_ function comes last.","code":"galah_call() |>   galah_identify(\"perameles\") |>   galah_filter(year >= 2020) |>   galah_group_by(species, year) |>   atlas_counts() ## # A tibble: 13 × 3 ##    year  species                count ##    <chr> <chr>                  <int> ##  1 2021  Perameles nasuta        2466 ##  2 2021  Perameles bougainville    70 ##  3 2021  Perameles gunnii          59 ##  4 2021  Perameles pallescens      23 ##  5 2020  Perameles nasuta        1388 ##  6 2020  Perameles gunnii          39 ##  7 2020  Perameles pallescens      11 ##  8 2020  Perameles bougainville     1 ##  9 2022  Perameles nasuta         377 ## 10 2022  Perameles gunnii          57 ## 11 2022  Perameles pallescens      28 ## 12 2023  Perameles gunnii           4 ## 13 2023  Perameles nasuta           3 galah_call() |>   galah_identify(\"perameles\") |>   galah_filter(year == 2021) |>   galah_select(group = \"basic\", ZERO_COORDINATE) |>   atlas_occurrences() |>   head() ## # A tibble: 6 × 9 ##   decimalLatitude decimalLongitude eventDate           scientificName   taxonConceptID                      recor…¹ dataR…² occur…³ ZERO_…⁴ ##             <dbl>            <dbl> <dttm>              <chr>            <chr>                               <chr>   <chr>   <chr>   <lgl>   ## 1           -43.1             148. 2021-05-09 08:06:02 Perameles gunnii https://biodiversity.org.au/afd/ta… 6f258c… iNatur… PRESENT FALSE   ## 2           -43.0             147. 2021-03-31 21:00:16 Perameles gunnii https://biodiversity.org.au/afd/ta… 40d963… iNatur… PRESENT FALSE   ## 3           -43.0             148. 2021-06-24 12:55:00 Perameles gunnii https://biodiversity.org.au/afd/ta… 62724c… iNatur… PRESENT FALSE   ## 4           -43.0             147. 2021-02-06 14:09:00 Perameles gunnii https://biodiversity.org.au/afd/ta… ef4fe0… iNatur… PRESENT FALSE   ## 5           -43.0             147. 2021-09-14 04:39:45 Perameles gunnii https://biodiversity.org.au/afd/ta… 7900b1… iNatur… PRESENT FALSE   ## 6           -42.9             147. 2021-07-21 19:42:41 Perameles gunnii https://biodiversity.org.au/afd/ta… c3cc63… iNatur… PRESENT FALSE   ## # … with abbreviated variable names ¹​recordID, ²​dataResourceName, ³​occurrenceStatus, ⁴​ZERO_COORDINATE"},{"path":"https://galah.ala.org.au/articles/piping.html","id":"using-dplyr-functions-in-galah","dir":"Articles","previous_headings":"","what":"Using dplyr functions in galah","title":"Piping in galah","text":"version 1.5.1, possible call dplyr functions natively within galah amend queries processed, .e.: full list masked functions : identify() ({graphics}) synonym galah_identify() select() (dplyr) synonym galah_select() group_by() (dplyr) synonym galah_group_by() slice_head() (dplyr) synonym limit argument atlas_counts() st_crop() (sf) synonym galah_polygon() count() (dplyr) synonym atlas_counts()","code":"# galah syntax galah_call() |>   galah_filter(year >= 2020) |>   galah_group_by(year) |>   atlas_counts() ## # A tibble: 4 × 2 ##   year    count ##   <chr>   <int> ## 1 2021  7155750 ## 2 2020  6419193 ## 3 2022  1547173 ## 4 2023    27895 # dplyr syntax galah_call() |>   filter(year >= 2020) |>   group_by(year) |>   count() ## # A tibble: 4 × 2 ##   year    count ##   <chr>   <int> ## 1 2021  7155750 ## 2 2020  6419193 ## 3 2022  1547173 ## 4 2023    27895"},{"path":"https://galah.ala.org.au/articles/quick_start_guide.html","id":"about","dir":"Articles","previous_headings":"","what":"About","title":"Quick start guide","text":"galah R interface biodiversity data hosted ‘living atlases’; set organisations share common codebase, act nodes Global Biodiversity Information Facility (GBIF). organisations collate store observations individual life forms, using ‘Darwin Core’ data standard. galah enables users locate download species observations, taxonomic information, record counts, associated media images sounds. Users can restrict queries particular taxa locations specifying columns rows returned query, restricting results observations meet particular quality-control criteria. minor exceptions, functions return tibble standard format.","code":""},{"path":"https://galah.ala.org.au/articles/quick_start_guide.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Quick start guide","text":"install CRAN: install development version GitHub: Load package","code":"install.packages(\"galah\") install.packages(\"remotes\") remotes::install_github(\"AtlasOfLivingAustralia/galah\") library(galah)"},{"path":"https://galah.ala.org.au/articles/quick_start_guide.html","id":"choosing-an-atlas","dir":"Articles","previous_headings":"","what":"Choosing an atlas","title":"Quick start guide","text":"default, galah downloads information Atlas Living Australia (ALA). show full list Atlases currently supported galah, use show_all(atlases). Use galah_config() set Atlas use. automatically populate server configuration selected Atlas. default, atlas Australia.","code":"show_all(atlases) ## # A tibble: 11 × 4 ##    region         institution                                                             acronym url                          ##    <chr>          <chr>                                                                   <chr>   <chr>                        ##  1 Australia      Atlas of Living Australia                                               ALA     https://www.ala.org.au       ##  2 Austria        Biodiversitäts-Atlas Österreich                                         BAO     https://biodiversityatlas.at ##  3 Brazil         Sistemas de Informações sobre a Biodiversidade Brasileira               SiBBr   https://sibbr.gov.br         ##  4 Estonia        eElurikkus                                                              <NA>    https://elurikkus.ee         ##  5 France         Portail français d'accès aux données d'observation sur les espèces      OpenObs https://openobs.mnhn.fr/     ##  6 Global         Global Biodiversity Information Facility                                GBIF    https://gbif.org             ##  7 Guatemala      Sistema Nacional de Información sobre Diversidad Biológica de Guatemala SNIBgt  https://snib.conap.gob.gt    ##  8 Portugal       GBIF Portugal                                                           GBIF.pt https://www.gbif.pt          ##  9 Spain          GBIF Spain                                                              GBIF.es https://www.gbif.es          ## 10 Sweden         Swedish Biodiversity Data Infrastructure                                SBDI    https://biodiversitydata.se  ## 11 United Kingdom National Biodiversity Network                                           NBN     https://nbn.org.uk galah_config(atlas = \"United Kingdom\")"},{"path":"https://galah.ala.org.au/articles/quick_start_guide.html","id":"building-queries","dir":"Articles","previous_headings":"","what":"Building queries","title":"Quick start guide","text":"Functions return data chosen atlas prefix atlas_; e.g. find total number records atlas, use: pass complex queries, start galah_call() function pipe additional arguments modify query. modifying functions galah_ prefix support non-standard evaluation (NSE). Alternatively, can use subset dplyr verbs pipe queries, assuming start galah_call(). narrow search particular taxonomic group, use galah_identify() identify. Note function accepts scientific names case sensitive. ’s good practice first use search_taxa() check taxa provide returns correct taxonomic results.","code":"galah_config(atlas = \"ALA\") atlas_counts() ## # A tibble: 1 × 1 ##       count ##       <int> ## 1 113038010 galah_call() |>    galah_filter(year >= 2020) |>    atlas_counts() ## # A tibble: 1 × 1 ##      count ##      <int> ## 1 15150011 galah_call() |>   filter(year >= 2020) |>    group_by(year) |>   count() ## # A tibble: 4 × 2 ##   year    count ##   <chr>   <int> ## 1 2021  7155750 ## 2 2020  6419193 ## 3 2022  1547173 ## 4 2023    27895 search_taxa(\"reptilia\") # Check whether taxonomic info is correct ## # A tibble: 1 × 9 ##   search_term scientific_name taxon_concept_id                                                    rank  match…¹ kingdom phylum class issues ##   <chr>       <chr>           <chr>                                                               <chr> <chr>   <chr>   <chr>  <chr> <chr>  ## 1 reptilia    REPTILIA        https://biodiversity.org.au/afd/taxa/682e1228-5b3c-45ff-833b-550ef… class exactM… Animal… Chord… Rept… noIss… ## # … with abbreviated variable name ¹​match_type galah_call() |>   galah_filter(year >= 2020) |>    galah_identify(\"reptilia\") |>    atlas_counts() ## # A tibble: 1 × 1 ##    count ##    <int> ## 1 101979"},{"path":"https://galah.ala.org.au/articles/quick_start_guide.html","id":"downloading-records","dir":"Articles","previous_headings":"","what":"Downloading records","title":"Quick start guide","text":"common use case galah download ‘occurrence’ records; observations plants animals made contributors atlas. download, first register relevant atlas, provide registration email. GBIF queries, need provide email, username, password registered GBIF. can customise records require query atlas question: Check vignettes detail use functions.","code":"galah_config(email = \"email@email.com\") result <- galah_call() |>   galah_identify(\"Litoria\") |>   galah_filter(year >= 2020, cl22 == \"Tasmania\") |>   galah_select(basisOfRecord, group = \"basic\") |>   atlas_occurrences()  result |> head() ## # A tibble: 6 × 9 ##   decimalLatitude decimalLongitude eventDate           scientificName    taxonConceptID                     recor…¹ dataR…² occur…³ basis…⁴ ##             <dbl>            <dbl> <dttm>              <chr>             <chr>                              <chr>   <chr>   <chr>   <chr>   ## 1           -43.4             147. 2020-09-04 14:00:00 Litoria ewingii   https://biodiversity.org.au/afd/t… e8045b… FrogID  PRESENT HUMAN_… ## 2           -43.4             146. 2020-01-01 13:00:00 Litoria ewingii   https://biodiversity.org.au/afd/t… 44187a… FrogID  PRESENT HUMAN_… ## 3           -43.4             146. 2020-01-01 13:00:00 Litoria ewingii   https://biodiversity.org.au/afd/t… bc34a7… FrogID  PRESENT HUMAN_… ## 4           -43.4             146. 2020-01-01 13:00:00 Litoria ewingii   https://biodiversity.org.au/afd/t… ca4707… FrogID  PRESENT HUMAN_… ## 5           -43.4             146. 2020-01-01 13:00:00 Litoria burrowsae https://biodiversity.org.au/afd/t… 9c71f5… FrogID  PRESENT HUMAN_… ## 6           -43.4             146. 2020-01-01 13:00:00 Litoria ewingii   https://biodiversity.org.au/afd/t… 4bbaad… FrogID  PRESENT HUMAN_… ## # … with abbreviated variable names ¹​recordID, ²​dataResourceName, ³​occurrenceStatus, ⁴​basisOfRecord"},{"path":"https://galah.ala.org.au/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Martin Westgate. Author, maintainer. Matilda Stevenson. Author. Dax Kellie. Author. Peggy Newman. Author.","code":""},{"path":"https://galah.ala.org.au/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Westgate M, Stevenson M, Kellie D, Newman P (2023). galah: Atlas Living Australia (ALA) Data Resources R. R package version 1.5.2, https://CRAN.R-project.org/package=galah.","code":"@Manual{,   title = {galah: Atlas of Living Australia (ALA) Data and Resources in R},   author = {Martin Westgate and Matilda Stevenson and Dax Kellie and Peggy Newman},   year = {2023},   note = {R package version 1.5.2},   url = {https://CRAN.R-project.org/package=galah}, }"},{"path":"https://galah.ala.org.au/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"Biodiversity Data from the Living Atlas Community","text":"quick start guide provides introduction package functions. outline package structure, list available functions, run ?galah view reference page.","code":""},{"path":"https://galah.ala.org.au/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Biodiversity Data from the Living Atlas Community","text":"Install CRAN: Install development version GitHub: Linux first need ensure libcurl v8 (version <= 3.15) installed system — e.g. Ubuntu/Debian, open terminal : galah depends sf location-based searches. install galah need make sure system meets sf system requirements, specified ","code":"install.packages(\"galah\") install.packages(\"remotes\") remotes::install_github(\"AtlasOfLivingAustralia/galah\") sudo apt-get install libcurl4-openssl-dev libv8-3.14-dev"},{"path":"https://galah.ala.org.au/index.html","id":"citations","dir":"","previous_headings":"","what":"Citations","title":"Biodiversity Data from the Living Atlas Community","text":"generate citation package version using, can run ’re using occurrence data downloaded galah publication, please generate DOI cite . request DOI download occurrence record, set mint_doi = TRUE call atlas_occurrences(). generate citation downloaded occurrence records, pass data.frame generated atlas_citation().","code":"citation(package = \"galah\") # Download occurrence records with a DOI  occ <- atlas_occurrences(..., mint_doi = TRUE)  # See DOI attr(occ, \"doi\")  # Generate citation atlas_citation(occ)"},{"path":"https://galah.ala.org.au/reference/atlas_citation.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a citation for occurrence data — atlas_citation","title":"Generate a citation for occurrence data — atlas_citation","text":"data.frame generated using atlas_occurrences(), mint_doi argument set TRUE, DOI associated dataset appended resulting data.frame attribute. function simply formats DOI citation can included scientific publication. Please also consider citing package, using information citation(\"galah\").","code":""},{"path":"https://galah.ala.org.au/reference/atlas_citation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a citation for occurrence data — atlas_citation","text":"","code":"atlas_citation(data)"},{"path":"https://galah.ala.org.au/reference/atlas_citation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a citation for occurrence data — atlas_citation","text":"data data.frame: occurrence data generated atlas_occurrences()","code":""},{"path":"https://galah.ala.org.au/reference/atlas_citation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a citation for occurrence data — atlas_citation","text":"string containing citation dataset.","code":""},{"path":"https://galah.ala.org.au/reference/atlas_citation.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate a citation for occurrence data — atlas_citation","text":"","code":"if (FALSE) { atlas_citation(doi) }"},{"path":"https://galah.ala.org.au/reference/atlas_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Return a count of records — atlas_counts","title":"Return a count of records — atlas_counts","text":"Prior downloading data often valuable estimate many records available, deciding query feasible, estimating long take download. Alternatively, kinds reporting, count observations may required, example understanding observations growing shrinking particular locations, particular taxa. end, atlas_counts() takes arguments format atlas_occurrences(), provides either total count records matching criteria, data.frame counts matching criteria supplied group_by argument.","code":""},{"path":"https://galah.ala.org.au/reference/atlas_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return a count of records — atlas_counts","text":"","code":"atlas_counts(   request = NULL,   identify = NULL,   filter = NULL,   geolocate = NULL,   data_profile = NULL,   group_by = NULL,   limit = NULL,   type = c(\"record\", \"species\"),   refresh_cache = FALSE )"},{"path":"https://galah.ala.org.au/reference/atlas_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return a count of records — atlas_counts","text":"request optional data_request object: generated call galah_call(). identify data.frame: generated call galah_identify(). filter data.frame: generated call galah_filter() geolocate string: generated call galah_geolocate() data_profile string: generated call galah_apply_profile() group_by data.frame: object class galah_group_by, returned galah_group_by(). Alternatively vector field names (see search_all(fields) show_all(fields). limit numeric: maximum number categories return, defaulting 100. limit NULL, results returned. categories take . type string: one c(\"record\", \"species\"). Defaults \"record\". \"species\", number species matching criteria returned, \"record\", number records matching criteria returned. refresh_cache logical: set TRUE galah_config(caching = TRUE) files cached previous query replaced current query","code":""},{"path":"https://galah.ala.org.au/reference/atlas_counts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return a count of records — atlas_counts","text":"object class tbl_df data.frame (aka tibble) returning: single number, group_by specified , summary counts grouped field(s), group_by specified","code":""},{"path":"https://galah.ala.org.au/reference/atlas_counts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return a count of records — atlas_counts","text":"","code":"galah_call() |>   galah_filter(year == 2015) |>   atlas_counts() #> # A tibble: 1 × 1 #>     count #>     <int> #> 1 3740004"},{"path":"https://galah.ala.org.au/reference/atlas_media.html","id":null,"dir":"Reference","previous_headings":"","what":"Get metadata on images, sounds and videos — atlas_media","title":"Get metadata on images, sounds and videos — atlas_media","text":"addition text data describing individual occurrences attributes, ALA stores images, sounds videos associated given record. atlas_media displays metadata media types.","code":""},{"path":"https://galah.ala.org.au/reference/atlas_media.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get metadata on images, sounds and videos — atlas_media","text":"","code":"atlas_media(   request = NULL,   identify = NULL,   filter = NULL,   geolocate = NULL,   data_profile = NULL,   download_dir = NULL,   refresh_cache = FALSE )"},{"path":"https://galah.ala.org.au/reference/atlas_media.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get metadata on images, sounds and videos — atlas_media","text":"request optional data_request object: generated call galah_call(). identify data.frame: generated call galah_identify(). filter data.frame: generated call galah_filter() geolocate string: generated call galah_geolocate() data_profile string: generated call galah_apply_profile() download_dir string: path directory downloaded media stored. DEPRECATED; use collect_media() instead. refresh_cache logical: set TRUE galah_config(caching = TRUE) files cached previous query replaced current query. DEPRECATED; use collect_media() instead.","code":""},{"path":"https://galah.ala.org.au/reference/atlas_media.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get metadata on images, sounds and videos — atlas_media","text":"object class tbl_df data.frame (aka tibble) metadata requested media.","code":""},{"path":"https://galah.ala.org.au/reference/atlas_media.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get metadata on images, sounds and videos — atlas_media","text":"atlas_media() works first finding occurrence records matching filter contain media, downloading metadata media. actually download files , use collect_media(). may beneficial requesting large number records show progress bar setting verbose = TRUE galah_config().","code":""},{"path":[]},{"path":"https://galah.ala.org.au/reference/atlas_media.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get metadata on images, sounds and videos — atlas_media","text":"","code":"if (FALSE) { # Download Regent Honeyeater records with multimedia attached galah_call() |>   galah_identify(\"Regent Honeyeater\") |>   galah_filter(year == 2011) |>   atlas_media()  # Download multimedia galah_call() |>   galah_identify(\"Regent Honeyeater\") |>   galah_filter(year == 2011) |>   atlas_media() |>   collect_media(path = \"folder/your-directory\")  # Specify a single media type to download galah_call() |>   galah_identify(\"Eolophus Roseicapilla\") |>   galah_filter(multimedia == \"Sound\") |>   atlas_media()  # It's good to check how many records have media files before downloading galah_call() |>   galah_filter(multimedia == c(\"Image\", \"Sound\", \"Video\")) |>   galah_group_by(multimedia) |>   atlas_counts() }"},{"path":"https://galah.ala.org.au/reference/atlas_occurrences.html","id":null,"dir":"Reference","previous_headings":"","what":"Return occurrence records — atlas_occurrences","title":"Return occurrence records — atlas_occurrences","text":"common form data stored living atlases observations individual life forms, known 'occurrences'. function allows user search occurrence records match specific criteria, return data.frame analysis. Optionally, user can also request DOI given download facilitate citation re-use specific data resources.","code":""},{"path":"https://galah.ala.org.au/reference/atlas_occurrences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return occurrence records — atlas_occurrences","text":"","code":"atlas_occurrences(   request = NULL,   identify = NULL,   filter = NULL,   geolocate = NULL,   data_profile = NULL,   select = NULL,   mint_doi = FALSE,   doi = NULL,   refresh_cache = FALSE )"},{"path":"https://galah.ala.org.au/reference/atlas_occurrences.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return occurrence records — atlas_occurrences","text":"request optional data_request object: generated call galah_call(). identify data.frame: generated call galah_identify(). filter data.frame: generated call galah_filter() geolocate string: generated call galah_geolocate() data_profile string: generated call galah_apply_profile() select data.frame: generated call galah_select() mint_doi logical: default DOI generated. Set TRUE intend use data publication similar doi Use collect_occurrences instead. string: argument enables retrieval occurrence records previously downloaded ALA, using DOI generated data. refresh_cache logical: set TRUE galah_config(caching = TRUE) files cached previous query replaced current query","code":""},{"path":"https://galah.ala.org.au/reference/atlas_occurrences.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return occurrence records — atlas_occurrences","text":"object class tbl_df data.frame (aka tibble) occurrences, containing columns specified galah_select(). data.frame object following attributes: listing user-supplied arguments data_request (.e., identify, filter, geolocate, select) doi data download search_url query ALA API","code":""},{"path":"https://galah.ala.org.au/reference/atlas_occurrences.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Return occurrence records — atlas_occurrences","text":"Note unless care taken, queries can particularly large. cases simply take long time process, number requested records >50 million call return data. Users can test whether threshold reached first calling atlas_counts() using arguments intend pass atlas_occurrences(). may also beneficial requesting large number records show progress bar setting verbose = TRUE galah_config().","code":""},{"path":"https://galah.ala.org.au/reference/atlas_occurrences.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return occurrence records — atlas_occurrences","text":"","code":"if (FALSE) { # Download occurrence records for a specific taxon galah_config(email = \"your_email_here\") galah_call() |>   galah_identify(\"Reptilia\") |>   atlas_occurrences()  # Download occurrence records in a year range galah_call() |>   galah_identify(\"Litoria\") |>   galah_filter(year >= 2010 & year <= 2020) |>   atlas_occurrences()  # Download occurrences records in a WKT-specified area polygon <- \"POLYGON((146.24960 -34.05930,                      146.37045 -34.05930,                      146.37045 -34.152549,                      146.24960 -34.15254,                      146.24960 -34.05930))\" galah_call() |>    galah_identify(\"Reptilia\") |>   galah_filter(year >= 2010, year <= 2020) |>   galah_geolocate(polygon) |>   atlas_occurrences() }"},{"path":"https://galah.ala.org.au/reference/atlas_species.html","id":null,"dir":"Reference","previous_headings":"","what":"Return species lists — atlas_species","title":"Return species lists — atlas_species","text":"reasons users may need check every record meeting search criteria (.e. using atlas_occurrences()), common use case simply identify species occur specified region, time period, taxonomic group. function returns data.frame one row per species, columns giving associated taxonomic information.","code":""},{"path":"https://galah.ala.org.au/reference/atlas_species.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return species lists — atlas_species","text":"","code":"atlas_species(   request = NULL,   identify = NULL,   filter = NULL,   geolocate = NULL,   data_profile = NULL,   refresh_cache = FALSE )"},{"path":"https://galah.ala.org.au/reference/atlas_species.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return species lists — atlas_species","text":"request optional data_request object: generated call galah_call(). identify data.frame: generated call galah_identify(). filter data.frame: generated call galah_filter() geolocate string: generated call galah_geolocate() data_profile string: generated call galah_apply_profile() refresh_cache logical: set TRUE galah_config(caching = TRUE) files cached previous query replaced current query","code":""},{"path":"https://galah.ala.org.au/reference/atlas_species.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return species lists — atlas_species","text":"object class tbl_df data.frame (aka tibble), returning matching species data.frame object attributes listing user-supplied arguments data_request (.e., identify, filter, geolocate, columns)","code":""},{"path":"https://galah.ala.org.au/reference/atlas_species.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Return species lists — atlas_species","text":"primary use case function extract species-level information given set criteria defined search_taxa(), galah_filter() galah_geolocate(). purpose simply get taxonomic information restricted filtering, search_taxa() efficient. Similarly, counts required include filter without returning taxonomic detail, atlas_counts() efficient (see examples).","code":""},{"path":"https://galah.ala.org.au/reference/atlas_species.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return species lists — atlas_species","text":"","code":"# First register a valid email address galah_config(email = \"ala4r@ala.org.au\")  # Get a list of species within genus \"Heleioporus\" # (every row is a species with associated taxonomic data) galah_call() |>   galah_identify(\"Heleioporus\") |>   atlas_species() #> # A tibble: 6 × 10 #>   kingdom  phylum   class    order family   genus species author speci…¹ verna…² #>   <chr>    <chr>    <chr>    <chr> <chr>    <chr> <chr>   <chr>  <chr>   <chr>   #> 1 Animalia Chordata Amphibia Anura Limnody… Hele… Heleio… (Gray… https:… Moanin… #> 2 Animalia Chordata Amphibia Anura Limnody… Hele… Heleio… (Shaw… https:… Giant … #> 3 Animalia Chordata Amphibia Anura Limnody… Hele… Heleio… Gray,… https:… Wester… #> 4 Animalia Chordata Amphibia Anura Limnody… Hele… Heleio… (Lee … https:… Sand F… #> 5 Animalia Chordata Amphibia Anura Limnody… Hele… Heleio… (Lee … https:… Plains… #> 6 Animalia Chordata Amphibia Anura Limnody… Hele… Heleio… Lee, … https:… Wester… #> # … with abbreviated variable names ¹​species_guid, ²​vernacular_name  # Get a list of species within family \"Peramelidae\" galah_call() |>   galah_identify(\"peramelidae\") |>   atlas_species() #> # A tibble: 15 × 10 #>    kingdom  phylum   class    order  family genus species author speci…¹ verna…² #>    <chr>    <chr>    <chr>    <chr>  <chr>  <chr> <chr>   <chr>  <chr>   <chr>   #>  1 Animalia Chordata Mammalia Peram… Peram… Isoo… Isoodo… (Goul… https:… Northe… #>  2 Animalia Chordata Mammalia Peram… Peram… Pera… Perame… Geoff… https:… NA      #>  3 Animalia Chordata Mammalia Peram… Peram… Isoo… Isoodo… (Shaw… https:… Southe… #>  4 Animalia Chordata Mammalia Peram… Peram… Pera… Perame… Gray,… https:… Easter… #>  5 Animalia Chordata Mammalia Peram… Peram… Isoo… Isoodo… (Rams… https:… Golden… #>  6 Animalia Chordata Mammalia Peram… Peram… Isoo… Isoodo… (J.E.… https:… Quenda  #>  7 Animalia Chordata Mammalia Peram… Peram… Pera… Perame… Thoma… https:… NA      #>  8 Animalia Chordata Mammalia Peram… Peram… Pera… Perame… Quoy … https:… Shark … #>  9 Animalia Chordata Mammalia Peram… Peram… Echy… Echymi… (Pete… https:… Rufous… #> 10 Animalia Chordata Mammalia Peram… Peram… Isoo… Isoodo… Thoma… https:… NA      #> 11 Animalia Chordata Mammalia Peram… Peram… Pera… Perame… Spenc… https:… Desert… #> 12 Animalia Chordata Mammalia Peram… Peram… Pera… Perame… Travo… https:… Butter… #> 13 Animalia Chordata Mammalia Peram… Peram… Pera… Perame… Thoma… https:… South-… #> 14 Animalia Chordata Mammalia Peram… Peram… Pera… Perame… Wagne… https:… Marl    #> 15 Animalia Chordata Mammalia Peram… Peram… Pera… Perame… Gray,… https:… Liverp… #> # … with abbreviated variable names ¹​species_guid, ²​vernacular_name  # It's good idea to find how many species there are before downloading galah_call() |>   galah_identify(\"Heleioporus\") |>   atlas_counts(type = \"species\") #> # A tibble: 1 × 1 #>   count #>   <int> #> 1     6"},{"path":"https://galah.ala.org.au/reference/atlas_taxonomy.html","id":null,"dir":"Reference","previous_headings":"","what":"Search taxonomic trees — atlas_taxonomy","title":"Search taxonomic trees — atlas_taxonomy","text":"ALA ' internal taxonomy derived authoritative sources. atlas_taxonomy provides means query taxonomy, returning tree (class Node) showing lower clades contained within specified taxon.","code":""},{"path":"https://galah.ala.org.au/reference/atlas_taxonomy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search taxonomic trees — atlas_taxonomy","text":"","code":"atlas_taxonomy(request = NULL, identify = NULL, down_to = NULL)"},{"path":"https://galah.ala.org.au/reference/atlas_taxonomy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search taxonomic trees — atlas_taxonomy","text":"request optional data_request object: generated call galah_call(). identify data.frame: generated call galah_identify(). down_to identity clade downwards search stop. specified using object class character galah_down_to, returned galah_down_to(). Also accepts string.","code":""},{"path":"https://galah.ala.org.au/reference/atlas_taxonomy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search taxonomic trees — atlas_taxonomy","text":"tree consisting objects class Node, containing requested taxonomy. node contains following attributes: name: scientific name taxon question rank: taxonomic rank taxon belongs guid: unique identifier used ALA authority: source taxonomic name & identifier","code":""},{"path":"https://galah.ala.org.au/reference/atlas_taxonomy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Search taxonomic trees — atlas_taxonomy","text":"approach used function recursive, meaning becomes slow large queries atlas_taxonomy(search_taxa(\"Plantae\"), down_to = galah_down_to(species)). Although inputs search_taxa down_to case-insensitive, node names always returned title case.","code":""},{"path":[]},{"path":"https://galah.ala.org.au/reference/atlas_taxonomy.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search taxonomic trees — atlas_taxonomy","text":"","code":"# \\donttest{ # Get a taxonomic tree of *Chordata* down to the class level galah_call() |>    galah_identify(\"chordata\") |>   galah_down_to(class) |>   atlas_taxonomy() #>                             levelName #> 1  Chordata                           #> 2   ¦--Cephalochordata                #> 3   ¦   °--Amphioxi                   #> 4   ¦--Craniata                       #> 5   ¦   °--Agnatha                    #> 6   ¦       ¦--Cephalasipidomorphi    #> 7   ¦       °--Myxini                 #> 8   ¦--Tunicata                       #> 9   ¦   ¦--Appendicularia             #> 10  ¦   ¦--Ascidiacea                 #> 11  ¦   °--Thaliacea                  #> 12  °--Vertebrata                     #> 13      °--Gnathostomata              #> 14          ¦--Amphibia               #> 15          ¦--Aves                   #> 16          ¦--Mammalia               #> 17          ¦--Pisces                 #> 18          ¦   ¦--Actinopterygii     #> 19          ¦   ¦--Chondrichthyes     #> 20          ¦   ¦--Cephalaspidomorphi #> 21          ¦   °--Sarcopterygii      #> 22          °--Reptilia               # }"},{"path":"https://galah.ala.org.au/reference/clear_cached_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Clear previously cached files — clear_cached_files","title":"Clear previously cached files — clear_cached_files","text":"Deletes cached files within cached file directory query metadata","code":""},{"path":"https://galah.ala.org.au/reference/clear_cached_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clear previously cached files — clear_cached_files","text":"","code":"clear_cached_files()"},{"path":"https://galah.ala.org.au/reference/clear_cached_files.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Clear previously cached files — clear_cached_files","text":"return value; called side effect removing files","code":""},{"path":"https://galah.ala.org.au/reference/clear_cached_files.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clear previously cached files — clear_cached_files","text":"","code":"if (FALSE) { # First set caching to true with [galah_config()] galah_config(caching = TRUE)  # Then create a data query. # The data you download will be cached in a temporary directory. dat <- atlas_counts(group_by = galah_group_by(year))  # To clear your cached files directory, use `clear_cached_files()` clear_cached_files() }"},{"path":"https://galah.ala.org.au/reference/collect_media.html","id":null,"dir":"Reference","previous_headings":"","what":"Collect media files — collect_media","title":"Collect media files — collect_media","text":"function downloads full-sized thumbnail images media files using information atlas_media local directory.","code":""},{"path":"https://galah.ala.org.au/reference/collect_media.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collect media files — collect_media","text":"","code":"collect_media(   df,   type = c(\"full\", \"thumbnail\"),   path,   download_dir,   refresh_cache )"},{"path":"https://galah.ala.org.au/reference/collect_media.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collect media files — collect_media","text":"df tibble returned atlas_media() show_all(media) type string: either \"full\" download original images, \"thumbnail\" download thumbnails path string: path directory downloaded media stored download_dir Use path instead. refresh_cache logical: set TRUE galah_config(caching = TRUE) files cached previous query replaced current query. NOTE: Unclear works right now.","code":""},{"path":"https://galah.ala.org.au/reference/collect_media.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collect media files — collect_media","text":"Available image & media files downloaded user local directory.","code":""},{"path":"https://galah.ala.org.au/reference/collect_media.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Collect media files — collect_media","text":"","code":"if (FALSE) { # Use `atlas_media()` to return a `tibble` of records that contain media galah_call() |>    galah_identify(\"perameles\") |>   galah_filter(year == 2015) |>   atlas_media()  # To download media files, add `collect_media()` to the end of a query  galah_call() |>    galah_identify(\"perameles\") |>   galah_filter(year == 2015) |>   atlas_media() |>   collect_media(path = here::here(\"folder\", \"subfolder\")) }"},{"path":"https://galah.ala.org.au/reference/collect_occurrences.html","id":null,"dir":"Reference","previous_headings":"","what":"Collect occurrence records from a pre-existing DOI or URL — collect_occurrences","title":"Collect occurrence records from a pre-existing DOI or URL — collect_occurrences","text":"Download occurrence records using existing DOI URL. Pre-existing DOIs URLs come previously generated downloads using atlas_occurrences online.","code":""},{"path":"https://galah.ala.org.au/reference/collect_occurrences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collect occurrence records from a pre-existing DOI or URL — collect_occurrences","text":"","code":"collect_occurrences(url, doi)"},{"path":"https://galah.ala.org.au/reference/collect_occurrences.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collect occurrence records from a pre-existing DOI or URL — collect_occurrences","text":"url string: Retrieve occurrence records previously downloaded ALA, using URL provided via email. doi string: Retrieve occurrence records previously downloaded ALA, using DOI generated data.","code":""},{"path":"https://galah.ala.org.au/reference/collect_occurrences.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collect occurrence records from a pre-existing DOI or URL — collect_occurrences","text":"object class tbl_df data.frame (aka tibble) occurrences","code":""},{"path":"https://galah.ala.org.au/reference/collect_occurrences.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Collect occurrence records from a pre-existing DOI or URL — collect_occurrences","text":"","code":"if (FALSE) { # Download previously retrieved records using an existing DOI or URL collect_occurrences(doi = \"your-doi\")  # DOIs can be minted by adding `mint_doi = TRUE` to `atlas_occurrences()` records <-    galah_call() |>   galah_identify(\"perameles\") |>   galah_filter(year == 2001) |>   atlas_occurrences(mint_doi = TRUE)  attributes(records)$doi # return minted doi }"},{"path":[]},{"path":"https://galah.ala.org.au/reference/count.data_request.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count for object of class data_request — count.data_request","text":"","code":"# S3 method for data_request count(x, ..., wt, sort, name, type = c(\"record\", \"species\"))"},{"path":"https://galah.ala.org.au/reference/count.data_request.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count for object of class data_request — count.data_request","text":"x object class data_request, created using galah_call() ... currently ignored wt currently ignored sort currently ignored name currently ignored type string: one c(\"record\", \"species\"). Defaults \"record\". \"species\", number species matching criteria returned, \"record\", number records matching criteria returned.","code":""},{"path":[]},{"path":"https://galah.ala.org.au/reference/deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated functions — deprecated","title":"Deprecated functions — deprecated","text":"Use galah_identify() instead select_taxa(). Use galah_select() instead select_columns(). Use galah_filter() instead select_filters(). Use galah_geolocate() instead select_locations(). Use atlas_occurrences() instead ala_occurrences(). Use atlas_counts() instead ala_counts(). Use atlas_species() instead ala_species(). Use atlas_taxonomy() instead ala_taxonomy(). Use atlas_media() instead ala_media(). Use atlas_citation() instead ala_citation(). Use show_all_reasons() instead find_reasons(). Use show_all_cached_files() instead find_cached_files(). Use show_all_ranks() instead find_ranks(). Use show_all_profiles() instead find_profiles(). Use show_all_atlases() instead find_atlases(). Use galah_config() instead ala_config(). Use show_values() instead search_field_values() Use show_values() instead search_profile_attributes()","code":""},{"path":"https://galah.ala.org.au/reference/deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated functions — deprecated","text":"","code":"select_taxa(query, is_id = FALSE)  select_columns(..., group)  select_filters(..., profile = NULL)  select_locations(query)  ala_occurrences(   taxa = NULL,   filters = NULL,   locations = NULL,   columns = select_columns(group = \"basic\"),   mint_doi = FALSE,   doi = NULL,   refresh_cache = FALSE )  ala_counts(   taxa = NULL,   filters = NULL,   locations = NULL,   limit = 100,   type = c(\"record\", \"species\"),   refresh_cache = FALSE )  ala_species(   taxa = NULL,   filters = NULL,   locations = NULL,   refresh_cache = FALSE )  ala_taxonomy(taxa, down_to)  ala_media(   taxa = NULL,   filters = NULL,   locations = NULL,   columns = select_columns(group = \"basic\"),   download_dir,   refresh_cache = FALSE )  ala_citation(data)  find_reasons()  find_cached_files()  find_ranks()  find_profiles()  find_atlases()  ala_config(..., profile_path = NULL)  search_field_values(field)  search_profile_attributes(profile)"},{"path":"https://galah.ala.org.au/reference/deprecated.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Deprecated functions — deprecated","text":"deprecated functions return tibble.","code":""},{"path":"https://galah.ala.org.au/reference/filter.data_request.html","id":null,"dir":"Reference","previous_headings":"","what":"Narrow a query by specifying filters — filter.data_request","title":"Narrow a query by specifying filters — filter.data_request","text":"\"Filters\" arguments form field logical value used narrow number records returned specific query. example, common users request records particular year (year == 2020), return records except fossils (basisOfRecord != \"FossilSpecimen\").","code":""},{"path":"https://galah.ala.org.au/reference/filter.data_request.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Narrow a query by specifying filters — filter.data_request","text":"","code":"# S3 method for data_request filter(.data, ...)"},{"path":"https://galah.ala.org.au/reference/filter.data_request.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Narrow a query by specifying filters — filter.data_request","text":".data object class data_request, created using galah_call() ... filters, form field logical value","code":""},{"path":[]},{"path":"https://galah.ala.org.au/reference/galah.html","id":null,"dir":"Reference","previous_headings":"","what":"Biodiversity Data from the Living Atlas Community — galah","title":"Biodiversity Data from the Living Atlas Community — galah","text":"living atlas community provides tools enable users find, access, combine visualise data biodiversity. 'galah' enables R community directly access data resources hosted living atlases. basic unit observation occurrence record, based 'Darwin Core' data standard (https://dwc.tdwg.org); however galah also enables users locate download taxonomic information, associated media images sounds, restricting queries particular taxa locations. Users can specify columns returned query, restrict results observations meet particular quality-control criteria.","code":""},{"path":"https://galah.ala.org.au/reference/galah.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Biodiversity Data from the Living Atlas Community — galah","text":"Start data query galah_call() Start build data query Narrow results galah_identify() identify() Search taxonomic identifiers galah_filter() filter() Filter records galah_select() select() Fields report information galah_group_by() group_by() Fields group counts galah_geolocate() st_crop() Specify location galah_apply_profile() Restrict data pass predefined checks (ALA ) galah_down_to() Specify taxonomic rank slice_head() Choose first n rows download Download data atlas_occurrences() Download occurrence records atlas_counts() count() Count number records species returned query atlas_species() Download species lists atlas_taxonomy() Return section ALA taxonomic tree atlas_media() View images sounds available download collect_media() Download images sounds collect_occurrences() Download previously-defined sets occurrence records Look information search_taxa() Search taxa using text-search search_identifiers() Search taxa using taxonomic identifiers show_all() & search_all() Data generating filter queries show_values() & search_values() Show search values within fields, profiles, lists, collections, datasets providers Manage cache show_all_cached_files() List previously cached files metadata clear_cached_files() Clear previously cached files metadata Configure session galah_config() Package configuration options Cite atlas_citation() Citation dataset","code":""},{"path":"https://galah.ala.org.au/reference/galah.html","id":"terminology","dir":"Reference","previous_headings":"","what":"Terminology","title":"Biodiversity Data from the Living Atlas Community — galah","text":"get value galah, helpful understand terminology. occurrence record contains taxonomic information, usually information observation , location. addition record-specific information, living atlases append contextual information record, particularly data spatial layers reflecting climate gradients political boundaries. also run number quality checks record, resulting assertions attached record. piece information associated given occurrence record stored field, corresponds column imported R data.frame. See show_all(fields) view valid fields, layers assertions, conduct search using search_all(fields). Data fields important provide means filter occurrence records;  .e. return information need, . Consequently, much architecture galah designed make filtering simple possible. Functions galah_ prefix offer ways shape query call. galah_ function allows user filter different way. , function suffix reveals one . galah_filter(), galah_select() galah_group_by() intentionally match dplyr's select(), filter() group_by() functions, name used. example, can use galah_select() choose information returned columns. Alternatively, can use galah_filter() filter rows. can also choose specific taxa galah_identify() choose specific location using galah_geolocate(). combining different filters, possible build complex queries return valuable information given problem. notable extension filtering approach remove records low 'quality'. living atlases perform quality control checks records store. checks used generate new fields, can used filter records unsuitable particular applications. However, many possible data quality checks, always clear appropriate given instance. Therefore, galah supports data quality profiles, can passed galah_apply_profile() quickly remove undesirable records. full list data quality profiles returned show_all(profiles). Note service currently available Australian atlas (ALA). outside Australia, 'galah' common name Eolophus roseicapilla, widely-distributed Australian bird species.","code":""},{"path":"https://galah.ala.org.au/reference/galah.html","id":"package-design","dir":"Reference","previous_headings":"","what":"Package design","title":"Biodiversity Data from the Living Atlas Community — galah","text":"cases, users primarily interested using galah return data one living atlases. functions named prefix atlas_, followed suffix describing information provide. example, users wish download occurrence data can use function atlas_occurrences(). Alternatively, users wish download data species (rather occurrence record) can use atlas_species() download media content (largely images) using atlas_media(). Users can also assess many records meet particular criteria using atlas_counts() return taxonomic tree specific clade one level another level (e.g., family genus). functions return data.frame standard format, except atlas_taxonomy() returns data.tree. Functions galah designed according nested architecture. Users require data begin locating relevant atlas_ function; arguments within function call correspondingly-named galah_ functions; specific values can interpreted galah_ functions can searched listed using search_all() show_all() functions; desired taxa can also identified using search_taxa() passed within galah_identify() taxa argument atlas_ functions.","code":""},{"path":"https://galah.ala.org.au/reference/galah.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Biodiversity Data from the Living Atlas Community — galah","text":"information ALA API, visit https://api.ala.org.au/. questions, comments suggestions, please email support@ala.org.au.","code":""},{"path":[]},{"path":"https://galah.ala.org.au/reference/galah.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Biodiversity Data from the Living Atlas Community — galah","text":"Maintainer: Martin Westgate martin.westgate@csiro.au Authors: Matilda Stevenson Dax Kellie dax.kellie@csiro.au Peggy Newman peggy.newman@csiro.au","code":""},{"path":"https://galah.ala.org.au/reference/galah_apply_profile.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply a data quality profile — galah_apply_profile","title":"Apply a data quality profile — galah_apply_profile","text":"'profile' group filters pre-applied ALA. Using data profile allows query filtered quickly relevant quality-assured data fit--purpose. example, \"ALA\" profile designed exclude lower quality records, whereas profiles apply filters specific species distribution modelling (e.g. CDSM).","code":""},{"path":"https://galah.ala.org.au/reference/galah_apply_profile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply a data quality profile — galah_apply_profile","text":"","code":"galah_apply_profile(...)"},{"path":"https://galah.ala.org.au/reference/galah_apply_profile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply a data quality profile — galah_apply_profile","text":"... profile name. string - name abbreviation data quality profile apply query. Valid values can seen using show_all(profiles)","code":""},{"path":"https://galah.ala.org.au/reference/galah_apply_profile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply a data quality profile — galah_apply_profile","text":"tibble containing valid data profile value.","code":""},{"path":"https://galah.ala.org.au/reference/galah_apply_profile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply a data quality profile — galah_apply_profile","text":"Note one profile can loaded time; multiple profiles given, first valid profile used. bespoke editing filters within profile, use galah_filter()","code":""},{"path":[]},{"path":"https://galah.ala.org.au/reference/galah_apply_profile.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply a data quality profile — galah_apply_profile","text":"","code":"# Apply a data quality profile to a query galah_call() |>    galah_identify(\"reptilia\") |>   galah_filter(year == 2021) |>   galah_apply_profile(ALA) |>   atlas_counts() #> # A tibble: 1 × 1 #>   count #>   <int> #> 1 31492"},{"path":"https://galah.ala.org.au/reference/galah_bbox.html","id":null,"dir":"Reference","previous_headings":"","what":"Narrow a query to within a bounding box — galah_bbox","title":"Narrow a query to within a bounding box — galah_bbox","text":"Restrict results within bounding box (box constructed min/max latitude & longitude coordinates). Bounding boxes can extracted supplied sf/sfc object shapefile. bounding box can also supplied bbox object (via sf::st_bbox) tibble/data.frame.","code":""},{"path":"https://galah.ala.org.au/reference/galah_bbox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Narrow a query to within a bounding box — galah_bbox","text":"","code":"galah_bbox(...)"},{"path":"https://galah.ala.org.au/reference/galah_bbox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Narrow a query to within a bounding box — galah_bbox","text":"... sf object shapefile (.shp), bounding box coordinates supplied bbox, tibble/data.frame","code":""},{"path":"https://galah.ala.org.au/reference/galah_bbox.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Narrow a query to within a bounding box — galah_bbox","text":"length-1 object class character galah_geolocate, containing multipolygon WKT string representing bounding box area provided.","code":""},{"path":"https://galah.ala.org.au/reference/galah_bbox.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Narrow a query to within a bounding box — galah_bbox","text":"sf object shapefile polygon simplified bbox coordinates. bounding box can supplied bbox object tibble/data.frame. Bounding boxes supplied tibble/data.frame must \"xmin\", \"xmax\", \"ymin\" \"ymax\" columns valid numeric values.","code":""},{"path":[]},{"path":"https://galah.ala.org.au/reference/galah_bbox.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Narrow a query to within a bounding box — galah_bbox","text":"","code":"# Search for records using a bounding box of coordinates b_box <- sf::st_bbox(c(xmin = 143, xmax = 148, ymin = -29, ymax = -28),                       crs = sf::st_crs(\"WGS84\"))  galah_call() |>   galah_identify(\"reptilia\") |>   galah_bbox(b_box) |>   atlas_counts() #> Data returned for bounding box: #> xmin = 143 xmax = 148 ymin = -29 ymax = -28 #> # A tibble: 1 × 1 #>   count #>   <int> #> 1  1830  # Search for records using a bounding box in a `tibble` or `data.frame` b_box <- tibble::tibble(xmin = 148, ymin = -29, xmax = 143, ymax = -21)  galah_call() |>   galah_identify(\"reptilia\") |>   galah_bbox(b_box) |>   atlas_counts() #> Data returned for bounding box: #> xmin = 148 xmax = 143 ymin = -29 ymax = -21 #> # A tibble: 1 × 1 #>   count #>   <int> #> 1 14374    if (FALSE) { # Search for records within the bounding box of an `sf` object galah_config(email = \"your_email_here\")  location <-  \"POLYGON((143.32 -18.78,145.30 -20.52,141.52 -21.50,143.32 -18.78))\" |>  sf::st_as_sfc()   galah_call() |>   galah_identify(\"vulpes\") |>   galah_bbox(location) |>   atlas_occurrences()   # Search for records within the bounding box of a shapefile galah_config(email = \"your_email_here\")  location <- sf::st_read(\"path/to/shapefile.shp\")  galah_call() |>   galah_identify(\"vulpes\") |>   galah_bbox(location) |>   atlas_occurrences() }"},{"path":"https://galah.ala.org.au/reference/galah_call.html","id":null,"dir":"Reference","previous_headings":"","what":"Start building a data query — galah_call","title":"Start building a data query — galah_call","text":"download data ALA (another atlas), one must construct data query. query tells atlas API data download return, well filtered.","code":""},{"path":"https://galah.ala.org.au/reference/galah_call.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Start building a data query — galah_call","text":"","code":"galah_call(   identify = NULL,   filter = NULL,   select = NULL,   geolocate = NULL,   data_profile = NULL,   group_by = NULL,   down_to = NULL,   ... )  # S3 method for data_request print(x, ...)"},{"path":"https://galah.ala.org.au/reference/galah_call.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Start building a data query — galah_call","text":"identify data.frame: generated call galah_identify() filter data.frame: generated call select_filters() select data.frame: generated call galah_select() geolocate string: generated call galah_geolocate() data_profile string: generated call galah_apply_profile() group_by data.frame: generated call galah_group_by() down_to data.frame: generated call galah_down_to() ... function-specific request parameters x object class data_request","code":""},{"path":"https://galah.ala.org.au/reference/galah_call.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Start building a data query — galah_call","text":"object class data_request.","code":""},{"path":"https://galah.ala.org.au/reference/galah_call.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Start building a data query — galah_call","text":"galah package enables users construct data queries using piping syntax (.e., %>% magrittr, |> base). Start query galah_call(). Pipe functions like galah_identify(), galah_filter(), [galah_select()], galah_group_by() narrow query specify filters. Finish query atlas_ function identify type data downloaded (.e., atlas_occurrences(), atlas_counts(), atlas_species(), atlas_taxonomy() atlas_media()). Using galah_call() pipes allows build & filter query download data way wrangle data dplyr tidyverse.","code":""},{"path":"https://galah.ala.org.au/reference/galah_call.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Start building a data query — galah_call","text":"","code":"# Begin your query with `galah_call()`, then pipe using `%>%` or `|>`  # Get number of records of *Aves* from 2001 to 2004 by year galah_call() |>   galah_identify(\"Aves\") |>   galah_filter(year > 2000 & year < 2005) |>   galah_group_by() |>   atlas_counts() #> # A tibble: 1 × 1 #>   count #>   <dbl> #> 1     0    # Get information for all species in *Cacatuidae* family galah_call() |>   galah_identify(\"Cacatuidae\") |>   atlas_species() #> # A tibble: 14 × 10 #>    kingdom  phylum   class order     family genus species author speci…¹ verna…² #>    <chr>    <chr>    <chr> <chr>     <chr>  <chr> <chr>   <chr>  <chr>   <chr>   #>  1 Animalia Chordata Aves  Psittaci… Cacat… Eolo… Eoloph… (Viei… https:… Galah   #>  2 Animalia Chordata Aves  Psittaci… Cacat… Caca… Cacatu… (Lath… https:… Sulphu… #>  3 Animalia Chordata Aves  Psittaci… Cacat… Caca… Cacatu… Gould… https:… Little… #>  4 Animalia Chordata Aves  Psittaci… Cacat… Zanda Zanda … (Shaw… https:… Yellow… #>  5 Animalia Chordata Aves  Psittaci… Cacat… Caca… Cacatu… (Kuhl… https:… Long-b… #>  6 Animalia Chordata Aves  Psittaci… Cacat… Call… Calloc… (Gran… https:… Gang-g… #>  7 Animalia Chordata Aves  Psittaci… Cacat… Caly… Calypt… (Lath… https:… Red-ta… #>  8 Animalia Chordata Aves  Psittaci… Cacat… Nymp… Nymphi… (Kerr… https:… Cockat… #>  9 Animalia Chordata Aves  Psittaci… Cacat… Caly… Calypt… (Temm… https:… Glossy… #> 10 Animalia Chordata Aves  Psittaci… Cacat… Loph… Lophoc… (Vigo… https:… Major … #> 11 Animalia Chordata Aves  Psittaci… Cacat… Zanda Zanda … Lear,… https:… Baudin… #> 12 Animalia Chordata Aves  Psittaci… Cacat… Caca… Cacatu… (Goul… https:… Wester… #> 13 Animalia Chordata Aves  Psittaci… Cacat… Prob… Probos… (Gmel… https:… Palm C… #> 14 Animalia Chordata Aves  Psittaci… Cacat… Zanda Zanda … Carna… https:… Short-… #> # … with abbreviated variable names ¹​species_guid, ²​vernacular_name if (FALSE) {  # Download records of genus *Eolophus* from 2001 to 2004 galah_config(email = \"your-email@email.com\")  galah_call() |>   galah_identify(\"Eolophus\") |>   galah_filter(year > 2000 & year < 2005) |>   atlas_occurrences() }"},{"path":"https://galah.ala.org.au/reference/galah_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Get or set configuration options that control galah behaviour — galah_config","title":"Get or set configuration options that control galah behaviour — galah_config","text":"galah package supports large data downloads, also interfaces ALA requires users services provide registered email address reason downloading data. galah_config function provides way manage issues simply possible.","code":""},{"path":"https://galah.ala.org.au/reference/galah_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get or set configuration options that control galah behaviour — galah_config","text":"","code":"galah_config(..., profile_path = NULL)  # S3 method for galah_config print(x, ...)"},{"path":"https://galah.ala.org.au/reference/galah_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get or set configuration options that control galah behaviour — galah_config","text":"... Options can defined using form name = \"value\". Valid arguments : atlas string: Living Atlas point , Australia default. Can organisation name, acronym, region (see show_all_atlases() admissible values) caching logical: TRUE, results cached, cached results re-used). FALSE, data downloaded. cache_directory string: directory use cache. default temporary directory, means results cached within R session cleared automatically user exits R. user may wish set non-temporary directory caching across sessions. directory must exist file system. download_reason_id numeric string: \"download reason\" required. ALA services, either numeric ID (currently 0--13) string (see show_all(reasons) list valid ID codes names). default NA. ALA services require valid download_reason_id code, either specified directly associated R function. email string: email address registered chosen atlas. ALA, can register address. password string: registerd password (GBIF ) run_checks logical: galah run checks filters columns. making lots requests sequentially, checks can slow process lead HTTP 500 errors, turned . Defaults TRUE. send_email logical: receive email query atlas_occurrences()? Defaults FALSE; can useful instances, example tracking DOIs assigned specific downloads later citation. username string: registerd username (GBIF ) verbose logical: galah give verbose progress bars? Defaults FALSE. profile_path  Keeping compatibility older package versions. preferable save galah_config options .Rprofile file. x object class galah_config","code":""},{"path":"https://galah.ala.org.au/reference/galah_config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get or set configuration options that control galah behaviour — galah_config","text":"galah_config(), list options. galah_config(...) called arguments, nothing returned configuration set.","code":""},{"path":"https://galah.ala.org.au/reference/galah_config.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get or set configuration options that control galah behaviour — galah_config","text":"","code":"if (FALSE) { # To download occurrence records, enter your email in `galah_config()`.  # This email should be registered with the ALA.  # You can register at: # https://auth.ala.org.au/userdetails/registration/createAccount galah_config(email = \"your-email@email.com\")   # Turn on caching in your session galah_config(caching = TRUE)   # Some ALA services require that you add a reason for downloading data.  # Add your selected reason using the option `download_reason_id` galah_config(download_reason_id = 0)  # To look up all valid reasons to enter, use `show_all(reasons)` show_all(reasons)  # Make debugging in your session easier by setting `verbose = TRUE` galah_config(verbose = TRUE) }"},{"path":"https://galah.ala.org.au/reference/galah_down_to.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify the lowest taxonomic rank required in a downwards search — galah_down_to","title":"Specify the lowest taxonomic rank required in a downwards search — galah_down_to","text":"atlas_taxonomy generates downwards search taxonomic tree. Use galah_down_to() specify taxonomic level search . galah_down_to() uses non-standard evaluation (NSE).","code":""},{"path":"https://galah.ala.org.au/reference/galah_down_to.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify the lowest taxonomic rank required in a downwards search — galah_down_to","text":"","code":"galah_down_to(...)"},{"path":"https://galah.ala.org.au/reference/galah_down_to.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify the lowest taxonomic rank required in a downwards search — galah_down_to","text":"... name single taxonomic rank","code":""},{"path":"https://galah.ala.org.au/reference/galah_down_to.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specify the lowest taxonomic rank required in a downwards search — galah_down_to","text":"string named rank","code":""},{"path":[]},{"path":"https://galah.ala.org.au/reference/galah_down_to.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify the lowest taxonomic rank required in a downwards search — galah_down_to","text":"","code":"# Return a taxonomic tree of *Chordata* down to the class level if (FALSE) { galah_call() |>     galah_identify(\"Vertebrata\") |>     galah_down_to(class) |>     atlas_taxonomy() }"},{"path":"https://galah.ala.org.au/reference/galah_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Narrow a query by specifying filters — galah_filter","title":"Narrow a query by specifying filters — galah_filter","text":"\"Filters\" arguments form field logical value used narrow number records returned specific query. example, common users request records particular year (year == 2020), return records except fossils (basisOfRecord != \"FossilSpecimen\"). result galah_filter() can passed filter argument atlas_occurrences(), atlas_species(), atlas_counts() atlas_media().","code":""},{"path":"https://galah.ala.org.au/reference/galah_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Narrow a query by specifying filters — galah_filter","text":"","code":"galah_filter(..., profile = NULL)"},{"path":"https://galah.ala.org.au/reference/galah_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Narrow a query by specifying filters — galah_filter","text":"... filters, form field logical value profile Use galah_apply_profile instead. supplied, string recording data quality profile apply query. See show_all_profiles() valid profiles. default profile applied.","code":""},{"path":"https://galah.ala.org.au/reference/galah_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Narrow a query by specifying filters — galah_filter","text":"tibble containing filter values.","code":""},{"path":"https://galah.ala.org.au/reference/galah_filter.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Narrow a query by specifying filters — galah_filter","text":"galah_filter uses non-standard evaluation (NSE), designed compatible possible dplyr::filter() syntax. statements passed galah_filter() (except profile argument) take form field - logical - value. Permissible examples include: = == (e.g. year = 2020) !=, e.g. year != 2020) > >= (e.g. year >= 2020) < <= (e.g. year <= 2020) statements (e.g. year == 2018 | year == 2020) statements (e.g. year >= 2000 & year <= 2020) cases R fail parse inputs single equals sign (=), particularly statements separated & |. problem can avoided using double-equals (==) instead. Notes behaviour Separating statements comma equivalent statement; Ergo galah_filter(year >= 2010 & year < 2020) galah_filter(year >= 2010, year < 2020). statements must include field name; galah_filter(year == 2010 | year == 2021) works, galah_filter(year == c(2010, 2021)), galah_filter(year == 2010 | 2021) fails. possible use object specify required values, e.g. year_value <- 2010; galah_filter(year > year_value) solr supports range queries text well numbers; valid: galah_filter(cl22 >= \"Tasmania\")","code":""},{"path":[]},{"path":"https://galah.ala.org.au/reference/galah_filter.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Narrow a query by specifying filters — galah_filter","text":"","code":"# Filter query results to return records of interest galah_call() |>   galah_filter(year >= 2019,                basisOfRecord == \"HumanObservation\") |>   atlas_counts() #> # A tibble: 1 × 1 #>      count #>      <int> #> 1 20812442"},{"path":"https://galah.ala.org.au/reference/galah_geolocate.html","id":null,"dir":"Reference","previous_headings":"","what":"Narrow a query to within a specified area — galah_geolocate","title":"Narrow a query to within a specified area — galah_geolocate","text":"Restrict results specified area. Areas can specified either polygons bounding boxes, depending type.","code":""},{"path":"https://galah.ala.org.au/reference/galah_geolocate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Narrow a query to within a specified area — galah_geolocate","text":"","code":"galah_geolocate(..., type = c(\"polygon\", \"bbox\"))"},{"path":"https://galah.ala.org.au/reference/galah_geolocate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Narrow a query to within a specified area — galah_geolocate","text":"... single sf object, WKT string shapefile. Bounding boxes can supplied tibble/data.frame bbox type string: one c(\"polygon\", \"bbox\"). Defaults \"polygon\". type = \"polygon\", multipolygon built via galah_polygon(). type = \"bbox\", multipolygon built via galah_bbox(). multipolygon used narrow query ALA.","code":""},{"path":"https://galah.ala.org.au/reference/galah_geolocate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Narrow a query to within a specified area — galah_geolocate","text":"length-1 object class character galah_geolocate, containing multipolygon WKT string representing area provided.","code":""},{"path":"https://galah.ala.org.au/reference/galah_geolocate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Narrow a query to within a specified area — galah_geolocate","text":"default, type set \"polygon\" narrows queries within area supplied POLYGON. Polygons must specified either sf object, 'well-known text' (WKT) string, shapefile. Shapefiles must simple accepted ALA. Alternatively, set type = \"bbox\" narrow queries within bounding box. Bounding boxes can extracted supplied sf object shapefile. bounding box can also supplied bbox object (via sf::st_bbox()) tibble/data.frame. type = \"polygon\", WKT strings longer 10000 characters sf objects 500 vertices accepted ALA. polygons  may need simplified. type = \"bbox\", sf objects shapefiles converted bounding box query ALA.","code":""},{"path":[]},{"path":"https://galah.ala.org.au/reference/galah_geolocate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Narrow a query to within a specified area — galah_geolocate","text":"","code":"if (FALSE) { # Search for records within a polygon using a shapefile location <- sf::st_read(\"path/to/shapefile.shp\") galah_call() |>   galah_identify(\"vulpes\") |>   galah_geolocate(location) |>   atlas_counts()    # Search for records within the bounding box of a shapefile location <- sf::st_read(\"path/to/shapefile.shp\") galah_call() |>   galah_identify(\"vulpes\") |>   galah_geolocate(location, type = \"bbox\") |>   atlas_counts() }  # Search for records within a polygon using an `sf` object location <-  \"POLYGON((143.32 -18.78,145.30 -20.52,141.52 -21.50,143.32 -18.78))\" |>  sf::st_as_sfc() galah_call() |>   galah_identify(\"reptilia\") |>   galah_polygon(location) |>   atlas_counts() #> # A tibble: 1 × 1 #>   count #>   <int> #> 1  2872     # Search for records using a Well-known Text string (WKT) wkt <- \"POLYGON((142.36228 -29.00703,                  142.74131 -29.00703,                  142.74131 -29.39064,                  142.36228 -29.39064,                  142.36228 -29.00703))\" galah_call() |>   galah_identify(\"vulpes\") |>   galah_geolocate(wkt) |>   atlas_counts() #> # A tibble: 1 × 1 #>   count #>   <int> #> 1     1  # Search for records within the bounding box extracted from an `sf` object location <-  \"POLYGON((143.32 -18.78,145.30 -20.52,141.52 -21.50,143.32 -18.78))\" |>  sf::st_as_sfc() galah_call() |>   galah_identify(\"vulpes\") |>   galah_geolocate(location, type = \"bbox\") |>   atlas_counts() #> Data returned for bounding box: #> xmin = 141.52 xmax = 145.3 ymin = -21.5 ymax = -18.78 #> # A tibble: 1 × 1 #>   count #>   <int> #> 1    28  # Search for records using a bounding box of coordinates b_box <- sf::st_bbox(c(xmin = 143, xmax = 148, ymin = -29, ymax = -28),                       crs = sf::st_crs(\"WGS84\")) galah_call() |>   galah_identify(\"reptilia\") |>   galah_geolocate(b_box, type = \"bbox\") |>   atlas_counts() #> Data returned for bounding box: #> xmin = 143 xmax = 148 ymin = -29 ymax = -28 #> # A tibble: 1 × 1 #>   count #>   <int> #> 1  1830  # Search for records using a bounding box in a `tibble` or `data.frame` b_box <- tibble::tibble(xmin = 148, ymin = -29, xmax = 143, ymax = -21) galah_call() |>   galah_identify(\"vulpes\") |>   galah_geolocate(b_box, type = \"bbox\") |>   atlas_counts() #> Data returned for bounding box: #> xmin = 148 xmax = 143 ymin = -29 ymax = -21 #> # A tibble: 1 × 1 #>   count #>   <int> #> 1   225"},{"path":"https://galah.ala.org.au/reference/galah_group_by.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify fields to group when downloading record counts — galah_group_by","title":"Specify fields to group when downloading record counts — galah_group_by","text":"atlas_counts supports server-side grouping data. Grouping can used return record counts grouped multiple, valid fields (found search_all(fields). Use galah_group_by using group_by argument atlas_counts return record counts summed one valid fields.","code":""},{"path":"https://galah.ala.org.au/reference/galah_group_by.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify fields to group when downloading record counts — galah_group_by","text":"","code":"galah_group_by(..., expand = TRUE)"},{"path":"https://galah.ala.org.au/reference/galah_group_by.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify fields to group when downloading record counts — galah_group_by","text":"... zero individual column names include expand logical: passed group_by argument atlas_counts, factor levels expanded? Defaults TRUE.","code":""},{"path":"https://galah.ala.org.au/reference/galah_group_by.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specify fields to group when downloading record counts — galah_group_by","text":"arguments provided, returns data.frame columns name type, per galah_select(); arguments provided, returns NULL.","code":""},{"path":[]},{"path":"https://galah.ala.org.au/reference/galah_group_by.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify fields to group when downloading record counts — galah_group_by","text":"","code":"galah_call() |>    galah_group_by(basisOfRecord) |>   atlas_counts() #> # A tibble: 9 × 2 #>   basisOfRecord          count #>   <chr>                  <int> #> 1 HUMAN_OBSERVATION   87061078 #> 2 PRESERVED_SPECIMEN  14128495 #> 3 OBSERVATION          5335102 #> 4 OCCURRENCE           3691801 #> 5 MACHINE_OBSERVATION  2123999 #> 6 MATERIAL_SAMPLE      1516637 #> 7 LIVING_SPECIMEN       213918 #> 8 MATERIAL_CITATION      14962 #> 9 FOSSIL_SPECIMEN         5359"},{"path":"https://galah.ala.org.au/reference/galah_identify.html","id":null,"dir":"Reference","previous_headings":"","what":"Narrow a query by passing taxonomic identifiers — galah_identify","title":"Narrow a query by passing taxonomic identifiers — galah_identify","text":"conducting search creating data query, common identify known taxon group taxa narrow records results returned.","code":""},{"path":"https://galah.ala.org.au/reference/galah_identify.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Narrow a query by passing taxonomic identifiers — galah_identify","text":"","code":"galah_identify(..., search = TRUE)"},{"path":"https://galah.ala.org.au/reference/galah_identify.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Narrow a query by passing taxonomic identifiers — galah_identify","text":"... one scientific names (search = TRUE) taxonomic identifiers (search = FALSE); object class ala_id (search_taxa). search (logical); results question passed search_taxa?","code":""},{"path":"https://galah.ala.org.au/reference/galah_identify.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Narrow a query by passing taxonomic identifiers — galah_identify","text":"tibble containing identified taxa.","code":""},{"path":"https://galah.ala.org.au/reference/galah_identify.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Narrow a query by passing taxonomic identifiers — galah_identify","text":"galah_identify() used identify taxa want returned search data query. Users pass scientific names taxonomic identifiers pipes provide data biological group interest. good use search_taxa() search_identifiers() first check taxa provide galah_identify() return correct results.","code":""},{"path":[]},{"path":"https://galah.ala.org.au/reference/galah_identify.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Narrow a query by passing taxonomic identifiers — galah_identify","text":"","code":"# Specify a taxon. A valid taxon will return an identifier. galah_identify(\"reptilia\") #> # A tibble: 1 × 1 #>   identifier                                                                #>   <chr>                                                                     #> 1 https://biodiversity.org.au/afd/taxa/682e1228-5b3c-45ff-833b-550efd40c399  # Specify more than one taxon at a time. galah_identify(\"reptilia\", \"mammalia\", \"aves\", \"pisces\") #> # A tibble: 4 × 1 #>   identifier                                                                #>   <chr>                                                                     #> 1 https://biodiversity.org.au/afd/taxa/682e1228-5b3c-45ff-833b-550efd40c399 #> 2 https://biodiversity.org.au/afd/taxa/e9e7db31-04df-41fb-bd8d-e0b0f3c332d6 #> 3 https://biodiversity.org.au/afd/taxa/65625205-db74-4a87-b566-ca387b119974 #> 4 https://biodiversity.org.au/afd/taxa/e22efeb4-2cb5-4250-8d71-61c48bdaa051  # Use `galah_identify()` to narrow your queries galah_call() |>    galah_identify(\"Eolophus\") |>   atlas_counts() #> # A tibble: 1 × 1 #>    count #>    <int> #> 1 957876  # If you know a valid taxon identifier, add it and set `search = FALSE`. galah_call() |>    galah_identify(\"https://biodiversity.org.au/afd/taxa/009169a9-a916-40ee-866c-669ae0a21c5c\",                   search = FALSE) |>   atlas_counts() #> # A tibble: 1 × 1 #>    count #>    <int> #> 1 957876"},{"path":"https://galah.ala.org.au/reference/galah_polygon.html","id":null,"dir":"Reference","previous_headings":"","what":"Narrow a query to within a specified polygon — galah_polygon","title":"Narrow a query to within a specified polygon — galah_polygon","text":"Restrict results specified area. Areas must polygons. Polygons must supplied sf object, 'well-known text' (WKT) string, shapefile. Polygons shapefiles must overly complex (.e. many characters many vertices) accepted query ALA.","code":""},{"path":"https://galah.ala.org.au/reference/galah_polygon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Narrow a query to within a specified polygon — galah_polygon","text":"","code":"galah_polygon(...)"},{"path":"https://galah.ala.org.au/reference/galah_polygon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Narrow a query to within a specified polygon — galah_polygon","text":"... single sf object, WKT string shapefile.","code":""},{"path":"https://galah.ala.org.au/reference/galah_polygon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Narrow a query to within a specified polygon — galah_polygon","text":"length-1 object class character galah_geolocate, containing multipolygon WKT string representing area provided.","code":""},{"path":"https://galah.ala.org.au/reference/galah_polygon.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Narrow a query to within a specified polygon — galah_polygon","text":"WKT strings longer 10000 characters sf objects 500 vertices accepted ALA. polygons  may need simplified.","code":""},{"path":[]},{"path":"https://galah.ala.org.au/reference/galah_polygon.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Narrow a query to within a specified polygon — galah_polygon","text":"","code":"# Search for records within a polygon using an `sf` object location <-  \"POLYGON((143.32 -18.78,145.30 -20.52,141.52 -21.50,143.32 -18.78))\" |>  sf::st_as_sfc() galah_call() |>   galah_identify(\"reptilia\") |>   galah_polygon(location) |>   atlas_counts() #> # A tibble: 1 × 1 #>   count #>   <int> #> 1  2872 if (FALSE) { # Search for records using a shapefile galah_config(email = \"your_email_here\") location <- galah_geolocate(sf::st_read(path/to/shapefile.shp)) galah_call() |>   galah_identify(\"vulpes\") |>   galah_polygon(location) |>   atlas_occurrences() } # Search for records using a Well-known Text string (WKT) wkt <- \"POLYGON((142.36228 -29.00703,                  142.74131 -29.00703,                  142.74131 -29.39064,                  142.36228 -29.39064,                  142.36228 -29.00703))\" galah_call() |>   galah_identify(\"vulpes\") |>   galah_polygon(wkt) |>   atlas_counts() #> # A tibble: 1 × 1 #>   count #>   <int> #> 1     1"},{"path":"https://galah.ala.org.au/reference/galah_select.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify fields for occurrence download — galah_select","title":"Specify fields for occurrence download — galah_select","text":"living atlases store content hundreds different fields, users often require thousands millions records time. reduce time taken download data, limit complexity resulting data.frame, sensible restrict fields returned atlas_occurrences(). function allows easy selection fields, commonly-requested groups columns, following syntax shared dplyr::select().","code":""},{"path":"https://galah.ala.org.au/reference/galah_select.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify fields for occurrence download — galah_select","text":"","code":"galah_select(..., group = c(\"basic\", \"event\", \"media\", \"assertions\"))"},{"path":"https://galah.ala.org.au/reference/galah_select.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify fields for occurrence download — galah_select","text":"... zero individual column names include group string: (optional) name one column groups include. Valid options \"basic\", \"event\" \"assertions\"","code":""},{"path":"https://galah.ala.org.au/reference/galah_select.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specify fields for occurrence download — galah_select","text":"tibble specifying name type column include call atlas_counts() atlas_occurrences().","code":""},{"path":"https://galah.ala.org.au/reference/galah_select.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Specify fields for occurrence download — galah_select","text":"full list available fields can viewed show_all(fields). Calling argument group = \"basic\" returns following columns: decimalLatitude decimalLongitude eventDate scientificName taxonConceptID recordID dataResourceName occurrenceStatus Using group = \"event\" returns following columns: eventRemarks eventTime eventID eventDate samplingEffort samplingProtocol Using group = \"media\" returns following columns: multimedia multimediaLicence images videos sounds Using group = \"assertions\" returns quality assertion-related columns. list assertions shown show_all_assertions().","code":""},{"path":[]},{"path":"https://galah.ala.org.au/reference/galah_select.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify fields for occurrence download — galah_select","text":"","code":"if (FALSE) { # Download occurrence records of *Perameles*,  # Only return scientificName and eventDate columns galah_config(email = \"your-email@email.com\") galah_call() |>   galah_identify(\"perameles\")|>   galah_select(scientificName, eventDate) |>   atlas_occurrences()  # Only return the \"basic\" group of columns and the basisOfRecord column galah_call() |>   galah_identify(\"perameles\") |>   galah_select(basisOfRecord, group = \"basic\") |>   atlas_occurrences() }"},{"path":"https://galah.ala.org.au/reference/group_by.data_request.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify fields to group when downloading record counts — group_by.data_request","title":"Specify fields to group when downloading record counts — group_by.data_request","text":"atlas_counts supports server-side grouping data. Grouping can used return record counts grouped multiple, valid fields (found search_all(fields). Use galah_group_by using group_by argument atlas_counts return record counts summed one valid fields.","code":""},{"path":"https://galah.ala.org.au/reference/group_by.data_request.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify fields to group when downloading record counts — group_by.data_request","text":"","code":"# S3 method for data_request group_by(.data, ...)"},{"path":"https://galah.ala.org.au/reference/group_by.data_request.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify fields to group when downloading record counts — group_by.data_request","text":".data object class data_request ... zero individual column names include","code":""},{"path":"https://galah.ala.org.au/reference/group_by.data_request.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specify fields to group when downloading record counts — group_by.data_request","text":"arguments provided, returns data.frame columns name type, per galah_select(); arguments provided, returns NULL.","code":""},{"path":[]},{"path":"https://galah.ala.org.au/reference/identify.data_request.html","id":null,"dir":"Reference","previous_headings":"","what":"Narrow a query by passing taxonomic identifiers — identify.data_request","title":"Narrow a query by passing taxonomic identifiers — identify.data_request","text":"conducting search creating data query, common identify known taxon group taxa narrow records results returned.","code":""},{"path":"https://galah.ala.org.au/reference/identify.data_request.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Narrow a query by passing taxonomic identifiers — identify.data_request","text":"","code":"# S3 method for data_request identify(x, ..., search = TRUE)"},{"path":"https://galah.ala.org.au/reference/identify.data_request.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Narrow a query by passing taxonomic identifiers — identify.data_request","text":"x object class data_request, created using galah_call() ... one scientific names (search = TRUE) taxonomic identifiers (search = FALSE); object class ala_id (search_taxa). search (logical); results question passed search_taxa?","code":""},{"path":"https://galah.ala.org.au/reference/identify.data_request.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Narrow a query by passing taxonomic identifiers — identify.data_request","text":"tibble containing identified taxa.","code":""},{"path":"https://galah.ala.org.au/reference/identify.data_request.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Narrow a query by passing taxonomic identifiers — identify.data_request","text":"galah_identify() used identify taxa want returned search data query. Users pass scientific names taxonomic identifiers pipes provide data biological group interest. good use search_taxa() search_identifiers() first check taxa provide galah_identify() return correct results.","code":""},{"path":[]},{"path":"https://galah.ala.org.au/reference/reexports.html","id":null,"dir":"Reference","previous_headings":"","what":"Objects exported from other packages — reexports","title":"Objects exported from other packages — reexports","text":"objects imported packages. Follow links see documentation. dplyr count, filter, group_by, select, slice_head graphics identify sf st_crop","code":""},{"path":"https://galah.ala.org.au/reference/search_all.html","id":null,"dir":"Reference","previous_headings":"","what":"Search for record information — search_all","title":"Search for record information — search_all","text":"living atlases store huge amount information, beyond occurrence records main output. galah, one way users can investigate information searching specific option category type information interested . Functions prefixed search_ , displaying matches search term within valid options information specified suffix. search_all() helper function can searches within multiple types information search_ sub-functions. See Details () accepted values.","code":""},{"path":"https://galah.ala.org.au/reference/search_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search for record information — search_all","text":"","code":"search_all(type, query)  search_apis(query)  search_assertions(query)  search_atlases(query)  search_collections(query)  search_datasets(query)  search_providers(query)  search_fields(query)  search_licences(query)  search_reasons(query)  search_ranks(query)  search_profiles(query)  search_lists(query)"},{"path":"https://galah.ala.org.au/reference/search_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search for record information — search_all","text":"type string specify type parameters searched. query string specifying search term. Searches case-sensitive.","code":""},{"path":"https://galah.ala.org.au/reference/search_all.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search for record information — search_all","text":"object class tbl_df data.frame (aka tibble) containing data match search query.","code":""},{"path":"https://galah.ala.org.au/reference/search_all.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Search for record information — search_all","text":"five categories information, specific sub-functions look-type information. available types information search_all() :","code":""},{"path":"https://galah.ala.org.au/reference/search_all.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Search for record information — search_all","text":"Darwin Core terms https://dwc.tdwg.org/terms/ ALA fields https://api.ala.org.au/#ws72 ALA assertions fields https://api.ala.org.au/#ws81","code":""},{"path":[]},{"path":"https://galah.ala.org.au/reference/search_all.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search for record information — search_all","text":"","code":"# Search for fields that include the word \"date\" search_all(fields, \"date\") #> # A tibble: 22 × 4 #>    id             description                                        type  link  #>    <chr>          <chr>                                              <chr> <chr> #>  1 month          \"Month of observation, specimen collection date. … fiel… NA    #>  2 cl23           \"Local Government Areas 2012 deprecated LGA Bound… laye… http… #>  3 eventDate      \"The ISO formatted date of observation, specimen … fiel… NA    #>  4 cl10903        \"Tenure of Australia's forests (2013) v2.0 Tenure… laye… http… #>  5 cl10955        \"National Indicative Aggregated Fire Extent Datas… laye… http… #>  6 lastLoadDate    NA                                                fiel… NA    #>  7 datePrecision  \"The precision of the date information for the re… fiel… NA    #>  8 eventDateEnd    NA                                                fiel… NA    #>  9 dateIdentified \"http://rs.tdwg.org/dwc/terms/dateIdentified\"      fiel… NA    #> 10 raw_eventDate   NA                                                fiel… NA    #> # … with 12 more rows  # Search for fields that include the word \"marine\" search_all(fields, \"marine\") #> # A tibble: 9 × 4 #>   id      description                                                type  link  #>   <chr>   <chr>                                                      <chr> <chr> #> 1 biome   \"A field indicating if the record has been located in Ter… fiel… NA    #> 2 cl990   \"Atlas of Life in the Coastal Wilderness The ALCW Bioregi… laye… http… #> 3 cl21    \"IMCRA 4 Regions Integrated Marine and Coastal Regionalis… laye… http… #> 4 cl900   \"Areas for Further Assessment within the East Marine Regi… laye… http… #> 5 cl11033 \"CAPAD 2020 Terrestrial The Collaborative Australian Prot… laye… http… #> 6 cl11032 \"CAPAD 2020 Marine The Collaborative Australian Protected… laye… http… #> 7 cl10912 \"Australia's network of Marine Parks Consistent with the … laye… http… #> 8 cl10945 \"CAPAD 2016 Marine The Collaborative Australian Protected… laye… http… #> 9 cl10944 \"CAPAD 2016 Terrestrial The Collaborative Australian Prot… laye… http…  # Search using a single taxonomic term # (see `?search_taxa()` for more information) search_all(taxa, \"Reptilia\") # equivalent #> # A tibble: 1 × 9 #>   search_term scientific_name taxon_…¹ rank  match…² kingdom phylum class issues #>   <chr>       <chr>           <chr>    <chr> <chr>   <chr>   <chr>  <chr> <chr>  #> 1 Reptilia    REPTILIA        https:/… class exactM… Animal… Chord… Rept… noIss… #> # … with abbreviated variable names ¹​taxon_concept_id, ²​match_type  # Look up a unique taxon identifier # (see `?search_identifiers()` for more information) search_all(identifiers,             \"https://id.biodiversity.org.au/node/apni/2914510\") #> # A tibble: 1 × 14 #>   scient…¹ scien…² taxon…³ rank  match…⁴ kingdom phylum class order family genus #>   <chr>    <chr>   <chr>   <chr> <chr>   <chr>   <chr>  <chr> <chr> <chr>  <chr> #> 1 Eucalyp… Maiden  https:… spec… taxonI… Plantae Charo… Equi… Myrt… Myrta… Euca… #> # … with 3 more variables: species <chr>, vernacular_name <chr>, issues <chr>, #> #   and abbreviated variable names ¹​scientific_name, #> #   ²​scientific_name_authorship, ³​taxon_concept_id, ⁴​match_type  # Search for species lists that match \"endangered\" search_all(lists, \"endangered\") # equivalent #> # A tibble: 9 × 16 #>   dataR…¹ listN…² listT…³ dateC…⁴ lastU…⁵ usern…⁶ fullN…⁷ itemC…⁸ region categ…⁹ #>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <lgl>     <int> <chr>  <chr>   #> 1 dr19257 Endang… OTHER   2022-0… 2022-0… alanah… NA           17 NA     NA      #> 2 dr20088 Top 30… CONSER… 2022-1… 2022-1… aprill… NA           30 NA     NA      #> 3 dr4890  Endang… CONSER… 2016-0… 2016-0… kiashe… NA          340 NA     NA      #> 4 dr17208 My spe… OTHER   2021-0… 2021-0… caterp… NA            1 NA     NA      #> 5 dr17134 Endang… CONSER… 2021-0… 2022-1… 100588… NA           20 NA     NA      #> 6 dr21057 threat… CONSER… 2023-0… 2023-0… amie.t… NA            9 NA     NA      #> 7 dr16896 Rare a… CONSER… 2021-0… 2022-1… matthe… NA            1 NA     NA      #> 8 dr16203 EPBC A… SPATIA… 2020-0… 2020-0… robina… NA           10 NA     NA      #> 9 dr19750 Endang… OTHER   2022-0… 2022-1… anneke… NA           73 NA     NA      #> # … with 6 more variables: generalisation <chr>, authority <chr>, #> #   sdsType <chr>, isAuthoritative <lgl>, isInvasive <lgl>, isThreatened <lgl>, #> #   and abbreviated variable names ¹​dataResourceUid, ²​listName, ³​listType, #> #   ⁴​dateCreated, ⁵​lastUpdated, ⁶​username, ⁷​fullName, ⁸​itemCount, ⁹​category  # Search for a valid taxonomic rank, \"subphylum\" search_all(ranks, \"subphylum\") #> # A tibble: 1 × 2 #>      id name      #>   <int> <chr>     #> 1     7 subphylum"},{"path":"https://galah.ala.org.au/reference/search_identifiers.html","id":null,"dir":"Reference","previous_headings":"","what":"Search for taxa with taxonomic identifiers — search_identifiers","title":"Search for taxa with taxonomic identifiers — search_identifiers","text":"ALA, records associated identifier uniquely identifies taxon record belongs. identifiers known, function allows use look information taxon question. Effectively inverse function search_taxa(), takes names provides identifiers. resulting tibble taxonomic information can also passed galah_identify() filter queries specified taxon taxa.","code":""},{"path":"https://galah.ala.org.au/reference/search_identifiers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search for taxa with taxonomic identifiers — search_identifiers","text":"","code":"search_identifiers(query)"},{"path":"https://galah.ala.org.au/reference/search_identifiers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search for taxa with taxonomic identifiers — search_identifiers","text":"query string: vector containing one taxonomic identifiers, given strings.","code":""},{"path":"https://galah.ala.org.au/reference/search_identifiers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search for taxa with taxonomic identifiers — search_identifiers","text":"object class tbl_df, data.frame (aka tibble) ala_id containing taxonomic information.","code":""},{"path":[]},{"path":"https://galah.ala.org.au/reference/search_identifiers.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search for taxa with taxonomic identifiers — search_identifiers","text":"","code":"# Look up a unique taxon identifier search_identifiers(query = \"https://id.biodiversity.org.au/node/apni/2914510\") #> # A tibble: 1 × 14 #>   scient…¹ scien…² taxon…³ rank  match…⁴ kingdom phylum class order family genus #>   <chr>    <chr>   <chr>   <chr> <chr>   <chr>   <chr>  <chr> <chr> <chr>  <chr> #> 1 Eucalyp… Maiden  https:… spec… taxonI… Plantae Charo… Equi… Myrt… Myrta… Euca… #> # … with 3 more variables: species <chr>, vernacular_name <chr>, issues <chr>, #> #   and abbreviated variable names ¹​scientific_name, #> #   ²​scientific_name_authorship, ³​taxon_concept_id, ⁴​match_type"},{"path":"https://galah.ala.org.au/reference/search_media.html","id":null,"dir":"Reference","previous_headings":"","what":"Search for associated media of occurrence records — search_media","title":"Search for associated media of occurrence records — search_media","text":"Search media files set occurrence records downloaded using atlas_occurrences(). search_media() also accepts set media IDs (parsed unparsed).","code":""},{"path":"https://galah.ala.org.au/reference/search_media.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search for associated media of occurrence records — search_media","text":"","code":"search_media(df)"},{"path":"https://galah.ala.org.au/reference/search_media.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search for associated media of occurrence records — search_media","text":"df tibble species occurrence records media IDs.","code":""},{"path":"https://galah.ala.org.au/reference/search_media.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search for associated media of occurrence records — search_media","text":"tibble matching media files occurrence records media ids","code":""},{"path":"https://galah.ala.org.au/reference/search_media.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search for associated media of occurrence records — search_media","text":"","code":"if (FALSE) { # Search for media files for a set of species occurrence records occs <- galah_call() |>   galah_identify(\"perameles\") |>   galah_filter(year == 2001) |>   atlas_occurrences()    search_media(occs) }"},{"path":"https://galah.ala.org.au/reference/search_taxa.html","id":null,"dir":"Reference","previous_headings":"","what":"Look up taxon information — search_taxa","title":"Look up taxon information — search_taxa","text":"Look taxonomic names downloading data ALA, using atlas_occurrences(), atlas_species() atlas_counts(). Taxon information returned search_taxa() may passed galah_identify() provide identify argument atlas_ functions. search_taxa() allows users disambiguate homonyms (.e. name refers taxa different clades) prior downloading data.","code":""},{"path":"https://galah.ala.org.au/reference/search_taxa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Look up taxon information — search_taxa","text":"","code":"search_taxa(...)"},{"path":"https://galah.ala.org.au/reference/search_taxa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Look up taxon information — search_taxa","text":"... : string one scientific names, separated commas, data frame specifying taxonomic levels. Note searches case-sensitive.","code":""},{"path":"https://galah.ala.org.au/reference/search_taxa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Look up taxon information — search_taxa","text":"object class tbl_df, data.frame (aka tibble) ala_id containing taxonomic information.","code":""},{"path":"https://galah.ala.org.au/reference/search_taxa.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Look up taxon information — search_taxa","text":"Users can also specify taxonomic levels search using data frame (tibble). Taxa may specified using either specificEpithet argument designate second element Latin binomial, scientificName argument specify scientific name (may include subspecific epithet required).","code":""},{"path":[]},{"path":"https://galah.ala.org.au/reference/search_taxa.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Look up taxon information — search_taxa","text":"","code":"# Search using a single string.  # Note that `search_taxa()` isn't case sensitive search_taxa(\"Reptilia\") #> # A tibble: 1 × 9 #>   search_term scientific_name taxon_…¹ rank  match…² kingdom phylum class issues #>   <chr>       <chr>           <chr>    <chr> <chr>   <chr>   <chr>  <chr> <chr>  #> 1 Reptilia    REPTILIA        https:/… class exactM… Animal… Chord… Rept… noIss… #> # … with abbreviated variable names ¹​taxon_concept_id, ²​match_type  # Search using multiple strings.  # `search_taxa()` will return one row per taxon search_taxa(\"reptilia\", \"mammalia\") #> # A tibble: 2 × 10 #>   search_term scient…¹ taxon…² rank  match…³ kingdom phylum class issues verna…⁴ #>   <chr>       <chr>    <chr>   <chr> <chr>   <chr>   <chr>  <chr> <chr>  <chr>   #> 1 reptilia    REPTILIA https:… class exactM… Animal… Chord… Rept… noIss… NA      #> 2 mammalia    MAMMALIA https:… class exactM… Animal… Chord… Mamm… noIss… Mammals #> # … with abbreviated variable names ¹​scientific_name, ²​taxon_concept_id, #> #   ³​match_type, ⁴​vernacular_name  # Specify taxonomic levels in a tibble using \"specificEpiphet\" search_taxa(tibble::tibble(   class = \"aves\",    family = \"pardalotidae\",    genus = \"pardalotus\",    specificEpithet = \"punctatus\")) #> # A tibble: 1 × 15 #>   search_term   scien…¹ scien…² taxon…³ rank  match…⁴ kingdom phylum class order #>   <chr>         <chr>   <chr>   <chr>   <chr> <chr>   <chr>   <chr>  <chr> <chr> #> 1 aves_pardalo… Pardal… (Shaw,… https:… spec… exactM… Animal… Chord… Aves  Pass… #> # … with 5 more variables: family <chr>, genus <chr>, species <chr>, #> #   vernacular_name <chr>, issues <chr>, and abbreviated variable names #> #   ¹​scientific_name, ²​scientific_name_authorship, ³​taxon_concept_id, #> #   ⁴​match_type  # Specify taxonomic levels in a tibble using \"scientificName\"                     search_taxa(tibble::tibble(   family = c(\"pardalotidae\", \"maluridae\"),    scientificName = c(\"Pardalotus striatus striatus\", \"malurus cyaneus\"))) #> # A tibble: 2 × 15 #>   search_term   scien…¹ scien…² taxon…³ rank  match…⁴ kingdom phylum class order #>   <chr>         <chr>   <chr>   <chr>   <chr> <chr>   <chr>   <chr>  <chr> <chr> #> 1 pardalotidae… Pardal… (Gmeli… https:… subs… exactM… Animal… Chord… Aves  Pass… #> 2 maluridae_ma… Maluru… (Ellis… https:… spec… exactM… Animal… Chord… Aves  Pass… #> # … with 5 more variables: family <chr>, genus <chr>, species <chr>, #> #   issues <chr>, vernacular_name <chr>, and abbreviated variable names #> #   ¹​scientific_name, ²​scientific_name_authorship, ³​taxon_concept_id, #> #   ⁴​match_type  # `galah_identify()` uses `search_taxa()` to narrow data queries taxa <- search_taxa(\"reptilia\", \"mammalia\") galah_call() |>   galah_identify(taxa) |>   atlas_counts() #> # A tibble: 1 × 1 #>     count #>     <int> #> 1 5282607"},{"path":"https://galah.ala.org.au/reference/select.data_request.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify fields for occurrence download — select.data_request","title":"Specify fields for occurrence download — select.data_request","text":"living atlases store content hundreds different fields, users often require thousands millions records time. reduce time taken download data, limit complexity resulting data.frame, sensible restrict fields returned atlas_occurrences(). function allows easy selection fields, commonly-requested groups columns, following syntax shared dplyr::select().","code":""},{"path":"https://galah.ala.org.au/reference/select.data_request.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify fields for occurrence download — select.data_request","text":"","code":"# S3 method for data_request select(.data, ..., group = c(\"basic\", \"event\", \"media\", \"assertions\"))"},{"path":"https://galah.ala.org.au/reference/select.data_request.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify fields for occurrence download — select.data_request","text":".data object class data_request, created using galah_call() ... zero individual column names include group string: (optional) name one column groups include. Valid options \"basic\", \"event\" \"assertions\"","code":""},{"path":"https://galah.ala.org.au/reference/select.data_request.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specify fields for occurrence download — select.data_request","text":"tibble specifying name type column include call atlas_counts() atlas_occurrences().","code":""},{"path":"https://galah.ala.org.au/reference/select.data_request.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Specify fields for occurrence download — select.data_request","text":"full list available fields can viewed show_all(fields). Calling argument group = \"basic\" returns following columns: decimalLatitude decimalLongitude eventDate scientificName taxonConceptID recordID dataResourceName occurrenceStatus Using group = \"event\" returns following columns: eventRemarks eventTime eventID eventDate samplingEffort samplingProtocol Using group = \"media\" returns following columns: multimedia multimediaLicence images videos sounds Using group = \"assertions\" returns quality assertion-related columns. list assertions shown show_all_assertions().","code":""},{"path":[]},{"path":"https://galah.ala.org.au/reference/show_all.html","id":null,"dir":"Reference","previous_headings":"","what":"Show valid record information — show_all","title":"Show valid record information — show_all","text":"living atlases store huge amount information, beyond occurrence records main output. galah, one way users can investigate information showing available options categories type information interested . Functions prefixed show_all_ , displaying valid options information specified suffix. show_all() helper function can display multiple types information show_all_ sub-functions. See Details () accepted values.","code":""},{"path":"https://galah.ala.org.au/reference/show_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show valid record information — show_all","text":"","code":"show_all(type, limit = NULL)  show_all_assertions(limit = NULL)  show_all_atlases(limit = NULL)  show_all_cached_files(limit = NULL)  show_all_apis(limit = NULL)  show_all_collections(limit = NULL)  show_all_datasets(limit = NULL)  show_all_providers(limit = NULL)  show_all_fields(limit = NULL)  show_all_licences(limit = NULL)  show_all_reasons(limit = NULL)  show_all_ranks(limit = NULL)  show_all_profiles(limit = NULL)  show_all_lists(limit = NULL)"},{"path":"https://galah.ala.org.au/reference/show_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show valid record information — show_all","text":"type string specify type parameters shown. limit Optional number values return. Defaults NULL, .e. records","code":""},{"path":"https://galah.ala.org.au/reference/show_all.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show valid record information — show_all","text":"object class tbl_df data.frame (aka tibble) containing data interest.","code":""},{"path":"https://galah.ala.org.au/reference/show_all.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Show valid record information — show_all","text":"five categories information, specific sub-functions look-type information. available types information show_all_ :","code":""},{"path":"https://galah.ala.org.au/reference/show_all.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Show valid record information — show_all","text":"Darwin Core terms https://dwc.tdwg.org/terms/ ALA fields https://api.ala.org.au/#ws72 ALA assertions fields https://api.ala.org.au/#ws81","code":""},{"path":[]},{"path":"https://galah.ala.org.au/reference/show_all.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show valid record information — show_all","text":"","code":"# See all supported atlases show_all(atlases) #> # A tibble: 11 × 4 #>    region         institution                                      acronym url   #>    <chr>          <chr>                                            <chr>   <chr> #>  1 Australia      Atlas of Living Australia                        ALA     http… #>  2 Austria        Biodiversitäts-Atlas Österreich                  BAO     http… #>  3 Brazil         Sistemas de Informações sobre a Biodiversidade … SiBBr   http… #>  4 Estonia        eElurikkus                                       NA      http… #>  5 France         Portail français d'accès aux données d'observat… OpenObs http… #>  6 Global         Global Biodiversity Information Facility         GBIF    http… #>  7 Guatemala      Sistema Nacional de Información sobre Diversida… SNIBgt  http… #>  8 Portugal       GBIF Portugal                                    GBIF.pt http… #>  9 Spain          GBIF Spain                                       GBIF.es http… #> 10 Sweden         Swedish Biodiversity Data Infrastructure         SBDI    http… #> 11 United Kingdom National Biodiversity Network                    NBN     http…  # Show a list of all available data quality profiles show_all(profiles) #> # A tibble: 7 × 4 #>      id name                                                  shortName  descr…¹ #>   <int> <chr>                                                 <chr>      <chr>   #> 1     2 ALA General (pre-pipelines 3)                         ALA-legacy \"The d… #> 2    35 Species Distribution Modelling (CSDM) (pre-pipelines) CSDM-lega… \"Base … #> 3    44 Data licensed for all uses (pre-pipelines)            re-usable… \"Data … #> 4    92 ALA General                                           ALA        \"The d… #> 5   124 Species Distribution Modelling (CSDM)                 CSDM       \"Base … #> 6   133 Data licensed for all uses                            re-usable  \"Data … #> 7   224 AVH                                                   AVH        \"AVH d… #> # … with abbreviated variable name ¹​description  # Show a listing of all accepted reasons for downloading occurrence data show_all(reasons) #> # A tibble: 13 × 2 #>       id name                             #>    <int> <chr>                            #>  1     0 conservation management/planning #>  2     1 biosecurity management/planning  #>  3     2 environmental assessment         #>  4     3 education                        #>  5     4 scientific research              #>  6     5 collection management            #>  7     6 other                            #>  8     7 ecological research              #>  9     8 systematic research/taxonomy     #> 10    10 testing                          #> 11    11 citizen science                  #> 12    12 restoration/remediation          #> 13    13 species modelling                 # Show a listing of all taxonomic ranks show_all(ranks) #> # A tibble: 69 × 2 #>       id name         #>    <int> <chr>        #>  1     1 root         #>  2     2 superkingdom #>  3     3 kingdom      #>  4     4 subkingdom   #>  5     5 superphylum  #>  6     6 phylum       #>  7     7 subphylum    #>  8     8 superclass   #>  9     9 class        #> 10    10 subclass     #> # … with 59 more rows"},{"path":"https://galah.ala.org.au/reference/show_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Show or search for values within a specified field — show_values","title":"Show or search for values within a specified field — show_values","text":"Users may wish see specific values within chosen field, profile list narrow queries understand information interest. show_values() provides users values. search_values() allows users search specific values within specified field.","code":""},{"path":"https://galah.ala.org.au/reference/show_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show or search for values within a specified field — show_values","text":"","code":"show_values(df)  search_values(df, query)"},{"path":"https://galah.ala.org.au/reference/show_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show or search for values within a specified field — show_values","text":"df search result search_fields(), search_profiles() search_lists(). query string specifying search term. case sensitive.","code":""},{"path":"https://galah.ala.org.au/reference/show_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show or search for values within a specified field — show_values","text":"tibble values specified field, profile list.","code":""},{"path":"https://galah.ala.org.au/reference/show_values.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Show or search for values within a specified field — show_values","text":"Field contains categorical numeric values. example: field \"year\" contains values 2021, 2020, 2019, etc. field \"stateProvince\" contains values New South Wales, Victoria, Queensland, etc. used narrow queries galah_filter(). Profile consists many individual quality filters. example, \"ALA\" profile consists values: Exclude records spatial validity FALSE Exclude records latitude value zero Exclude records longitude value zero List contains list species, usually taxonomic name. example, Endangered Plant species list contains values: Acacia curranii (Curly-bark Wattle) Brachyscome papillosa (Mossgiel Daisy) Solanum karsense (Menindee Nightshade)","code":""},{"path":"https://galah.ala.org.au/reference/show_values.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show or search for values within a specified field — show_values","text":"","code":"# \\donttest{ # Show values in field 'cl22' search_fields(\"cl22\") |>    show_values() #> • Showing values for 'cl22'. #> # A tibble: 11 × 2 #>    field category                     #>    <chr> <chr>                        #>  1 cl22  New South Wales              #>  2 cl22  Victoria                     #>  3 cl22  Queensland                   #>  4 cl22  South Australia              #>  5 cl22  Western Australia            #>  6 cl22  Northern Territory           #>  7 cl22  Australian Capital Territory #>  8 cl22  Tasmania                     #>  9 cl22  Unknown1                     #> 10 cl22  Ashmore and Cartier Islands  #> 11 cl22  Coral Sea Islands             # Search for any values in field 'cl22' that match 'tas' search_fields(\"cl22\") |>    search_values(\"tas\") #> • Showing values for 'cl22'. #> # A tibble: 1 × 2 #>   field category #>   <chr> <chr>    #> 1 cl22  Tasmania  # See items within species list \"dr19257\" search_lists(\"dr19257\") |>    show_values() #> • Showing values for 'dr19257'. #> # A tibble: 17 × 6 #>         id name                                    commo…¹ scien…² lsid  dataR…³ #>      <int> <chr>                                   <chr>   <chr>   <chr> <chr>   #>  1 4051259 https://id.biodiversity.org.au/node/ap… Curly-… Acacia… http… dr19257 #>  2 4051260 https://id.biodiversity.org.au/node/ap… A Spea… Austro… http… dr19257 #>  3 4051261 https://id.biodiversity.org.au/node/ap… Mossgi… Brachy… http… dr19257 #>  4 4051262 https://id.biodiversity.org.au/node/ap… Orchids Orchid… http… dr19257 #>  5 4051263 https://id.biodiversity.org.au/node/ap… Orchids Orchid… http… dr19257 #>  6 4051264 https://id.biodiversity.org.au/node/ap… Bluegr… Dichan… http… dr19257 #>  7 4051265 https://id.biodiversity.org.au/node/ap… Orchids Orchid… http… dr19257 #>  8 4051266 https://id.biodiversity.org.au/node/ap… Spike-… Eleoch… http… dr19257 #>  9 4051267 https://id.biodiversity.org.au/node/ap… Leafle… Indigo… http… dr19257 #> 10 4051268 https://id.biodiversity.org.au/node/ap… Erect … Lepidi… http… dr19257 #> 11 4051269 https://id.biodiversity.org.au/node/ap… Silver… Oleari… http… dr19257 #> 12 4051270 https://id.biodiversity.org.au/node/ap… NA      Philot… http… dr19257 #> 13 4051271 https://id.biodiversity.org.au/node/ap… Orchids Orchid… http… dr19257 #> 14 4051272 https://id.biodiversity.org.au/node/ap… Orchids Orchid… http… dr19257 #> 15 4051273 https://id.biodiversity.org.au/node/ap… Menind… Solanu… http… dr19257 #> 16 4051274 https://id.biodiversity.org.au/node/ap… Slende… Swains… http… dr19257 #> 17 4051275 https://id.biodiversity.org.au/node/ap… NA      Tyloph… http… dr19257 #> # … with abbreviated variable names ¹​commonName, ²​scientificName, #> #   ³​dataResourceUid # }"},{"path":"https://galah.ala.org.au/reference/slice_head.data_request.html","id":null,"dir":"Reference","previous_headings":"","what":"Slice for object of class data_request — slice_head.data_request","title":"Slice for object of class data_request — slice_head.data_request","text":"simple function set 'limit' argument atlas_counts() using dplyr syntax.","code":""},{"path":"https://galah.ala.org.au/reference/slice_head.data_request.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Slice for object of class data_request — slice_head.data_request","text":"","code":"# S3 method for data_request slice_head(.data, ..., n, prop)"},{"path":"https://galah.ala.org.au/reference/slice_head.data_request.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Slice for object of class data_request — slice_head.data_request","text":".data object class data_request, created using galah_call() ... currently ignored n number rows returned. data grouped (using group_by), operation performed group. prop currently ignored","code":""},{"path":"https://galah.ala.org.au/reference/st_crop.data_request.html","id":null,"dir":"Reference","previous_headings":"","what":"Narrow a query to within a specified polygon — st_crop.data_request","title":"Narrow a query to within a specified polygon — st_crop.data_request","text":"Restrict results specified area. Areas must polygons. Polygons must supplied sf object, 'well-known text' (WKT) string, shapefile. Polygons shapefiles must overly complex (.e. many characters many vertices) accepted query ALA. st_crop masked sf, piped galah_call(), functionally  synonymous galah_polygon()","code":""},{"path":"https://galah.ala.org.au/reference/st_crop.data_request.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Narrow a query to within a specified polygon — st_crop.data_request","text":"","code":"# S3 method for data_request st_crop(x, y, ...)"},{"path":"https://galah.ala.org.au/reference/st_crop.data_request.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Narrow a query to within a specified polygon — st_crop.data_request","text":"x object class data_request, created using galah_call() y single sf object, WKT string shapefile ... currently ignored","code":""},{"path":[]},{"path":[]},{"path":"https://galah.ala.org.au/news/index.html","id":"galah-152","dir":"Changelog","previous_headings":"","what":"galah 1.5.2","title":"galah 1.5.2","text":"Minor release resolve issues CRAN, recent bugs.","code":""},{"path":"https://galah.ala.org.au/news/index.html","id":"bug-fixes-1-5-2","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"galah 1.5.2","text":"Prevent error providing tibble input search_taxa() (e.g., resolve homonyms, #168) Better error message email address required, given (#179) Add informative message users call galah_select() atlas = GBIF (supported; #181) Ensure DOIs added downloads requested (#182) Improve tests avoid flagging issues CRAN one atlases (#184) Resolve problem queries replaced ... galah_filter() (#186)","code":""},{"path":"https://galah.ala.org.au/news/index.html","id":"galah-151","dir":"Changelog","previous_headings":"","what":"galah 1.5.1","title":"galah 1.5.1","text":"CRAN release: 2023-01-13","code":""},{"path":"https://galah.ala.org.au/news/index.html","id":"mask-function-names-from-other-packages-1-5-1","dir":"Changelog","previous_headings":"","what":"Mask function names from other packages","title":"galah 1.5.1","text":"experimental feature version 1.5.1 ability call functions packages (#161), synonyms galah_ functions. : identify() ({graphics}) synonym galah_identify() select() (dplyr) synonym galah_select() group_by() (dplyr) synonym galah_group_by() slice_head() (dplyr) synonym limit argument atlas_counts() st_crop() (sf) synonym galah_polygon() count() (dplyr) synonym atlas_counts() implemented S3 methods objects class data_request, created galah_call(). Hence new function names work piped galah_call().","code":""},{"path":"https://galah.ala.org.au/news/index.html","id":"experimental-support-for-gbif-queries-1-5-1","dir":"Changelog","previous_headings":"","what":"Experimental support for GBIF queries","title":"galah 1.5.1","text":"Global Biodiversity Information Facility (GBIF) umbrella organisation atlases supply data. Hence logical able query GBIF ’s “nodes” (.e. living atlases) via common API. Supported functions : search_taxa galah_identify name matching show_all(fields) show_all(assertions) show_all() calls give ‘collections’ information limited 20 records default, GBIF datasets often huge. search_all() generally reliable show_values() GBIF field galah_filter galah_group_by (therefore filter group_by(), see ), galah_select. atlas_counts() (therefore count(), see ) atlas_occurrences() & atlas_species(); implemented via ‘downloads’ system, meaning queries can larger, may slow current implementation experimental back-end changes expected future. Users require stable implementation use {rgbif} package.","code":""},{"path":"https://galah.ala.org.au/news/index.html","id":"minor-improvements-1-5-1","dir":"Changelog","previous_headings":"","what":"Minor improvements","title":"galah 1.5.1","text":"galah_config() gains print function, now uses fuzzy matching atlas field match region, organisation acronym (defined show_all(atlases)). example use case match organisations via acronyms, e.g. galah_config(atlas = \"ALA\"). Improved support data Spain via gbif.es (name-matching, lists, spatial) Swapped provider data France; formerly gbif.fr, now OpenObs, per advice maintainers Reading data disk now uses readr::read_csv place utils::read.csv improved speed show_all (associated sub-functions) gain limit argument, set NULL (.e. limit) default galah longer imports data.table, since function previously used package (rbindlist) duplicated dplyr::bind_rows Help files now built without markdown improved speed (mainly building)","code":""},{"path":"https://galah.ala.org.au/news/index.html","id":"bug-fixes-1-5-1","dir":"Changelog","previous_headings":"","what":"Bug fixes:","title":"galah 1.5.1","text":"New function url_paginate() handle cases pagination needed, total data length unknown (e.g. show_all_lists(), #170). galah_select(group = \"assertions\") always enacted properly atlas_occurrences, won’t lead overly long urls (#137). called without field names, recordID added avoid triggering ‘default’ set columns. atlas_species works minor changes API; requires registered email function","code":""},{"path":"https://galah.ala.org.au/news/index.html","id":"galah-150","dir":"Changelog","previous_headings":"","what":"galah 1.5.0","title":"galah 1.5.0","text":"CRAN release: 2022-10-27","code":""},{"path":"https://galah.ala.org.au/news/index.html","id":"expanded-support-for-querying-other-international-living-atlases-1-5-0","dir":"Changelog","previous_headings":"","what":"Expanded support for querying other International Living Atlases","title":"galah 1.5.0","text":"Support complex queries 10 Living Atlases, including France, Guatemala Sweden. Complex queries can constructed using galah_call(), filtered galah_ functions, downloaded atlas_ functions. Previously, functionality possible queries ALA (#126)","code":""},{"path":"https://galah.ala.org.au/news/index.html","id":"collect_media-1-5-0","dir":"Changelog","previous_headings":"","what":"collect_media()","title":"galah 1.5.0","text":"Show available media: atlas_media() returns tibble available media files Download media: collect_media() downloads list media atlas_media() local machine Download image thumbnails specifying type = \"thumbnails\" collect_media() (#140)","code":""},{"path":"https://galah.ala.org.au/news/index.html","id":"updates-to-galah_geolocate-1-5-0","dir":"Changelog","previous_headings":"","what":"Updates to galah_geolocate()","title":"galah 1.5.0","text":"galah_geolocate() now supports filtering queries using polygons bounding boxes. Overall improvements bug fixes galah_geolocate() new internal functions galah_polygon() galah_bbox() (#125)","code":""},{"path":"https://galah.ala.org.au/news/index.html","id":"show_all-search_all--show_values-search_values-1-5-0","dir":"Changelog","previous_headings":"","what":"show_all(), search_all() & show_values(), search_values()","title":"galah 1.5.0","text":"Experimental functions show_all() search_all() flexible look-functions can search information {galah}, rather separate search_/show_all_ functions (e.g. search_fields(), search_atlases(), show_all_fields(), show_all_reasons(), etc) (#127, #132) Added look-support collections, data providers, data resources, licenses, APIs species lists (e.g. list endangered species) (#126, #127, #132, #151) Checking valid values within fields, profiles species lists improved functions show_values() & search_values() (#131)","code":""},{"path":"https://galah.ala.org.au/news/index.html","id":"minor-improvements-1-5-0","dir":"Changelog","previous_headings":"","what":"Minor improvements","title":"galah 1.5.0","text":"Apply data quality profiles pipe galah_apply_profile() function (#130) Improved internal consistency galah_ functions (#133) galah_geolocate() longer depends archived {wellknown} package (#141) Added support queries exclude/include missing values (e.g. galah_filter(species != \"\") galah_filter(species == \"\") (#143) Re-download previously-minted DOI collect_doi() (#140) checks ensure galah fails gracefully API fails (#157)","code":""},{"path":"https://galah.ala.org.au/news/index.html","id":"bug-fixes-1-5-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"galah 1.5.0","text":"galah_select() longer adds “basic” group columns automatically (#128) galah_config() doesn’t display incorrect preserve = TRUE message (#136) Fixes error selecting assertion columns galah_select() (#137) atlas_counts() atlas_occurrences() longer return different record numbers field empty (#138) atlas_media() results longer differ results returned galah_filter() & atlas_counts() (#151)","code":""},{"path":"https://galah.ala.org.au/news/index.html","id":"galah-140","dir":"Changelog","previous_headings":"","what":"galah 1.4.0","title":"galah 1.4.0","text":"CRAN release: 2022-01-24","code":""},{"path":"https://galah.ala.org.au/news/index.html","id":"revamped-syntax-1-4-0","dir":"Changelog","previous_headings":"","what":"Revamped syntax","title":"galah 1.4.0","text":"ala_ functions renamed use prefix atlas_. change reflects functionality international atlases (.e., atlas_occurrences, atlas_counts, atlas_species, atlas_media, atlas_taxonomy, atlas_citation) (#103) select_taxa replaced 3 functions: galah_identify, search_taxa search_identifiers. galah_identify used building data queries, whereas search_taxa search_identifiers now exclusively used search taxonomic information. Syntax changes intended reflect usage expected output (#112, #122) select_ functions renamed use prefix galah_. Specifically, galah_filter, galah_select galah_geolocate replace select_filters, select_columns select_locations. syntax changes reflect move towards consistency dplyr naming functionality (#101, #108) find_ functions provide listing possible values renamed show_all_ (.e., show_all_profiles, show_all_ranks, show_all_atlases, show_all_cached_files, show_all_fields, show_all_reasons). find_ functions require input return specific results renamed search_ (.e., search_field_values, search_profile_attributes) (#112, #113)","code":""},{"path":"https://galah.ala.org.au/news/index.html","id":"galah_group_by-1-4-0","dir":"Changelog","previous_headings":"","what":"galah_group_by","title":"galah 1.4.0","text":"Group fields using galah_group_by(), groups summarises record counts based categorical field values, similar dplyr::group_by() (#90, #95)","code":""},{"path":"https://galah.ala.org.au/news/index.html","id":"galah_down_to-1-4-0","dir":"Changelog","previous_headings":"","what":"galah_down_to","title":"galah 1.4.0","text":"Select taxonomic level taxonomic tree go galah_down_to() + atlas_taxonomy(), uses tidy evaluation like galah_ functions (#101, #120)","code":""},{"path":"https://galah.ala.org.au/news/index.html","id":"pipe-queries-using-galah_call-1-4-0","dir":"Changelog","previous_headings":"","what":"Pipe queries using galah_call","title":"galah 1.4.0","text":"Build data queries using piping syntax (.e., |>, %>%) first using galah_call(), narrowing queries galah_ functions finishing queries atlas_ function (#60, #120). S3 methods now implemented functions allow piping (#40)","code":""},{"path":"https://galah.ala.org.au/news/index.html","id":"minor-improvements-1-4-0","dir":"Changelog","previous_headings":"","what":"Minor improvements","title":"galah 1.4.0","text":"Improved error messages using {glue} {rlang} (#117) Revamped syntax functions return output tibbles (#110, #118) Pass vectors galah_filter (#91, #92) Cache valid fields faster field look (#73, #116) New vignettes updated syntax (#104, #105), plus improvements previous vignettes. Updated R Markdown-style documentation added warnings deprecated functions (#113, #121)","code":""},{"path":"https://galah.ala.org.au/news/index.html","id":"bug-fixes-1-4-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"galah 1.4.0","text":"galah longer returns error ALA system /API fails (#102, #119) search_taxa returns correct IDs search terms parentheses (#96) search_taxa returns best-fit taxonomic result ranks specified data.frame tibble (#115)","code":""},{"path":"https://galah.ala.org.au/news/index.html","id":"galah-131","dir":"Changelog","previous_headings":"","what":"galah 1.3.1","title":"galah 1.3.1","text":"CRAN release: 2021-08-21","code":""},{"path":"https://galah.ala.org.au/news/index.html","id":"search_taxonomy-renamed-to-ala_taxonomy-1-3-1","dir":"Changelog","previous_headings":"","what":"search_taxonomy() renamed to ala_taxonomy()","title":"galah 1.3.1","text":"bug fix: ala_taxonomy longer fails nodes ranked informal unranked (#86) function now returns tree built using data.tree package change function name required greater consistency data-providing functions galah","code":""},{"path":"https://galah.ala.org.au/news/index.html","id":"vignettes-1-3-1","dir":"Changelog","previous_headings":"","what":"Vignettes","title":"galah 1.3.1","text":"vignettes now pre-compiled avoid failing CRAN (#85) expanded vignette navigating taxonomic information (#42)","code":""},{"path":"https://galah.ala.org.au/news/index.html","id":"galah-130","dir":"Changelog","previous_headings":"","what":"galah 1.3.0","title":"galah 1.3.0","text":"CRAN release: 2021-08-06","code":""},{"path":"https://galah.ala.org.au/news/index.html","id":"galah_config-1-3-0","dir":"Changelog","previous_headings":"","what":"galah_config()","title":"galah 1.3.0","text":"ala_config() renamed galah_config() improve internal consistency (#68)","code":""},{"path":"https://galah.ala.org.au/news/index.html","id":"search_taxonomy-1-3-0","dir":"Changelog","previous_headings":"","what":"search_taxonomy()","title":"galah 1.3.0","text":"search_taxonomy() provides means search taxonomic names check results ‘correct’ proceeding download data via ala_occurrences(), ala_species() ala_counts() (e.g., ambiguous homonymous) (#64 #75) search_taxonomy() returns information author authority taxonomic names (#79) search_taxonomy() consistently orders column names, including correct taxonomic order rank (#81)","code":""},{"path":"https://galah.ala.org.au/news/index.html","id":"caching-helper-functions-1-3-0","dir":"Changelog","previous_headings":"","what":"Caching helper functions","title":"galah 1.3.0","text":"find_cached_files() lists user cached files stored metadata (#57) clear_cached_files() removes previously cached files stored metadata (#71) ala_counts(), ala_occurrences(), ala_media() ala_species() now refresh_cache argument remove previously cached files replace current query (#71)","code":""},{"path":"https://galah.ala.org.au/news/index.html","id":"minor-improvements-1-3-0","dir":"Changelog","previous_headings":"","what":"Minor improvements","title":"galah 1.3.0","text":"Cache files saved RDS format, making query attributes easier find, including data DOI, search url (#55, #32, #28) ala_media() caches media metadata galah_config(caching = TRUE) search_fields() allows user pass qid argument (#59) Users can now optionally skip filter count validation checks spatial biocache web services setting galah_config(run_checks = FALSE). helps users avoid slowing data request download speeds many requests made quick succession via galah_filter() ala_occurrences() (#61, #80) ala_counts(), select_columns() search_fields() now use match.arg approximate strings fuzzy matching (#66) Better handling cache errors improved error messages (#70)","code":""},{"path":"https://galah.ala.org.au/news/index.html","id":"bug-fixes-1-3-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"galah 1.3.0","text":"select_columns(group = 'assertions') now sends qa = includeall ALA web service API return assertion columns (#48) ala_occurrences() returns data DOI ala_occurrences(mint_doi = TRUE) re-downloads data called multiple times (#56) ala_occurrences() longer converts field names -CAPS camelCase (#62)","code":""},{"path":"https://galah.ala.org.au/news/index.html","id":"galah-120","dir":"Changelog","previous_headings":"","what":"galah 1.2.0","title":"galah 1.2.0","text":"CRAN release: 2021-07-02","code":""},{"path":"https://galah.ala.org.au/news/index.html","id":"living-atlases-1-2-0","dir":"Changelog","previous_headings":"","what":"Living Atlases","title":"galah 1.2.0","text":"ala_config() allows users specify international Atlas download data (#21)","code":""},{"path":"https://galah.ala.org.au/news/index.html","id":"minor-improvements-1-2-0","dir":"Changelog","previous_headings":"","what":"Minor improvements","title":"galah 1.2.0","text":"ala_media() includes file path downloaded media returned metadata (#22) Data returned ala_occurrences() contains search_url used download records; takes user website search page (#32) ala_species() provides helpful error species found (#39) Data quality filters created using specific web service argument, rather constructing filters attributes (#37) select_taxa() optional all_ranks argument return intermediate rank information (#35)","code":""},{"path":"https://galah.ala.org.au/news/index.html","id":"bug-fixes-1-2-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"galah 1.2.0","text":"R > 4.0.0 now required (#43, #45) select_taxa() behaves expected character strings 32 36 characters provided (#23) Caching functionality ala_occurrences() uses columns expected (#30) galah_filter() negates assertion filters required, fixing issue assertion values ignored (#27) select_taxa() longer throws error queries one term differing number columns return value (#41) ala_counts() returns data.frame consistent column classes group_by parameter called multiple times ala_config(caching = TRUE) (#47) ala_ functions fail gracefully non-id character string passed (#49)","code":""},{"path":"https://galah.ala.org.au/news/index.html","id":"galah-110","dir":"Changelog","previous_headings":"","what":"galah 1.1.0","title":"galah 1.1.0","text":"CRAN release: 2021-05-05","code":""},{"path":"https://galah.ala.org.au/news/index.html","id":"downloading-media-1-1-0","dir":"Changelog","previous_headings":"","what":"Downloading media","title":"galah 1.1.0","text":"ala_media() now takes select_ arguments ala_ functions (#18) Filtering media metadata e.g. licence type possible (#19) search_fields now media type argument option Performance improvement download times (#13) Progress bar displayed downloads verbose == TRUE (#8) media download types supported","code":""},{"path":"https://galah.ala.org.au/news/index.html","id":"select_-functions-1-1-0","dir":"Changelog","previous_headings":"","what":"select_ functions","title":"galah 1.1.0","text":"galah_location auto-detects type argument provided takes single argument, query, place sf wkt (#17) select_taxa auto-detects type argument provided takes single argument, query, place term term_type (#16)","code":""},{"path":"https://galah.ala.org.au/news/index.html","id":"minor-improvements-1-1-0","dir":"Changelog","previous_headings":"","what":"Minor improvements","title":"galah 1.1.0","text":"Provide useful error message empty occurrence download (#7) ala_counts uses group_by field name returned data.frame column name (#6) ala_occurrences sends sourceId parameter ALA (#5) search_fields provides helpful error invalid types (#11)","code":""},{"path":"https://galah.ala.org.au/news/index.html","id":"galah-100","dir":"Changelog","previous_headings":"","what":"galah 1.0.0","title":"galah 1.0.0","text":"CRAN release: 2021-04-06 First version galah, built earlier functionality ALA4R package.","code":""}]
