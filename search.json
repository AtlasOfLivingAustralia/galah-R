[{"path":"https://atlasoflivingaustralia.github.io/galah/articles/download_data.html","id":"record-counts","dir":"Articles","previous_headings":"","what":"Record counts","title":"Download data","text":"atlas_counts() provides summary counts records specified atlas, without needing download records. addition filter arguments, optional group_by argument, provides counts binned requested field.","code":"galah_config(atlas = \"Australia\") # Total number of records in the ALA atlas_counts() ## # A tibble: 1 × 1 ##       count ##       <int> ## 1 114080945 galah_call() |>   galah_group_by(kingdom) |>   atlas_counts() ## # A tibble: 10 × 2 ##    kingdom      count ##    <chr>        <int> ##  1 Animalia  86721724 ##  2 Plantae   23682009 ##  3 Fungi      2069747 ##  4 Chromista   851968 ##  5 Protista    142019 ##  6 Bacteria     71333 ##  7 Protozoa      3177 ##  8 Eukaryota     1338 ##  9 Archaea       1106 ## 10 Virus          511"},{"path":"https://atlasoflivingaustralia.github.io/galah/articles/download_data.html","id":"species-lists","dir":"Articles","previous_headings":"","what":"Species lists","title":"Download data","text":"common use case atlas data identify species occur specified region, time period, taxonomic group. atlas_species() similar search_taxa, returns taxonomic information unique identifiers tibble. differs able return information taxonomic levels species; also flexible supporting filtering:","code":"species <- galah_call() |>   galah_identify(\"Rodentia\") |>   galah_filter(stateProvince == \"Northern Territory\") |>   atlas_species()    species |> head() ## # A tibble: 6 × 10 ##   kingdom  phylum   class    order    family  genus        species                     author            species_guid       verna…¹ ##   <chr>    <chr>    <chr>    <chr>    <chr>   <chr>        <chr>                       <chr>             <chr>              <chr>   ## 1 Animalia Chordata Mammalia Rodentia Muridae Mesembriomys Mesembriomys gouldii        (J.E. Gray, 1843) https://biodivers… Black-… ## 2 Animalia Chordata Mammalia Rodentia Muridae Zyzomys      Zyzomys argurus             (Thomas, 1889)    https://biodivers… Common… ## 3 Animalia Chordata Mammalia Rodentia Muridae Pseudomys    Pseudomys hermannsburgensis (Waite, 1896)     https://biodivers… Sandy … ## 4 Animalia Chordata Mammalia Rodentia Muridae Notomys      Notomys alexis              Thomas, 1922      https://biodivers… Spinif… ## 5 Animalia Chordata Mammalia Rodentia Muridae Melomys      Melomys burtoni             (Ramsay, 1887)    https://biodivers… Grassl… ## 6 Animalia Chordata Mammalia Rodentia Muridae Mus          Mus musculus                Linnaeus, 1758    https://biodivers… House … ## # … with abbreviated variable name ¹​vernacular_name"},{"path":"https://atlasoflivingaustralia.github.io/galah/articles/download_data.html","id":"occurrence-data","dir":"Articles","previous_headings":"","what":"Occurrence data","title":"Download data","text":"download occurrence data need specify email galah_config(). email must associated active ALA account. See information config section Download occurrence records Eolophus roseicapilla","code":"galah_config(email = \"your_email@email.com\", atlas = \"Australia\") occ <- galah_call() |>   galah_identify(\"Eolophus roseicapilla\") |>   galah_filter(     stateProvince == \"Australian Capital Territory\",     year >= 2010,     profile = \"ALA\"   ) |>   galah_select(institutionID, group = \"basic\") |>   atlas_occurrences()    occ |> head() ## # A tibble: 6 × 9 ##   decimalLatitude decimalLongitude eventDate            scientificName        taxonConceptID        recor…¹ dataR…² occur…³ insti…⁴ ##             <dbl>            <dbl> <chr>                <chr>                 <chr>                 <chr>   <chr>   <chr>   <chr>   ## 1           -35.9             149. 2020-09-12T14:00:00Z Eolophus roseicapilla https://biodiversity… 17f46d… eBird … PRESENT \"\"      ## 2           -35.9             149. 2014-10-24T02:00:00Z Eolophus roseicapilla https://biodiversity… b0e189… Nature… PRESENT \"\"      ## 3           -35.9             149. 2021-09-27T14:00:00Z Eolophus roseicapilla https://biodiversity… dbb711… eBird … PRESENT \"\"      ## 4           -35.9             149. 2012-01-18T13:00:00Z Eolophus roseicapilla https://biodiversity… 4f7cd7… BirdLi… PRESENT \"\"      ## 5           -35.9             149. 2012-01-18T02:00:00Z Eolophus roseicapilla https://biodiversity… 147acb… Nature… PRESENT \"\"      ## 6           -35.9             149. 2017-03-17T13:00:00Z Eolophus roseicapilla https://biodiversity… 3236c4… eBird … PRESENT \"\"      ## # … with abbreviated variable names ¹​recordID, ²​dataResourceName, ³​occurrenceStatus, ⁴​institutionID"},{"path":"https://atlasoflivingaustralia.github.io/galah/articles/download_data.html","id":"media-metadata","dir":"Articles","previous_headings":"","what":"Media metadata","title":"Download data","text":"addition text data describing individual occurrences attributes, ALA stores images, sounds videos associated given record. Metadata records can downloaded R using atlas_media() set filters data download functions. actually download media files computer, use [collect_media()].","code":"media_data <- galah_call() |>   galah_identify(\"Eolophus roseicapilla\") |>   galah_filter(     year == 2020,     cl22 == \"Australian Capital Territory\") |>   atlas_media()    media_data |> head() ## # A tibble: 6 × 20 ##   decimalLat…¹ decim…² event…³ scien…⁴ taxon…⁵ recor…⁶ dataR…⁷ occur…⁸ multi…⁹ media…˟ mime_…˟ size_…˟ date_…˟ date_…˟ height width ##          <dbl>   <dbl> <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>     <int> <chr>   <chr>    <int> <int> ## 1        -35.6    149. 2020-0… Eoloph… https:… 063bb0… iNatur… PRESENT Image   2f4d32… image/… 2654217 2020-0… 2020-0…   1200  1800 ## 2        -35.6    149. 2020-0… Eoloph… https:… 063bb0… iNatur… PRESENT Image   734074… image/… 2422643 2020-0… 2020-0…   1200  1800 ## 3        -35.6    149. 2020-0… Eoloph… https:… 063bb0… iNatur… PRESENT Image   89171c… image/… 2212660 2020-0… 2020-0…   1200  1800 ## 4        -35.6    149. 2020-0… Eoloph… https:… 063bb0… iNatur… PRESENT Image   e681d3… image/… 3414736 2020-0… 2020-0…   1200  1800 ## 5        -35.5    149. 2020-0… Eoloph… https:… 286841… iNatur… PRESENT Image   1295c2… image/…  863158 2021-0… 2021-0…   1200  1800 ## 6        -35.5    149. 2020-1… Eoloph… https:… 064a39… iNatur… PRESENT Image   f97686… image/…  955916 2020-1… 2020-1…   1200  1800 ## # … with 4 more variables: creator <chr>, license <chr>, data_resource_uid <chr>, occurrence_id <chr>, and abbreviated variable ## #   names ¹​decimalLatitude, ²​decimalLongitude, ³​eventDate, ⁴​scientificName, ⁵​taxonConceptID, ⁶​recordID, ⁷​dataResourceName, ## #   ⁸​occurrenceStatus, ⁹​multimedia, ˟​media_id, ˟​mime_type, ˟​size_in_bytes, ˟​date_uploaded, ˟​date_taken"},{"path":"https://atlasoflivingaustralia.github.io/galah/articles/download_data.html","id":"taxonomic-trees","dir":"Articles","previous_headings":"","what":"Taxonomic trees","title":"Download data","text":"atlas_taxonomy provides way build taxonomic trees one clade another using ALA’s internal taxonomy. Specify taxonomic level tree go galah_down_to. function unique within galah function returns data.tree, rather tibble. Although tree format useful, converting data.frame straightforward.","code":"classes <- galah_call() |>   galah_identify(\"chordata\") |>   galah_down_to(class) |>   atlas_taxonomy() ##                             levelName ## 1  Chordata                           ## 2   ¦--Cephalochordata                ## 3   ¦   °--Amphioxi                   ## 4   ¦--Craniata                       ## 5   ¦   °--Agnatha                    ## 6   ¦       ¦--Cephalasipidomorphi    ## 7   ¦       °--Myxini                 ## 8   ¦--Tunicata                       ## 9   ¦   ¦--Appendicularia             ## 10  ¦   ¦--Ascidiacea                 ## 11  ¦   °--Thaliacea                  ## 12  °--Vertebrata                     ## 13      °--Gnathostomata              ## 14          ¦--Amphibia               ## 15          ¦--Aves                   ## 16          ¦--Mammalia               ## 17          ¦--Pisces                 ## 18          ¦   ¦--Actinopterygii     ## 19          ¦   ¦--Chondrichthyes     ## 20          ¦   ¦--Cephalaspidomorphi ## 21          ¦   °--Sarcopterygii      ## 22          °--Reptilia data.tree::ToDataFrameTypeCol(classes, type = \"rank\") |> head() ##   rank_phylum  rank_subphylum rank_superclass rank_informal          rank_class ## 1    Chordata Cephalochordata            <NA>          <NA>            Amphioxi ## 2    Chordata        Craniata         Agnatha          <NA> Cephalasipidomorphi ## 3    Chordata        Craniata         Agnatha          <NA>              Myxini ## 4    Chordata        Tunicata            <NA>          <NA>      Appendicularia ## 5    Chordata        Tunicata            <NA>          <NA>          Ascidiacea ## 6    Chordata        Tunicata            <NA>          <NA>           Thaliacea"},{"path":"https://atlasoflivingaustralia.github.io/galah/articles/download_data.html","id":"configuring-galah","dir":"Articles","previous_headings":"","what":"Configuring galah","title":"Download data","text":"Various aspects galah package can customized. preserve configuration future sessions, set profile_path location .Rprofile file.","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/articles/download_data.html","id":"email","dir":"Articles","previous_headings":"Configuring galah","what":"Email","title":"Download data","text":"download occurrence records, need provide email address registered ALA. can create account . email registered ALA, stored config:","code":"galah_config(email = \"myemail@gmail.com\")"},{"path":"https://atlasoflivingaustralia.github.io/galah/articles/download_data.html","id":"caching","dir":"Articles","previous_headings":"Configuring galah","what":"Caching","title":"Download data","text":"galah can cache results local files. means code run multiple times, second subsequent iterations faster. default, caching session-based, meaning local files stored temporary directory automatically deleted R session ended. behaviour can altered caching permanent, setting caching directory non-temporary location. default, caching turned . turn caching , run","code":"galah_config(cache_directory = \"example/dir\") galah_config(caching = FALSE)"},{"path":"https://atlasoflivingaustralia.github.io/galah/articles/download_data.html","id":"setting-the-download-reason","dir":"Articles","previous_headings":"Configuring galah","what":"Setting the download reason","title":"Download data","text":"ALA requires provide reason downloading occurrence data (via galah atlas_occurrences() function). reason set “scientific research” default, can change using galah_config(). See show_all_reasons() valid download reasons.","code":"galah_config(download_reason_id = your_reason_id)"},{"path":"https://atlasoflivingaustralia.github.io/galah/articles/download_data.html","id":"debugging","dir":"Articles","previous_headings":"Configuring galah","what":"Debugging","title":"Download data","text":"things aren’t working expected, detail (particularly web requests caching behaviour) can obtained setting verbose configuration option:","code":"galah_config(verbose = TRUE)"},{"path":"https://atlasoflivingaustralia.github.io/galah/articles/international_atlases.html","id":"supported-atlases","dir":"Articles","previous_headings":"","what":"Supported Atlases","title":"International Atlases","text":"see international Living Atlases galah currently supports, useshow_all_atlases(). atlases support types data queries others (e.g. counts, occurrences, species lists). see kinds information data can returned atlase, can see list supported Application Programming Interfaces (APIs).","code":"library(galah) show_all(atlases) ## # A tibble: 10 × 4 ##    atlas          institution                                                             acronym url                          ##    <chr>          <chr>                                                                   <chr>   <chr>                        ##  1 Australia      Atlas of Living Australia                                               ALA     https://www.ala.org.au       ##  2 Austria        Biodiversitäts-Atlas Österreich                                         BAO     https://biodiversityatlas.at ##  3 Brazil         Sistemas de Informações sobre a Biodiversidade Brasileira               SiBBr   https://sibbr.gov.br         ##  4 Estonia        eElurikkus                                                              <NA>    https://elurikkus.ee         ##  5 France         Inventaire National du Patrimoine Naturel                               INPN    https://inpn.mnhn.fr         ##  6 Guatemala      Sistema Nacional de Información sobre Diversidad Biológica de Guatemala SNIBgt  https://snib.conap.gob.gt    ##  7 Portugal       GBIF Portugal                                                           GBIF.pt https://www.gbif.pt          ##  8 Spain          GBIF Spain                                                              GBIF.es https://www.gbif.es          ##  9 Sweden         Swedish Biodiversity Data Infrastructure                                SBDI    https://biodiversitydata.se  ## 10 United Kingdom National Biodiversity Network                                           NBN     https://nbn.org.uk show_all(apis) ## # A tibble: 167 × 5 ##    atlas     system       api_name                api_url                                                                     calle…¹ ##    <chr>     <chr>        <chr>                   <chr>                                                                       <chr>   ##  1 Australia collections  collections_collections https://collections.ala.org.au/ws/collection                                show_a… ##  2 Australia collections  collections_datasets    https://collections.ala.org.au/ws/dataResource                              show_a… ##  3 Australia collections  collections_providers   https://collections.ala.org.au/ws/dataProvider                              show_a… ##  4 Australia data-quality profiles_all            https://data-quality-service.ala.org.au/api/v1/data-profiles                show_a… ##  5 Australia data-quality profiles_lookup         https://data-quality-service.ala.org.au/api/v1/quality/activeProfile?profi… show_p… ##  6 Australia doi          doi_download            https://apis.ala.org.au/doi/api/doi/{doi_string}/download                   doi_do… ##  7 Australia images       image_licences          https://images.ala.org.au/ws/licence                                        show_a… ##  8 Australia images       image_metadata          https://images.ala.org.au/ws/image/{id}                                     media_… ##  9 Australia lists        lists_all               https://lists.ala.org.au/ws/speciesList                                     show_a… ## 10 Australia lists        lists_lookup            https://lists.ala.org.au/ws/speciesListItems/{list_id}                      show_l… ## # … with 157 more rows, and abbreviated variable name ¹​called_by"},{"path":"https://atlasoflivingaustralia.github.io/galah/articles/international_atlases.html","id":"set-atlas","dir":"Articles","previous_headings":"","what":"Set Atlas","title":"International Atlases","text":"Set atlas want use changing atlas argument galah_config(). automatically update galah’s server configuration selected Atlas. default atlas Australia. intend download records, may need register user profile relevant Atlas first.","code":"galah_config(atlas = \"Spain\", email = \"your_email_here\")"},{"path":"https://atlasoflivingaustralia.github.io/galah/articles/international_atlases.html","id":"look-up-information","dir":"Articles","previous_headings":"","what":"Look up Information","title":"International Atlases","text":"can use look-functions find useful information Atlas set. Available information may vary Living Atlas.","code":"galah_config(atlas = \"Guatemala\")  show_all(datasets) ## # A tibble: 522 × 3 ##    name                                                                                                                   uri   uid   ##    <chr>                                                                                                                  <chr> <chr> ##  1 A Distribution and Taxonomic Reference Dataset of Geranium (Geraniaceae) in the New World                              http… dr321 ##  2 A global database for the distributions of crop wild relatives                                                         http… dr12  ##  3 A matrix-based revision of the genus Hypogena Dejean, 1834 (Coleoptera Tenebrionidae)                                  http… dr467 ##  4 A new Mexican species of Chrysina Kirby (Coleoptera: Scarabaeidae: Rutelinae), with nomenclatural changes, new record… http… dr554 ##  5 A new species of Setostylus Matile and new records of Setostylus bellulus (Williston) (Diptera: Keroplatidae)          http… dr538 ##  6 A revision of the genus Bromeloecia Spuler (Diptera: Sphaeroceridae: Limosininae)                                      http… dr481 ##  7 A synopsis of American Caraphia Gahan, 1906 (Coleoptera: Cerambycidae: Lepturinae) with description of two new species http… dr539 ##  8 A synopsis of the Neotropical genus Protoneura (Odonata: Coenagrionidae)                                               http… dr448 ##  9 A systematic revision of the genus Archocentrus (Perciformes: Cichlidae), with the description of two new genera and … http… dr362 ## 10 A taxonomic monograph of the genus Tylodinus Champion (Coleoptera: Curculionidae: Cryptorhynchinae: Tylodina) of Chia… http… dr564 ## # … with 512 more rows show_all(fields) ## # A tibble: 129 × 4 ##    id                   description                                                                                       type  link  ##    <chr>                <chr>                                                                                             <chr> <chr> ##  1 all_image_url        Image URLs for this record                                                                        fiel… <NA>  ##  2 assertion_user_id    User ID of the person who has made an assertion about this record                                 fiel… <NA>  ##  3 assertions           A list of all assertions (user and system supplied) for a record resulting from data quality tes… fiel… <NA>  ##  4 assertions_missing   Assertion indicating missing field values for a record. E.g. missing basis of record              fiel… <NA>  ##  5 assertions_passed    Assertion indicating a data quality test has been passed by this record                           fiel… <NA>  ##  6 assertions_unchecked Assertion indicating a data quality test was not performed for this record typically due to the … fiel… <NA>  ##  7 basis_of_record      The basis of record e.g. Specimen, Observation http://rs.tdwg.org/dwc/terms/basisOfRecord         fiel… <NA>  ##  8 catalogue_number     http://rs.tdwg.org/dwc/terms/catalogNumber                                                        fiel… <NA>  ##  9 class                The class the Atlas has matched this record to in the NSL http://rs.tdwg.org/dwc/terms/class      fiel… <NA>  ## 10 collection_code      The collection code for this record. This will be populated if the data has come from a museum o… fiel… <NA>  ## # … with 119 more rows search_all(fields, \"year\") ## # A tibble: 3 × 4 ##   id              description                                                                                             type  link  ##   <chr>           <chr>                                                                                                   <chr> <chr> ## 1 year            http://rs.tdwg.org/dwc/terms/year                                                                       fiel… <NA>  ## 2 occurrence_year Year ranges for a search. Calculated based on the unique values for a query.                            fiel… <NA>  ## 3 date_precision  The precision of the date information for the record. Values include 'Day', 'Month', 'Year', 'Year ran… fiel… <NA> search_taxa(\"lagomorpha\") ## # A tibble: 1 × 12 ##   search_term taxon_concept_id scientific_name scientific_name_authorship rank  kingdom  phylum   class    order family genus species ##   <chr>       <chr>            <chr>           <chr>                      <chr> <chr>    <chr>    <chr>    <chr> <chr>  <chr> <chr>   ## 1 lagomorpha  785              Lagomorpha      <NA>                       order Animalia Chordata Mammalia Lago… <NA>   <NA>  <NA>"},{"path":"https://atlasoflivingaustralia.github.io/galah/articles/international_atlases.html","id":"download-data","dir":"Articles","previous_headings":"","what":"Download data","title":"International Atlases","text":"can build queries normally galah. taxonomic queries, use search_taxa() make sure searches returning correct taxonomic data. Download species occurrence records atlases atlas_occurrences()","code":"galah_config(atlas = \"United Kingdom\")  search_taxa(\"vlps\")   # Returns no data due to misspelling ## # A tibble: 1 × 1 ##   search_term ##   <chr>       ## 1 vlps search_taxa(\"vulpes\") # Returns data ## # A tibble: 1 × 13 ##   search_term taxon_concept_id scientific_name scientific_name_author…¹ rank  kingdom super…² order class genus phylum family species ##   <chr>       <chr>            <chr>           <chr>                    <chr> <chr>   <chr>   <chr> <chr> <chr> <chr>  <chr>  <chr>   ## 1 vulpes      NBNSYS0000138878 Vulpes          Frisch, 1775             genus Animal… Tetrap… Carn… Mamm… Vulp… Chord… Canid… <NA>    ## # … with abbreviated variable names ¹​scientific_name_authorship, ²​superclass galah_call() |>   galah_identify(\"vulpes\") |>   galah_filter(year > 2010) |>   atlas_counts() ## # A tibble: 1 × 1 ##   count ##   <int> ## 1 97224 galah_config(atlas = \"Guatemala\")  galah_call() |>   galah_identify(\"Lagomorpha\") |>   galah_filter(year <= 1980) |>   galah_select(taxon_name, year) |>   atlas_occurrences() ## # A tibble: 39 × 2 ##    scientificName                                         year ##    <chr>                                                 <int> ##  1 Sylvilagus floridanus (J. A. Allen, 1890)              1968 ##  2 Sylvilagus floridanus (J. A. Allen, 1890)              1906 ##  3 Sylvilagus brasiliensis subsp. truei (J. Allen, 1890)  1947 ##  4 Sylvilagus floridanus (J. A. Allen, 1890)              1968 ##  5 Sylvilagus floridanus (J. A. Allen, 1890)              1968 ##  6 Sylvilagus floridanus (J. A. Allen, 1890)              1906 ##  7 Sylvilagus floridanus (J. A. Allen, 1890)              1960 ##  8 Sylvilagus brasiliensis subsp. truei (J. Allen, 1890)  1960 ##  9 Sylvilagus floridanus (J. A. Allen, 1890)              1952 ## 10 Sylvilagus floridanus (J. A. Allen, 1890)              1955 ## # … with 29 more rows"},{"path":"https://atlasoflivingaustralia.github.io/galah/articles/international_atlases.html","id":"complex-queries-with-multiple-atlases","dir":"Articles","previous_headings":"","what":"Complex queries with multiple Atlases","title":"International Atlases","text":"also possible create complex queries return data multiple Living Atlases. example, setting atlases within loop galah_config() purrr::map() allows us return total number species records Living Atlas one table.","code":"library(purrr) library(tibble) library(dplyr) library(gt)  atlases <- show_all(atlases)  counts <- map(atlases$atlas,    function(x){     galah_config(atlas = x)     atlas_counts() })  tibble(   atlas = atlases$atlas,    n = unlist(counts)) |>    filter(n > 0) |>   arrange(desc(n)) |>   gt()"},{"path":"https://atlasoflivingaustralia.github.io/galah/articles/look_up_information.html","id":"show_all-search_all","dir":"Articles","previous_headings":"","what":"show_all() & search_all()","title":"Look up information","text":"galah 1.5.0, two simplified functions look information: show_all() search_all(). individual functions able return types information one place, rather using specific sub-functions look information. example, show available Living Atlases supported: search specific available Living Atlas: show fields: search specific field: list information types can used show_all() search_all():","code":"show_all(atlases) ## # A tibble: 10 × 4 ##    atlas          institution                                                             acronym url                          ##    <chr>          <chr>                                                                   <chr>   <chr>                        ##  1 Australia      Atlas of Living Australia                                               ALA     https://www.ala.org.au       ##  2 Austria        Biodiversitäts-Atlas Österreich                                         BAO     https://biodiversityatlas.at ##  3 Brazil         Sistemas de Informações sobre a Biodiversidade Brasileira               SiBBr   https://sibbr.gov.br         ##  4 Estonia        eElurikkus                                                              <NA>    https://elurikkus.ee         ##  5 France         Inventaire National du Patrimoine Naturel                               INPN    https://inpn.mnhn.fr         ##  6 Guatemala      Sistema Nacional de Información sobre Diversidad Biológica de Guatemala SNIBgt  https://snib.conap.gob.gt    ##  7 Portugal       GBIF Portugal                                                           GBIF.pt https://www.gbif.pt          ##  8 Spain          GBIF Spain                                                              GBIF.es https://www.gbif.es          ##  9 Sweden         Swedish Biodiversity Data Infrastructure                                SBDI    https://biodiversitydata.se  ## 10 United Kingdom National Biodiversity Network                                           NBN     https://nbn.org.uk search_all(atlases, \"Spain\") ## # A tibble: 1 × 4 ##   atlas institution acronym url                 ##   <chr> <chr>       <chr>   <chr>               ## 1 Spain GBIF Spain  GBIF.es https://www.gbif.es show_all(fields) ## # A tibble: 813 × 4 ##    id                    description                                                                                      type  link  ##    <chr>                 <chr>                                                                                            <chr> <chr> ##  1 abcdTypeStatus        ABCD field in use by herbaria                                                                    fiel… <NA>  ##  2 acceptedNameUsage     http://rs.tdwg.org/dwc/terms/acceptedNameUsage                                                   fiel… <NA>  ##  3 acceptedNameUsageID   http://rs.tdwg.org/dwc/terms/acceptedNameUsageID                                                 fiel… <NA>  ##  4 accessRights          <NA>                                                                                             fiel… <NA>  ##  5 assertionUserId       User ID of the person who has made an assertion about this record                                fiel… <NA>  ##  6 assertions            A list of all assertions (user and system supplied) for a record resulting from data quality te… fiel… <NA>  ##  7 associatedMedia       http://rs.tdwg.org/dwc/terms/associatedMedia                                                     fiel… <NA>  ##  8 associatedOccurrences http://rs.tdwg.org/dwc/terms/associatedOccurrences                                               fiel… <NA>  ##  9 associatedOrganisms   http://rs.tdwg.org/dwc/terms/associatedOrganisms                                                 fiel… <NA>  ## 10 associatedReferences  http://rs.tdwg.org/dwc/terms/associatedReferences                                                fiel… <NA>  ## # … with 803 more rows search_all(fields, \"australian states\") ## # A tibble: 2 × 4 ##   id     description                                                                                                      type  link  ##   <chr>  <chr>                                                                                                            <chr> <chr> ## 1 cl2013 ASGS Australian States and Territories Australian Statistical Geography Standard  Australian States and Territo… laye… http… ## 2 cl22   Australian States and Territories Australian States and Territories                                              laye… http…"},{"path":"https://atlasoflivingaustralia.github.io/galah/articles/look_up_information.html","id":"show_all_-subfunctions","dir":"Articles","previous_headings":"","what":"show_all_ subfunctions","title":"Look up information","text":"show_all useful variety cases, can still call underlying subfunctions prefer. functions - prefix show_all_ - return tibble exactly ; showing possible values category specified. functions include: show_all_fields show_all_atlases show_all_ranks show_all_profiles show_all_reasons show_all_cached_files show_all_ functions require arguments. Simply call function return accepted values tibble:","code":"show_all_atlases() ## # A tibble: 10 × 4 ##    atlas          institution                                                             acronym url                          ##    <chr>          <chr>                                                                   <chr>   <chr>                        ##  1 Australia      Atlas of Living Australia                                               ALA     https://www.ala.org.au       ##  2 Austria        Biodiversitäts-Atlas Österreich                                         BAO     https://biodiversityatlas.at ##  3 Brazil         Sistemas de Informações sobre a Biodiversidade Brasileira               SiBBr   https://sibbr.gov.br         ##  4 Estonia        eElurikkus                                                              <NA>    https://elurikkus.ee         ##  5 France         Inventaire National du Patrimoine Naturel                               INPN    https://inpn.mnhn.fr         ##  6 Guatemala      Sistema Nacional de Información sobre Diversidad Biológica de Guatemala SNIBgt  https://snib.conap.gob.gt    ##  7 Portugal       GBIF Portugal                                                           GBIF.pt https://www.gbif.pt          ##  8 Spain          GBIF Spain                                                              GBIF.es https://www.gbif.es          ##  9 Sweden         Swedish Biodiversity Data Infrastructure                                SBDI    https://biodiversitydata.se  ## 10 United Kingdom National Biodiversity Network                                           NBN     https://nbn.org.uk show_all_reasons() ## # A tibble: 13 × 2 ##       id name                             ##    <int> <chr>                            ##  1     0 conservation management/planning ##  2     1 biosecurity management/planning  ##  3     2 environmental assessment         ##  4     3 education                        ##  5     4 scientific research              ##  6     5 collection management            ##  7     6 other                            ##  8     7 ecological research              ##  9     8 systematic research/taxonomy     ## 10    10 testing                          ## 11    11 citizen science                  ## 12    12 restoration/remediation          ## 13    13 species modelling"},{"path":"https://atlasoflivingaustralia.github.io/galah/articles/look_up_information.html","id":"search_-subfunctions","dir":"Articles","previous_headings":"","what":"search_ subfunctions","title":"Look up information","text":"second subset lookup subfunctions use search_ prefix, differ show_all_ require query work. used search detailed information can’t summarised across whole atlas, include: search_taxa search_identifiers search_fields search_field_values search_profile attributes Search single taxon multiple taxa name search_taxa. Alternatively, search_identifiers partner function search_taxa. already know taxonomic identifier, can search taxa identifier belongs search_identifiers: Sifting output show_all_fields find specific field can inefficient. Instead, might wish use search_fields look specific fields match search. search_taxa, search_fields requires query work.","code":"search_taxa(\"reptilia\") ## # A tibble: 1 × 9 ##   search_term scientific_name taxon_concept_id                                              rank  match…¹ kingdom phylum class issues ##   <chr>       <chr>           <chr>                                                         <chr> <chr>   <chr>   <chr>  <chr> <chr>  ## 1 reptilia    REPTILIA        https://biodiversity.org.au/afd/taxa/682e1228-5b3c-45ff-833b… class exactM… Animal… Chord… Rept… noIss… ## # … with abbreviated variable name ¹​match_type search_taxa(\"reptilia\", \"aves\", \"mammalia\", \"pisces\") ## # A tibble: 4 × 10 ##   search_term scientific_name taxon_concept_id                                      rank  match…¹ kingdom phylum class issues verna…² ##   <chr>       <chr>           <chr>                                                 <chr> <chr>   <chr>   <chr>  <chr> <chr>  <chr>   ## 1 reptilia    REPTILIA        https://biodiversity.org.au/afd/taxa/682e1228-5b3c-4… class exactM… Animal… Chord… Rept… noIss… <NA>    ## 2 aves        AVES            https://biodiversity.org.au/afd/taxa/65625205-db74-4… class exactM… Animal… Chord… Aves  noIss… Birds   ## 3 mammalia    MAMMALIA        https://biodiversity.org.au/afd/taxa/e9e7db31-04df-4… class exactM… Animal… Chord… Mamm… noIss… Mammals ## 4 pisces      PISCES          https://biodiversity.org.au/afd/taxa/e22efeb4-2cb5-4… <NA>  exactM… Animal… Chord… <NA>  noIss… Fishes  ## # … with abbreviated variable names ¹​match_type, ²​vernacular_name search_identifiers(\"urn:lsid:biodiversity.org.au:afd.taxon:682e1228-5b3c-45ff-833b-550efd40c399\") ## # A tibble: 1 × 8 ##   scientific_name taxon_concept_id                                                          rank  match…¹ kingdom phylum class issues ##   <chr>           <chr>                                                                     <chr> <chr>   <chr>   <chr>  <chr> <chr>  ## 1 REPTILIA        https://biodiversity.org.au/afd/taxa/682e1228-5b3c-45ff-833b-550efd40c399 class taxonI… Animal… Chord… Rept… noIss… ## # … with abbreviated variable name ¹​match_type search_fields(\"date\") |> head() ## # A tibble: 6 × 4 ##   id           description                                                                                                type  link  ##   <chr>        <chr>                                                                                                      <chr> <chr> ## 1 month        \"Month of observation, specimen collection date. http://rs.tdwg.org/dwc/terms/month\"                       fiel… <NA>  ## 2 cl23         \"Local Government Areas 2012 deprecated LGA Boundaries (superceeded by update Local Government Areas 2012… laye… http… ## 3 eventDate    \"The ISO formatted date of observation, specimen collection date. http://rs.tdwg.org/dwc/terms/eventDate\"  fiel… <NA>  ## 4 cl10903      \"Tenure of Australia's forests (2013) v2.0 Tenure of Australia's forests (2013) v2.0 is a continental dat… laye… http… ## 5 cl10955      \"National Indicative Aggregated Fire Extent Dataset 2019-2020 - v20200324 The National Indicative Aggrega… laye… http… ## 6 lastLoadDate  <NA>                                                                                                      fiel… <NA>"},{"path":"https://atlasoflivingaustralia.github.io/galah/articles/look_up_information.html","id":"show_values-search_values","dir":"Articles","previous_headings":"","what":"show_values() & search_values()","title":"Look up information","text":"desired field found, can use show_values understand information contained within field, e.g. provides information need pass meaningful queries galah_filter. works several types query, data profiles: collections:","code":"search_all(fields, \"basis\") |> show_values() ## ! Search returned 2 matched fields. ## • Showing values for 'basisOfRecord'. ## # A tibble: 9 × 2 ##   field         category            ##   <chr>         <chr>               ## 1 basisOfRecord HUMAN_OBSERVATION   ## 2 basisOfRecord PRESERVED_SPECIMEN  ## 3 basisOfRecord OBSERVATION         ## 4 basisOfRecord OCCURRENCE          ## 5 basisOfRecord MACHINE_OBSERVATION ## 6 basisOfRecord MATERIAL_SAMPLE     ## 7 basisOfRecord LIVING_SPECIMEN     ## 8 basisOfRecord MATERIAL_CITATION   ## 9 basisOfRecord FOSSIL_SPECIMEN galah_call() |>    galah_filter(basisOfRecord == \"LIVING_SPECIMEN\") |>    atlas_counts() ## # A tibble: 1 × 1 ##    count ##    <int> ## 1 213918 search_all(profiles, \"ALA\") |>    show_values() |>    head() ## ! Search returned 2 matched profiles. ## • Showing values for 'ALA'. ## # A tibble: 6 × 2 ##   description                                                                                                                  filter ##   <chr>                                                                                                                        <chr>  ## 1 \"Exclude all records where spatial validity is \\\"false\\\"\"                                                                    \"-spa… ## 2 \"Exclude all records with an assertion that the scientific name provided does not match any of the names lists used by the … \"-ass… ## 3 \"Exclude all records with an assertion that the scientific name provided is not structured as a valid scientific name. Also… \"-ass… ## 4 \"Exclude all records with an assertion that the name and classification supplied can't be used to choose between 2 homonyms\" \"-ass… ## 5 \"Exclude all records with an assertion that kingdom provided doesn't match a known kingdom e.g. Animalia, Plantae\"           \"-ass… ## 6 \"Exclude all records with an assertion that the scientific name provided in the record does not match the expected taxonomi… \"-ass… search_all(collections, \"herbarium\") |>    show_values() |>    head() ## ! Search returned 46 matched collections. ## • Showing values for 'co214'. ## # A tibble: 1 × 17 ##   name       acronym uid   phone email pubDe…¹ latit…² longi…³ websi…⁴ alaPu…⁵ dateC…⁶ lastU…⁷ userL…⁸ active numRe…⁹ numRe…˟ geogr…˟ ##   <chr>      <chr>   <chr> <chr> <chr> <chr>     <dbl>   <dbl> <chr>   <chr>   <chr>   <chr>   <chr>   <chr>    <int>   <int> <chr>   ## 1 Allan Her… CHR     co214 +64 … Herb… \"The A…   -43.6    172. http:/… https:… 2015-0… 2021-1… not av… Activ…  660000  236000 Worldw… ## # … with abbreviated variable names ¹​pubDescription, ²​latitude, ³​longitude, ⁴​websiteUrl, ⁵​alaPublicUrl, ⁶​dateCreated, ⁷​lastUpdated, ## #   ⁸​userLastModified, ⁹​numRecords, ˟​numRecordsDigitised, ˟​geographicDescription"},{"path":"https://atlasoflivingaustralia.github.io/galah/articles/narrow_your_results.html","id":"galah_identify-search_taxa","dir":"Articles","previous_headings":"","what":"galah_identify & search_taxa","title":"Narrow your results","text":"Perhaps unsurprisingly, search_taxa searches taxonomic information. uses fuzzy matching work lot like search bar Atlas Living Australia website, can use search taxa scientific name. Finding desired taxon search_taxa important step using taxonomic information download data galah. example, search reptiles, first need identify whether correct query: want specific providing additional taxonomic information search_taxa, can provide data.frame containing levels taxonomic hierarchy: know search matches correct taxon taxa, can use galah_identify narrow results queries: ’re using international atlas, search_taxa automatically switch using local name-matching service. example, Spain uses GBIF taxonomic backbone, integrates seamlessly standard workflow. Conversely, UK’s National Biodiversity Network (NBN), ’ taxonomic backbone, supported using function call.","code":"search_taxa(\"Reptilia\") ## # A tibble: 1 × 9 ##   search_term scientific_name taxon_concept_id                                              rank  match…¹ kingdom phylum class issues ##   <chr>       <chr>           <chr>                                                         <chr> <chr>   <chr>   <chr>  <chr> <chr>  ## 1 Reptilia    REPTILIA        https://biodiversity.org.au/afd/taxa/682e1228-5b3c-45ff-833b… class exactM… Animal… Chord… Rept… noIss… ## # … with abbreviated variable name ¹​match_type search_taxa(data.frame(genus = \"Eolophus\", kingdom = \"Aves\")) ## # A tibble: 1 × 13 ##   search_term   scientific_name scientific_name_authorship taxon_conce…¹ rank  match…² kingdom phylum class order family genus issues ##   <chr>         <chr>           <chr>                      <chr>         <chr> <chr>   <chr>   <chr>  <chr> <chr> <chr>  <chr> <chr>  ## 1 Eolophus_Aves Eolophus        Bonaparte, 1854            https://biod… genus exactM… Animal… Chord… Aves  Psit… Cacat… Eolo… noIss… ## # … with abbreviated variable names ¹​taxon_concept_id, ²​match_type galah_call() |>   galah_identify(\"Reptilia\") |>   atlas_counts() ## # A tibble: 1 × 1 ##     count ##     <int> ## 1 1474321 taxa <- search_taxa(data.frame(genus = \"Eolophus\", kingdom = \"Aves\"))  galah_call() |>  galah_identify(taxa) |>  atlas_counts() ## # A tibble: 1 × 1 ##    count ##    <int> ## 1 994158 galah_config(atlas = \"Spain\")  galah_call() |>    galah_identify(\"Lepus\") |>    galah_group_by(species) |>    atlas_counts() ## # A tibble: 5 × 2 ##   species            count ##   <chr>              <int> ## 1 Lepus granatensis   9000 ## 2 Lepus europaeus     2884 ## 3 Lepus castroviejoi   153 ## 4 Lepus capensis         2 ## 5 Lepus californicus     1 galah_config(atlas = \"United Kingdom\")  galah_call() |>    galah_identify(\"Bufo\") |>    galah_group_by(species) |>    atlas_counts() ## # A tibble: 2 × 2 ##   species       count ##   <chr>         <int> ## 1 Bufo bufo     75165 ## 2 Bufo spinosus     1"},{"path":"https://atlasoflivingaustralia.github.io/galah/articles/narrow_your_results.html","id":"galah_filter","dir":"Articles","previous_headings":"","what":"galah_filter","title":"Narrow your results","text":"Perhaps important function galah galah_filter, used filter rows queries: find available fields corresponding valid values, use field lookup functions show_all(fields), search_all(fields) & show_values(). Finally, special case galah_filter make complex taxonomic queries possible using search_taxa. using taxonConceptID field, possible build queries exclude certain taxa, example. can useful paraphyletic concepts invertebrates:","code":"# Get total record count since 2000 galah_call() |>   galah_filter(year > 2000) |>   atlas_counts() ## # A tibble: 1 × 1 ##      count ##      <int> ## 1 73800220 # Get total record count for iNaturalist in 2021 galah_call() |>   galah_filter(     year > 2000,     dataResourceName == \"iNaturalist Australia\"   ) |>   atlas_counts() ## # A tibble: 1 × 1 ##     count ##     <int> ## 1 3628323 galah_call() |>   galah_filter(      taxonConceptID == search_taxa(\"Animalia\")$taxon_concept_id,      taxonConceptID != search_taxa(\"Chordata\")$taxon_concept_id   ) |>   galah_group_by(class) |>   atlas_counts() ## # A tibble: 83 × 2 ##    class          count ##    <chr>          <int> ##  1 Insecta      3954876 ##  2 Gastropoda    878641 ##  3 Malacostraca  573921 ##  4 Arachnida     553923 ##  5 Maxillopoda   473377 ##  6 Polychaeta    258910 ##  7 Bivalvia      215372 ##  8 Anthozoa      169309 ##  9 Demospongiae  113286 ## 10 Ostracoda      58699 ## # … with 73 more rows"},{"path":"https://atlasoflivingaustralia.github.io/galah/articles/narrow_your_results.html","id":"galah_apply_profile","dir":"Articles","previous_headings":"","what":"galah_apply_profile","title":"Narrow your results","text":"working ALA, notable feature ability specify profile remove records suspect way. see full list data quality profiles, use show_all(profiles).","code":"galah_call() |>   galah_filter(year > 2000) |>   galah_apply_profile(ALA) |>   atlas_counts() ## # A tibble: 1 × 1 ##      count ##      <int> ## 1 66776476"},{"path":"https://atlasoflivingaustralia.github.io/galah/articles/narrow_your_results.html","id":"galah_group_by","dir":"Articles","previous_headings":"","what":"galah_group_by","title":"Narrow your results","text":"Use galah_group_by group record counts summarise counts specified fields:","code":"# Get record counts since 2010, grouped by year and basis of record galah_call() |>   galah_filter(year > 2015 & year <= 2020) |>   galah_group_by(year, basisOfRecord) |>   atlas_counts() ## # A tibble: 25 × 3 ##    basisOfRecord     year    count ##    <chr>             <chr>   <int> ##  1 HUMAN_OBSERVATION 2020  6293285 ##  2 HUMAN_OBSERVATION 2019  5517709 ##  3 HUMAN_OBSERVATION 2018  5237933 ##  4 HUMAN_OBSERVATION 2017  4347304 ##  5 HUMAN_OBSERVATION 2016  3512645 ##  6 OCCURRENCE        2016   165997 ##  7 OCCURRENCE        2018   116242 ##  8 OCCURRENCE        2017   102206 ##  9 OCCURRENCE        2019    91640 ## 10 OCCURRENCE        2020    39429 ## # … with 15 more rows"},{"path":"https://atlasoflivingaustralia.github.io/galah/articles/narrow_your_results.html","id":"galah_select","dir":"Articles","previous_headings":"","what":"galah_select","title":"Narrow your results","text":"Use galah_select choose columns returned downloading records: can also use dplyr functions work dplyr::select() galah_select()","code":"# Get *Reptilia* records from 1930, but only 'eventDate' and 'kingdom' columns occurrences <- galah_call() |>   galah_identify(\"reptilia\") |>   galah_filter(year == 1930) |>   galah_select(eventDate, kingdom) |>   atlas_occurrences()  occurrences ## # A tibble: 54 × 2 ##    eventDate            kingdom  ##    <chr>                <chr>    ##  1 1929-12-31T14:00:00Z Animalia ##  2 1929-12-31T14:00:00Z Animalia ##  3 1929-12-31T14:00:00Z Animalia ##  4 1929-12-31T14:00:00Z Animalia ##  5 1929-12-31T14:00:00Z Animalia ##  6 1929-12-31T14:00:00Z Animalia ##  7 1929-12-31T14:00:00Z Animalia ##  8 1929-12-31T14:00:00Z Animalia ##  9 1929-12-31T14:00:00Z Animalia ## 10 1929-12-31T14:00:00Z Animalia ## # … with 44 more rows occurrences <- galah_call() |>   galah_identify(\"reptilia\") |>   galah_filter(year == 1930) |>   galah_select(starts_with(\"elev\") & ends_with(\"n\")) |>   atlas_occurrences()  occurrences ## # A tibble: 54 × 55 ##    recordID   catal…¹ taxon…² verba…³ raw_v…⁴ scien…⁵ taxon…⁶ verna…⁷ kingdom phylum class order family genus species subsp…⁸ dataR…⁹ ##    <chr>      <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>  <chr> <chr> <chr>  <chr> <chr>   <chr>   <chr>   ##  1 050d4cec-… \"J3729\" https:… Oxyura… \"coast… Oxyura… species \"Taipa… Animal… Chord… Rept… Squa… Elapi… \"Oxy… \"Oxyur… \"\"      dr1132  ##  2 0aee0e05-… \"39139… https:… Tympan… \"Lined… Tympan… species \"Grass… Animal… Chord… Rept… Squa… Agami… \"Tym… \"Tympa… \"\"      dr361   ##  3 0cbfa7cb-… \"R3683… https:… Natrix… \"\"      COLUBR… family  \"\"      Animal… Chord… Rept… Squa… Colub… \"\"    \"\"      \"\"      dr346   ##  4 0fb28f26-… \"\"      https:… Notech… \"easte… Notech… species \"Tiger… Animal… Chord… Rept… Squa… Elapi… \"Not… \"Notec… \"\"      dr1132  ##  5 15e65c09-… \"34102\" https:… Emydur… \"Murra… Emydur… subspe… \"Macqu… Animal… Chord… Rept… Test… Cheli… \"Emy… \"Emydu… \"Emydu… dr1132  ##  6 170fbb84-… \"77798\" https:… Deniso… \"ornam… Deniso… species \"Ornam… Animal… Chord… Rept… Squa… Elapi… \"Den… \"Denis… \"\"      dr1132  ##  7 19851ac1-… \"\"      https:… Pogona… \"beard… Pogona… species \"Commo… Animal… Chord… Rept… Squa… Agami… \"Pog… \"Pogon… \"\"      dr1132  ##  8 1d52ab81-… \"\"      https:… Bellat… \"land … Bellat… species \"Land … Animal… Chord… Rept… Squa… Scinc… \"Bel… \"Bella… \"\"      dr1132  ##  9 1ef9fad5-… \"R.124… https:… Egerni… \"\"      Egerni… species \"Cunni… Animal… Chord… Rept… Squa… Scinc… \"Ege… \"Egern… \"\"      dr340   ## 10 23da98ca-… \"\"      https:… Antare… \"spott… Antare… species \"Spott… Animal… Chord… Rept… Squa… Pytho… \"Ant… \"Antar… \"\"      dr1132  ## # … with 44 more rows, 38 more variables: institutionUid <chr>, institutionName <chr>, collectionUid <chr>, collectionName <chr>, ## #   dctermsLicense <chr>, institutionCode <chr>, collectionCode <chr>, locality <chr>, verbatimLatitude <dbl>, ## #   verbatimLongitude <dbl>, verbatimCoordinateSystem <chr>, decimalLatitude <dbl>, decimalLongitude <dbl>, ## #   coordinatePrecision <dbl>, coordinateUncertaintyInMeters <dbl>, country <chr>, stateProvince <chr>, cl959 <chr>, cl21 <chr>, ## #   cl1048 <chr>, minimumElevationInMeters <lgl>, maximumElevationInMeters <lgl>, minimumDepthInMeters <lgl>, ## #   maximumDepthInMeters <lgl>, individualCount <int>, recordedBy <chr>, year <int>, month <int>, day <int>, eventDate <chr>, ## #   verbatimBasisOfRecord <chr>, basisOfRecord <chr>, occurrenceStatus <chr>, raw_sex <chr>, preparations <chr>, …"},{"path":"https://atlasoflivingaustralia.github.io/galah/articles/narrow_your_results.html","id":"galah_geolocate","dir":"Articles","previous_headings":"","what":"galah_geolocate","title":"Narrow your results","text":"Use galah_geolocate specify geographic area region limit search:","code":"# Get list of perameles species only in area specified: # (Note: This can also be specified by a shapefile) wkt <- \"POLYGON((131.36328125 -22.506468769126,135.23046875 -23.396716654542,134.17578125 -27.287832521411,127.40820312499 -26.661206402316,128.111328125 -21.037340349154,131.36328125 -22.506468769126))\"  galah_call() |>   galah_identify(\"perameles\") |>   galah_geolocate(wkt) |>   atlas_species() ## # A tibble: 2 × 10 ##   kingdom  phylum   class    order           family      genus     species                author               species_guid   verna…¹ ##   <chr>    <chr>    <chr>    <chr>           <chr>       <chr>     <chr>                  <chr>                <chr>          <chr>   ## 1 Animalia Chordata Mammalia Peramelemorphia Peramelidae Perameles Perameles eremiana     Spencer, 1897        https://biodi… Desert… ## 2 Animalia Chordata Mammalia Peramelemorphia Peramelidae Perameles Perameles bougainville Quoy & Gaimard, 1824 https://biodi… Shark … ## # … with abbreviated variable name ¹​vernacular_name"},{"path":"https://atlasoflivingaustralia.github.io/galah/articles/narrow_your_results.html","id":"galah_down_to","dir":"Articles","previous_headings":"","what":"galah_down_to","title":"Narrow your results","text":"Use galah_down_to specify lowest taxonomic level contruct taxonomic tree:","code":"galah_call() |>   galah_identify(\"fungi\") |>   galah_down_to(phylum) |>   atlas_taxonomy() ##                    levelName ## 1  Fungi                     ## 2   ¦--Dikarya               ## 3   ¦   °--Entorrhizomycota  ## 4   ¦--Ascomycota            ## 5   ¦--Basidiomycota         ## 6   ¦--Blastocladiomycota    ## 7   ¦--Chytridiomycota       ## 8   ¦--Cryptomycota          ## 9   ¦--Glomeromycota         ## 10  ¦--Microspora            ## 11  ¦--Microsporidia         ## 12  ¦--Mucoromycota          ## 13  ¦--Neocallimastigomycota ## 14  ¦--Zoopagomycota         ## 15  °--Zygomycota"},{"path":"https://atlasoflivingaustralia.github.io/galah/articles/quick_start_guide.html","id":"about","dir":"Articles","previous_headings":"","what":"About","title":"Quick start guide","text":"galah R interface biodiversity data hosted ‘living atlases’; set organisations share common codebase, act nodes Global Biodiversity Information Facility (GBIF). organisations collate store observations individual life forms, using ‘Darwin Core’ data standard. galah enables users locate download species observations, taxonomic information, record counts, associated media images sounds. Users can restrict queries particular taxa locations specifying columns rows returned query, restricting results observations meet particular quality-control criteria. minor exceptions, functions return tibble standard format.","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/articles/quick_start_guide.html","id":"installation","dir":"Articles","previous_headings":"","what":"Installation","title":"Quick start guide","text":"install CRAN: install development version GitHub: Load package","code":"install.packages(\"galah\") install.packages(\"remotes\") remotes::install_github(\"AtlasOfLivingAustralia/galah\") library(galah)"},{"path":"https://atlasoflivingaustralia.github.io/galah/articles/quick_start_guide.html","id":"choosing-an-atlas","dir":"Articles","previous_headings":"","what":"Choosing an atlas","title":"Quick start guide","text":"default, galah downloads information Atlas Living Australia (ALA). show full list Atlases currently supported galah, use show_all(atlases). Use galah_config() set Atlas use. automatically populate server configuration selected Atlas. default, atlas Australia.","code":"show_all(atlases) ## # A tibble: 10 × 4 ##    atlas          institution                                                             acronym url                          ##    <chr>          <chr>                                                                   <chr>   <chr>                        ##  1 Australia      Atlas of Living Australia                                               ALA     https://www.ala.org.au       ##  2 Austria        Biodiversitäts-Atlas Österreich                                         BAO     https://biodiversityatlas.at ##  3 Brazil         Sistemas de Informações sobre a Biodiversidade Brasileira               SiBBr   https://sibbr.gov.br         ##  4 Estonia        eElurikkus                                                              <NA>    https://elurikkus.ee         ##  5 France         Inventaire National du Patrimoine Naturel                               INPN    https://inpn.mnhn.fr         ##  6 Guatemala      Sistema Nacional de Información sobre Diversidad Biológica de Guatemala SNIBgt  https://snib.conap.gob.gt    ##  7 Portugal       GBIF Portugal                                                           GBIF.pt https://www.gbif.pt          ##  8 Spain          GBIF Spain                                                              GBIF.es https://www.gbif.es          ##  9 Sweden         Swedish Biodiversity Data Infrastructure                                SBDI    https://biodiversitydata.se  ## 10 United Kingdom National Biodiversity Network                                           NBN     https://nbn.org.uk galah_config(atlas = \"United Kingdom\")"},{"path":"https://atlasoflivingaustralia.github.io/galah/articles/quick_start_guide.html","id":"building-queries","dir":"Articles","previous_headings":"","what":"Building queries","title":"Quick start guide","text":"Functions return data chosen atlas prefix atlas_; e.g. find total number records atlas, use: pass complex queries, start galah_call() function pipe additional arguments modify query. modifying functions galah_ prefix support non-standard evaluation (NSE). narrow search particular taxonomic group, use galah_identify(). Note function accepts scientific names case sensitive. ’s good practice first use search_taxa() check taxa provide returns correct taxonomic results.","code":"atlas_counts() ## # A tibble: 1 × 1 ##       count ##       <int> ## 1 114080945 galah_call() |>    galah_filter(year >= 2020) |>    atlas_counts() ## # A tibble: 1 × 1 ##      count ##      <int> ## 1 14604620 search_taxa(\"reptilia\") # Check whether taxonomic info is correct ## # A tibble: 1 × 9 ##   search_term scientific_name taxon_concept_id                                              rank  match…¹ kingdom phylum class issues ##   <chr>       <chr>           <chr>                                                         <chr> <chr>   <chr>   <chr>  <chr> <chr>  ## 1 reptilia    REPTILIA        https://biodiversity.org.au/afd/taxa/682e1228-5b3c-45ff-833b… class exactM… Animal… Chord… Rept… noIss… ## # … with abbreviated variable name ¹​match_type galah_call() |>   galah_filter(year >= 2020) |>    galah_identify(\"reptilia\") |>    atlas_counts() ## # A tibble: 1 × 1 ##   count ##   <int> ## 1 89643"},{"path":"https://atlasoflivingaustralia.github.io/galah/articles/quick_start_guide.html","id":"downloading-records","dir":"Articles","previous_headings":"","what":"Downloading records","title":"Quick start guide","text":"common use case galah download ‘occurrence’ records; observations plants animals made contributors atlas. download, first register relevant atlas, provide registration email. can customise records require query atlas question: Check vignettes detail use functions.","code":"galah_config(email = \"email@email.com\") result <- galah_call() |>   galah_identify(\"Litoria\") |>   galah_filter(year >= 2020, cl22 == \"Tasmania\") |>   galah_select(basisOfRecord, group = \"basic\") |>   atlas_occurrences()  result |> head() ## # A tibble: 6 × 9 ##   decimalLatitude decimalLongitude eventDate            scientificName    taxonConceptID              recor…¹ dataR…² occur…³ basis…⁴ ##             <dbl>            <dbl> <chr>                <chr>             <chr>                       <chr>   <chr>   <chr>   <chr>   ## 1           -43.4             147. 2020-09-04T14:00:00Z Litoria ewingii   https://biodiversity.org.a… e8045b… FrogID  PRESENT HUMAN_… ## 2           -43.4             146. 2020-01-01T13:00:00Z Litoria ewingii   https://biodiversity.org.a… 44187a… FrogID  PRESENT HUMAN_… ## 3           -43.4             146. 2020-01-01T13:00:00Z Litoria ewingii   https://biodiversity.org.a… bc34a7… FrogID  PRESENT HUMAN_… ## 4           -43.4             146. 2020-01-01T13:00:00Z Litoria ewingii   https://biodiversity.org.a… ca4707… FrogID  PRESENT HUMAN_… ## 5           -43.4             146. 2020-01-01T13:00:00Z Litoria burrowsae https://biodiversity.org.a… 9c71f5… FrogID  PRESENT HUMAN_… ## 6           -43.4             146. 2020-01-01T13:00:00Z Litoria ewingii   https://biodiversity.org.a… 4bbaad… FrogID  PRESENT HUMAN_… ## # … with abbreviated variable names ¹​recordID, ²​dataResourceName, ³​occurrenceStatus, ⁴​basisOfRecord"},{"path":"https://atlasoflivingaustralia.github.io/galah/articles/syntax_changes.html","id":"nse-and-comparison-to-dplyr","dir":"Articles","previous_headings":"","what":"NSE and comparison to dplyr","title":"Syntax changes","text":"galah_ functions now evaluate arguments just like dplyr. see mean, let’s look example dplyr::filter() works. Notice dplyr::filter galah_filter require logical arguments added using == sign: another example, notice galah_group_by() + atlas_counts() works similarly dplyr::group_by() + dplyr::count(): made move towards tidy evaluation make possible use piping building queries Atlas Living Australia. practice, means data queries can filtered just like might filter data.frame tidyverse suite functions.","code":"library(dplyr)  mtcars %>%    filter(mpg == 21) ##               mpg cyl disp  hp drat    wt  qsec vs am gear carb ## Mazda RX4      21   6  160 110  3.9 2.620 16.46  0  1    4    4 ## Mazda RX4 Wag  21   6  160 110  3.9 2.875 17.02  0  1    4    4 galah_call() %>%    galah_filter(year == 2021) %>%    atlas_counts() ## # A tibble: 1 × 1 ##     count ##     <int> ## 1 7116810 mtcars %>%    group_by(vs) %>%    count() ## # A tibble: 2 × 2 ## # Groups:   vs [2] ##      vs     n ##   <dbl> <int> ## 1     0    18 ## 2     1    14 galah_call() %>%   galah_group_by(biome) %>%   atlas_counts() ## # A tibble: 2 × 2 ##   biome           count ##   <chr>           <int> ## 1 TERRESTRIAL 105579552 ## 2 MARINE        3526706"},{"path":"https://atlasoflivingaustralia.github.io/galah/articles/syntax_changes.html","id":"function-naming","dir":"Articles","previous_headings":"","what":"Function naming","title":"Syntax changes","text":"Prior version 1.4.0, galah naming conventions two major problems: download functions used prefix ala, actually query many living atlases (just ALA) query modifying functions used prefix select, reserved dplyr (elsewhere) operations specifically columns address concerns (smaller points), completed rewrite function names increase clarity (see table ). Deprecated function names now return warning message used, suggesting users switch new syntax.","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/articles/syntax_changes.html","id":"piping-with-galah_call","dir":"Articles","previous_headings":"","what":"Piping with galah_call()","title":"Syntax changes","text":"Perhaps largest change galah 1.4.0 implementation piping using galah_call(). Beginning query galah_call() (sure add parentheses!) tells galah using pipes construct query. Follow preferred pipe (|> base %>% magrittr). can narrow query line--line using galah_ functions. Finally, end atlas_ function identify type data want query. Unlike old function names, removed future versions, intend continue supported un-piped syntax future, although piping works revamped function names. ’re new piping, ’s comparison code previous versions galah. Previously, wanted look number records bandicoot species every year 2010 2021, ’d something like : easy use multiple atlas_ functions use loops. However, now piping can like : second example, wanted download occurrence records bandicoots 2021, also include information records zero coordinates, previously : Now piping:","code":"library(purrr) library(dplyr)  taxa <- ala_species(taxa = select_taxa(\"perameles\"))$species years <- select_filters(year = seq(2010:2021))  taxa %>%   map_dfr( ~ ala_counts(     taxa = select_taxa(list(species = .x)),     filters = years,     group_by = \"year\") galah_call() %>%   galah_identify(\"perameles\") %>%   galah_filter(year > 2010) %>%   galah_group_by(species, year) %>%   atlas_counts() atlas_occurrences(taxa = select_taxa(\"perameles\"),                   filters = select_filters(year = 2021),                   columns = select_columns(group = \"basic\", \"ZERO_COORDINATE\")) galah_call() %>%   galah_identify(\"perameles\") %>%   galah_filter(year == 2021) %>%   galah_select(group = \"basic\", ZERO_COORDINATE) %>%   atlas_occurrences()"},{"path":"https://atlasoflivingaustralia.github.io/galah/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Martin Westgate. Author, maintainer. Matilda Stevenson. Author. Dax Kellie. Author. Peggy Newman. Author.","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Westgate M, Stevenson M, Kellie D, Newman P (2022). galah: Atlas Living Australia (ALA) Data Resources R. R package version 1.5.0, https://CRAN.R-project.org/package=galah.","code":"@Manual{,   title = {galah: Atlas of Living Australia (ALA) Data and Resources in R},   author = {Martin Westgate and Matilda Stevenson and Dax Kellie and Peggy Newman},   year = {2022},   note = {R package version 1.5.0},   url = {https://CRAN.R-project.org/package=galah}, }"},{"path":"https://atlasoflivingaustralia.github.io/galah/index.html","id":"getting-started","dir":"","previous_headings":"","what":"Getting started","title":"Data and Resources from the Living Atlas Community in R","text":"quick start guide provides introduction package functions. outline package structure, list available functions, run ?galah view reference page.","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Data and Resources from the Living Atlas Community in R","text":"Install CRAN: Install development version GitHub: Linux first need ensure libcurl v8 (version <= 3.15) installed system — e.g. Ubuntu/Debian, open terminal : galah depends sf location-based searches. install galah need make sure system meets sf system requirements, specified ","code":"install.packages(\"galah\") install.packages(\"remotes\") remotes::install_github(\"AtlasOfLivingAustralia/galah\") sudo apt-get install libcurl4-openssl-dev libv8-3.14-dev"},{"path":"https://atlasoflivingaustralia.github.io/galah/index.html","id":"citations","dir":"","previous_headings":"","what":"Citations","title":"Data and Resources from the Living Atlas Community in R","text":"generate citation package version using, can run ’re using occurrence data downloaded galah publication, please generate DOI cite . request DOI download occurrence record, set mint_doi = TRUE call atlas_occurrences(). generate citation downloaded occurrence records, pass data.frame generated atlas_citation().","code":"citation(package = \"galah\") # Download occurrence records with a DOI  occ <- atlas_occurrences(..., mint_doi = TRUE)  # See DOI attr(occ, \"doi\")  # Generate citation atlas_citation(occ)"},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/atlas_citation.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate a citation for occurrence data — atlas_citation","title":"Generate a citation for occurrence data — atlas_citation","text":"data.frame generated using atlas_occurrences(), mint_doi argument set TRUE, DOI associated dataset appended resulting data.frame attribute. function simply formats DOI citation can included scientific publication. Please also consider citing package, using information citation(\"galah\").","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/atlas_citation.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate a citation for occurrence data — atlas_citation","text":"","code":"atlas_citation(data)"},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/atlas_citation.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate a citation for occurrence data — atlas_citation","text":"data data.frame: occurrence data generated atlas_occurrences()","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/atlas_citation.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate a citation for occurrence data — atlas_citation","text":"string containing citation dataset.","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/atlas_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Return a count of records — atlas_counts","title":"Return a count of records — atlas_counts","text":"Prior downloading data often valuable estimate many records available, deciding query feasible, estimating long take download. Alternatively, kinds reporting, count observations may required, example understanding observations growing shrinking particular locations, particular taxa. end, atlas_counts() takes arguments format atlas_occurrences(), provides either total count records matching criteria, data.frame counts matching criteria supplied group_by argument.","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/atlas_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return a count of records — atlas_counts","text":"","code":"atlas_counts(   request = NULL,   identify = NULL,   filter = NULL,   geolocate = NULL,   data_profile = NULL,   group_by = NULL,   limit = 100,   type = c(\"record\", \"species\"),   refresh_cache = FALSE )"},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/atlas_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return a count of records — atlas_counts","text":"request optional data_request object: generated call galah_call(). identify data.frame: generated call galah_identify(). filter data.frame: generated call galah_filter() geolocate string: generated call galah_geolocate() data_profile string: generated call galah_apply_profile() group_by data.frame: object class galah_group_by, returned galah_group_by(). Alternatively vector field names (see search_all(fields) show_all(fields). limit numeric: maximum number categories return, defaulting 100. limit NULL, results returned. categories take . type string: one c(\"record\", \"species\"). Defaults \"record\". \"species\", number species matching criteria returned, \"record\", number records matching criteria returned. refresh_cache logical: set TRUE galah_config(caching = TRUE) files cached previous query replaced current query","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/atlas_counts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return a count of records — atlas_counts","text":"object class tbl_df data.frame (aka tibble) returning: single number, group_by specified , summary counts grouped field(s), group_by specified","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/atlas_counts.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return a count of records — atlas_counts","text":"arguments, return total number records ALA   can group counts state territory galah_group_by   can add filter narrow search   Specify type = species count number species, group record counts kingdom     Using galah_group_by allows cross-tabulate using two different variables, similar using dplyr::group_by() %>% dplyr::count()","code":"atlas_counts() #> # A tibble: 1 x 1 #>       count #>       <int> #> 1 114082469 galah_call() |>   galah_group_by(stateProvince) |>   atlas_counts() #> # A tibble: 100 x 2 #>   stateProvince      count #>   <chr>              <int> #> 1 New South Wales 28192016 #> 2 Victoria        24544695 #> 3 Queensland      20487489 #> 4 South Australia  8931685 #> # ... with 96 more rows galah_call() |>   galah_filter(basisOfRecord == \"FossilSpecimen\") |>   atlas_counts()  #> # A tibble: 1 x 1 #>   count #>   <int> #> 1  5359 records <- galah_call() |>   galah_group_by(kingdom) |>   atlas_counts(type = \"species\") records #> # A tibble: 10 x 2 #>    kingdom   count #>    <chr>     <dbl> #>  1 Animalia  91790 #>  2 Plantae   38744 #>  3 Fungi     19685 #>  4 Chromista  1530 #>  5 Protista   1214 #>  6 Bacteria    722 #>  7 Protozoa     13 #>  8 Eukaryota     8 #>  9 Archaea       3 #> 10 Virus         0 records <- galah_call() |>   galah_filter(year > 2015) |>   galah_group_by(year, basisOfRecord) |>   atlas_counts() records #> # A tibble: 47 x 3 #>   basisOfRecord     year    count #>   <chr>             <chr>   <int> #> 1 HUMAN_OBSERVATION 2021  7027352 #> 2 HUMAN_OBSERVATION 2020  6293298 #> 3 HUMAN_OBSERVATION 2019  5517712 #> 4 HUMAN_OBSERVATION 2018  5237933 #> # ... with 43 more rows"},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/atlas_media.html","id":null,"dir":"Reference","previous_headings":"","what":"Get metadata on images, sounds and videos — atlas_media","title":"Get metadata on images, sounds and videos — atlas_media","text":"addition text data describing individual occurrences attributes, ALA stores images, sounds videos associated given record. atlas_media displays metadata media types.","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/atlas_media.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get metadata on images, sounds and videos — atlas_media","text":"","code":"atlas_media(   request = NULL,   identify = NULL,   filter = NULL,   geolocate = NULL,   data_profile = NULL,   download_dir = NULL,   refresh_cache = FALSE )"},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/atlas_media.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get metadata on images, sounds and videos — atlas_media","text":"request optional data_request object: generated call galah_call(). identify data.frame: generated call galah_identify(). filter data.frame: generated call galah_filter() geolocate string: generated call galah_geolocate() data_profile string: generated call galah_apply_profile() download_dir string: path directory downloaded media stored. DEPRECATED; use collect_media() instead. refresh_cache logical: set TRUE galah_config(caching = TRUE) files cached previous query replaced current query. DEPRECATED; use collect_media() instead.","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/atlas_media.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get metadata on images, sounds and videos — atlas_media","text":"object class tbl_df data.frame (aka tibble) metadata requested media.","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/atlas_media.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Get metadata on images, sounds and videos — atlas_media","text":"atlas_media() works first finding occurrence records matching filter contain media, downloading metadata media. actually download files , use collect_media(). may beneficial requesting large number records show progress bar setting verbose = TRUE galah_config().","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/atlas_media.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get metadata on images, sounds and videos — atlas_media","text":"Download Regent Honeyeater multimedia   Specify single media type download   Filter records particular licence type   might also want check many records media files download . atlas_counts()","code":"media_data <- galah_call() |>     galah_identify(\"Regent Honeyeater\") |>     galah_filter(year == 2011) |>     atlas_media() |>     collect_media(path = \"folder/your-directory\") media_data <- galah_call() |>      galah_identify(\"Eolophus Roseicapilla\") |>      galah_filter(multimedia == \"Sound\") |>      atlas_media() media_data <- galah_call() |>      galah_identify(\"Ornithorhynchus anatinus\") |>      galah_filter(year == 2020) |>      atlas_media() |>      dplyr::filter(license == \"http://creativecommons.org/licenses/by-nc/4.0/\") galah_call() |>      galah_filter(multimedia == c(\"Image\", \"Sound\", \"Video\")) |>      galah_group_by(multimedia) |>      atlas_counts()"},{"path":[]},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/atlas_occurrences.html","id":null,"dir":"Reference","previous_headings":"","what":"Return occurrence records — atlas_occurrences","title":"Return occurrence records — atlas_occurrences","text":"common form data stored living atlases observations individual life forms, known 'occurrences'. function allows user search occurrence records match specific criteria, return data.frame analysis. Optionally, user can also request DOI given download facilitate citation re-use specific data resources.","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/atlas_occurrences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return occurrence records — atlas_occurrences","text":"","code":"atlas_occurrences(   request = NULL,   identify = NULL,   filter = NULL,   geolocate = NULL,   data_profile = NULL,   select = NULL,   mint_doi = FALSE,   doi = NULL,   refresh_cache = FALSE )"},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/atlas_occurrences.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return occurrence records — atlas_occurrences","text":"request optional data_request object: generated call galah_call(). identify data.frame: generated call galah_identify(). filter data.frame: generated call galah_filter() geolocate string: generated call galah_geolocate() data_profile string: generated call galah_apply_profile() select data.frame: generated call galah_select() mint_doi logical: default DOI generated. Set TRUE intend use data publication similar doi Use collect_occurrences instead. string: argument enables retrieval occurrence records previously downloaded ALA, using DOI generated data. refresh_cache logical: set TRUE galah_config(caching = TRUE) files cached previous query replaced current query","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/atlas_occurrences.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return occurrence records — atlas_occurrences","text":"object class tbl_df data.frame (aka tibble) occurrences, containing columns specified galah_select(). data.frame object following attributes: listing user-supplied arguments data_request (.e., identify, filter, geolocate, select) doi data download search_url query ALA API","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/atlas_occurrences.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Return occurrence records — atlas_occurrences","text":"Note unless care taken, queries can particularly large. cases simply take long time process, number requested records >50 million call return data. Users can test whether threshold reached first calling atlas_counts() using arguments intend pass atlas_occurrences(). may also beneficial requesting large number records show progress bar setting verbose = TRUE galah_config().","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/atlas_occurrences.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return occurrence records — atlas_occurrences","text":"Search occurrences matching taxon identifier   Search occurrences year range   Search occurrences WKT-specified area   can also download occurrence records piping %>% prefer.","code":"galah_config(email = \"your-email@email.com\") galah_call() |>   galah_identify(\"Reptilia\") |>   atlas_occurrences() galah_call() |>   galah_filter(year >= 2010, year <= 2020) |>   atlas_occurrences() polygon <- \"POLYGON((146.24960 -34.05930,146.37045 -34.05930,146.37045 -34.152549,146.24960 -34.15254,146.24960 -34.05930))\" galah_call() |>    galah_geolocate(polygon) |>   atlas_occurrences() galah_call() %>%   galah_identify(\"Reptilia\") %>%   galah_filter(year >= 2010) %>%   galah_geolocate(polygon) %>%   atlas_occurrences()"},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/atlas_species.html","id":null,"dir":"Reference","previous_headings":"","what":"Return species lists — atlas_species","title":"Return species lists — atlas_species","text":"reasons users may need check every record meeting search criteria (.e. using atlas_occurrences()), common use case simply identify species occur specified region, time period, taxonomic group. function returns data.frame one row per species, columns giving associated taxonomic information.","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/atlas_species.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Return species lists — atlas_species","text":"","code":"atlas_species(   request = NULL,   identify = NULL,   filter = NULL,   geolocate = NULL,   data_profile = NULL,   refresh_cache = FALSE )"},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/atlas_species.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Return species lists — atlas_species","text":"request optional data_request object: generated call galah_call(). identify data.frame: generated call galah_identify(). filter data.frame: generated call galah_filter() geolocate string: generated call galah_geolocate() data_profile string: generated call galah_apply_profile() refresh_cache logical: set TRUE galah_config(caching = TRUE) files cached previous query replaced current query","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/atlas_species.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Return species lists — atlas_species","text":"object class tbl_df data.frame (aka tibble), returning matching species data.frame object attributes listing user-supplied arguments data_request (.e., identify, filter, geolocate, columns)","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/atlas_species.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Return species lists — atlas_species","text":"primary use case function extract species-level information given set criteria defined search_taxa(), galah_filter() galah_geolocate(). purpose simply get taxonomic information restricted filtering, search_taxa() efficient. Similarly, counts required include filter without returning taxonomic detail, atlas_counts() efficient (see examples).","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/atlas_species.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Return species lists — atlas_species","text":"First, look genus interest ALA search_taxa()   good idea find many species taxon interested - case, genus Heleioporus - atlas_counts()   Now get taxonomic information species within genus atlas_species()   can also get taxonomic information species piping %>% |>. Just begin query galah_call()","code":"search_taxa(\"Heleioporus\") #> # A tibble: 1 x 13 #>   search_term scienti~1 scien~2 taxon~3 rank  match~4 kingdom phylum class order #>   <chr>       <chr>     <chr>   <chr>   <chr> <chr>   <chr>   <chr>  <chr> <chr> #> 1 Heleioporus Heleiopo~ Gray, ~ https:~ genus exactM~ Animal~ Chord~ Amph~ Anura #> # ... with 3 more variables: family <chr>, genus <chr>, issues <chr>, and #> #   abbreviated variable names 1: scientific_name, #> #   2: scientific_name_authorship, 3: taxon_concept_id, 4: match_type galah_call() |>   galah_identify(\"Heleioporus\") |>   atlas_counts(type = \"species\") #> # A tibble: 1 x 1 #>   count #>   <int> #> 1     6 # (every row is a species with associated taxonomic data) galah_call() |>   galah_identify(\"Heleioporus\") |>   atlas_species() #> # A tibble: 6 x 10 #>   kingdom  phylum   class    order family   genus species author speci~1 verna~2 #>   <chr>    <chr>    <chr>    <chr> <chr>    <chr> <chr>   <chr>  <chr>   <chr>   #> 1 Animalia Chordata Amphibia Anura Limnody~ Hele~ Heleio~ (Gray~ https:~ Moanin~ #> 2 Animalia Chordata Amphibia Anura Limnody~ Hele~ Heleio~ (Shaw~ https:~ Giant ~ #> 3 Animalia Chordata Amphibia Anura Limnody~ Hele~ Heleio~ Gray,~ https:~ Wester~ #> 4 Animalia Chordata Amphibia Anura Limnody~ Hele~ Heleio~ (Lee ~ https:~ Sand F~ #> 5 Animalia Chordata Amphibia Anura Limnody~ Hele~ Heleio~ (Lee ~ https:~ Plains~ #> 6 Animalia Chordata Amphibia Anura Limnody~ Hele~ Heleio~ Lee, ~ https:~ Wester~ #> # ... with abbreviated variable names 1: species_guid, 2: vernacular_name galah_call() |>   galah_identify(\"Heleioporus\") |>   atlas_species() #> # A tibble: 6 x 10 #>   kingdom  phylum   class    order family   genus species author speci~1 verna~2 #>   <chr>    <chr>    <chr>    <chr> <chr>    <chr> <chr>   <chr>  <chr>   <chr>   #> 1 Animalia Chordata Amphibia Anura Limnody~ Hele~ Heleio~ (Gray~ https:~ Moanin~ #> 2 Animalia Chordata Amphibia Anura Limnody~ Hele~ Heleio~ (Shaw~ https:~ Giant ~ #> 3 Animalia Chordata Amphibia Anura Limnody~ Hele~ Heleio~ Gray,~ https:~ Wester~ #> 4 Animalia Chordata Amphibia Anura Limnody~ Hele~ Heleio~ (Lee ~ https:~ Sand F~ #> 5 Animalia Chordata Amphibia Anura Limnody~ Hele~ Heleio~ (Lee ~ https:~ Plains~ #> 6 Animalia Chordata Amphibia Anura Limnody~ Hele~ Heleio~ Lee, ~ https:~ Wester~ #> # ... with abbreviated variable names 1: species_guid, 2: vernacular_name"},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/atlas_taxonomy.html","id":null,"dir":"Reference","previous_headings":"","what":"Search taxonomic trees — atlas_taxonomy","title":"Search taxonomic trees — atlas_taxonomy","text":"ALA ' internal taxonomy derived authoritative sources. atlas_taxonomy provides means query taxonomy, returning tree (class Node) showing lower clades contained within specified taxon.","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/atlas_taxonomy.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search taxonomic trees — atlas_taxonomy","text":"","code":"atlas_taxonomy(request = NULL, identify = NULL, down_to = NULL)"},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/atlas_taxonomy.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search taxonomic trees — atlas_taxonomy","text":"request optional data_request object: generated call galah_call(). identify data.frame: generated call galah_identify(). down_to identity clade downwards search stop. specified using object class character galah_down_to, returned galah_down_to(). Also accepts string.","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/atlas_taxonomy.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search taxonomic trees — atlas_taxonomy","text":"tree consisting objects class Node, containing requested taxonomy. node contains following attributes: name: scientific name taxon question rank: taxonomic rank taxon belongs guid: unique identifier used ALA authority: source taxonomic name & identifier","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/atlas_taxonomy.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Search taxonomic trees — atlas_taxonomy","text":"approach used function recursive, meaning becomes slow large queries atlas_taxonomy(search_taxa(\"Plantae\"), down_to = galah_down_to(species)). Although inputs search_taxa down_to case-insensitive, node names always returned title case.","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/atlas_taxonomy.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search taxonomic trees — atlas_taxonomy","text":"Get taxonomic tree Chordata class level   Get taxonomic tree Fungi phylum level","code":"galah_call() |>    galah_identify(\"chordata\") |>   galah_down_to(class) |>   atlas_taxonomy() #>                             levelName #> 1  Chordata                           #> 2   ¦--Cephalochordata                #> 3   ¦   °--Amphioxi                   #> 4   ¦--Craniata                       #> 5   ¦   °--Agnatha                    #> 6   ¦       ¦--Cephalasipidomorphi    #> 7   ¦       °--Myxini                 #> 8   ¦--Tunicata                       #> 9   ¦   ¦--Appendicularia             #> 10  ¦   ¦--Ascidiacea                 #> 11  ¦   °--Thaliacea                  #> 12  °--Vertebrata                     #> 13      °--Gnathostomata              #> 14          ¦--Amphibia               #> 15          ¦--Aves                   #> 16          ¦--Mammalia               #> 17          ¦--Pisces                 #> 18          ¦   ¦--Actinopterygii     #> 19          ¦   ¦--Chondrichthyes     #> 20          ¦   ¦--Cephalaspidomorphi #> 21          ¦   °--Sarcopterygii      #> 22          °--Reptilia galah_call() |>   galah_identify(\"fungi\") |>   galah_down_to(class) |>   atlas_taxonomy() #>                              levelName #> 1  Fungi                               #> 2   ¦--Ascomycota                      #> 3   ¦   ¦--Discomycetes                #> 4   ¦   ¦--Pezizomycotina              #> 5   ¦   ¦   ¦--Arthoniomycetes         #> 6   ¦   ¦   ¦--Dothideomycetes         #> 7   ¦   ¦   ¦--Eurotiomycetes          #> 8   ¦   ¦   ¦--Geoglossomycetes        #> 9   ¦   ¦   ¦--Laboulbeniomycetes      #> 10  ¦   ¦   ¦--Lecanoromycetes         #> 11  ¦   ¦   ¦--Leotiomycetes           #> 12  ¦   ¦   ¦--Lichinomycetes          #> 13  ¦   ¦   ¦--Orbiliomycetes          #> 14  ¦   ¦   ¦--Pezizomycetes           #> 15  ¦   ¦   ¦--Sordariomycetes         #> 16  ¦   ¦   °--Xylonomycetes           #> 17  ¦   ¦--Saccharomycotina            #> 18  ¦   ¦   °--Saccharomycetes         #> 19  ¦   ¦--Taphrinomycotina            #> 20  ¦   ¦   ¦--Neolectomycetes         #> 21  ¦   ¦   ¦--Pneumocystidomycetes    #> 22  ¦   ¦   ¦--Schizosaccharomycetes   #> 23  ¦   ¦   °--Taphrinomycetes         #> 24  ¦   °--Pyrenomycete                #> 25  ¦--Basidiomycota                   #> 26  ¦   ¦--Agaricomycotina             #> 27  ¦   ¦   ¦--Agaricomycetes          #> 28  ¦   ¦   ¦--Dacrymycetes            #> 29  ¦   ¦   °--Tremellomycetes         #> 30  ¦   ¦--Entorrhizomycetes           #> 31  ¦   ¦--Pucciniomycotina            #> 32  ¦   ¦   ¦--Agaricostilbomycetes    #> 33  ¦   ¦   ¦--Atractiellomycetes      #> 34  ¦   ¦   ¦--Classiculomycetes       #> 35  ¦   ¦   ¦--Cryptomycocolacomycetes #> 36  ¦   ¦   ¦--Cystobasidiomycetes     #> 37  ¦   ¦   ¦--Microbotryomycetes      #> 38  ¦   ¦   ¦--Pucciniomycetes         #> 39  ¦   ¦   ¦--Spiculogloeomycetes     #> 40  ¦   ¦   ¦--Tritirachiomycetes      #> 41  ¦   ¦   °--Urediniomycetes         #> 42  ¦   ¦--Wallemiomycetes             #> 43  ¦   °--Ustilaginomycotina          #> 44  ¦       ¦--Exobasidiomycetes       #> 45  ¦       ¦--Malasseziomycetes       #> 46  ¦       ¦--Monilielliomycetes      #> 47  ¦       ¦--Ustilaginomycetes       #> 48  ¦       °--Ustomycetes             #> 49  ¦--Chytridiomycota                 #> 50  ¦   ¦--Blastocladiomycetes         #> 51  ¦   ¦--Chytridiomycetes            #> 52  ¦   ¦--Monoblepharidomycetes       #> 53  ¦   °--Neocallimastigomycetes      #> 54  ¦--Glomeromycota                   #> 55  ¦   °--Glomeromycetes              #> 56  ¦--Microspora                      #> 57  ¦   °--Microsporea                 #> 58  ¦--Zygomycota                      #> 59  ¦   ¦--Entomophthoromycotina       #> 60  ¦   ¦   ¦--Basidiobolomycetes      #> 61  ¦   ¦   ¦--Entomophthoromycetes    #> 62  ¦   ¦   °--Neozygitomycetes        #> 63  ¦   ¦--Trichomycetes               #> 64  ¦   °--Zygomycetes                 #> 65  ¦--Coelomycetes                    #> 66  ¦--Deuteromycetes                  #> 67  °--Hyphomycetes"},{"path":[]},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/atlas_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Internal function to build APIs — atlas_url","title":"Internal function to build APIs — atlas_url","text":"function couple things. Trivially, looks base URLs internal tibble (node_config), imported csv (./data-raw/node_config.csv). Entries tibble can contain glue-like syntax infilling new data, passed using ...","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/atlas_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Internal function to build APIs — atlas_url","text":"","code":"atlas_url(api_name, ..., quiet = FALSE, error_call = caller_env())"},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/clear_cached_files.html","id":null,"dir":"Reference","previous_headings":"","what":"Clear previously cached files — clear_cached_files","title":"Clear previously cached files — clear_cached_files","text":"Deletes cached files within cached file directory query metadata","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/clear_cached_files.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Clear previously cached files — clear_cached_files","text":"","code":"clear_cached_files()"},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/clear_cached_files.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Clear previously cached files — clear_cached_files","text":"First, set caching true galah_config(). create data query. data download cached temporary directory.   clear cached files directory, use clear_cached_files()","code":"galah_config(caching = TRUE) dat <- atlas_counts(group_by = galah_group_by(year)) clear_cached_files()"},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/collect_media.html","id":null,"dir":"Reference","previous_headings":"","what":"Collect media files — collect_media","title":"Collect media files — collect_media","text":"function downloads full-sized thumbnail images media files using information atlas_media local directory.","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/collect_media.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collect media files — collect_media","text":"","code":"collect_media(   df,   type = c(\"full\", \"thumbnail\"),   path,   download_dir,   refresh_cache )"},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/collect_media.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collect media files — collect_media","text":"df tibble returned atlas_media() show_all(media) type string: either \"full\" download original images, \"thumbnail\" download thumbnails path string: path directory downloaded media stored download_dir Use path instead. refresh_cache logical: set TRUE galah_config(caching = TRUE) files cached previous query replaced current query. NOTE: Unclear works right now.","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/collect_media.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Collect media files — collect_media","text":"Available image & media files downloaded user local directory.","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/collect_media.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Collect media files — collect_media","text":"Use atlas_media() return tibble records contain media   add collect_media() end query download media files","code":"galah_call() |>    galah_identify(\"perameles\") |>   galah_filter(year == 2015) |>   atlas_media() galah_call() |>    galah_identify(\"perameles\") |>   galah_filter(year == 2015) |>   atlas_media() |>   collect_media(path = here::here(\"folder\", \"subfolder\"))"},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/collect_occurrences.html","id":null,"dir":"Reference","previous_headings":"","what":"Collect occurrence records from a pre-existing DOI or URL — collect_occurrences","title":"Collect occurrence records from a pre-existing DOI or URL — collect_occurrences","text":"Download occurrence records using existing DOI URL. Pre-existing DOIs URLs come previously generated downloads using atlas_occurrences online.","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/collect_occurrences.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Collect occurrence records from a pre-existing DOI or URL — collect_occurrences","text":"","code":"collect_occurrences(url, doi)"},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/collect_occurrences.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Collect occurrence records from a pre-existing DOI or URL — collect_occurrences","text":"url string: Retrieve occurrence records previously downloaded ALA, using URL provided via email. doi string: Retrieve occurrence records previously downloaded ALA, using DOI generated data.","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/deprecated.html","id":null,"dir":"Reference","previous_headings":"","what":"Deprecated functions — deprecated","title":"Deprecated functions — deprecated","text":"Use galah_identify() instead select_taxa(). Use galah_select() instead select_columns(). Use galah_filter() instead select_filters(). Use galah_geolocate() instead select_locations(). Use atlas_occurrences() instead ala_occurrences(). Use atlas_counts() instead ala_counts(). Use atlas_species() instead ala_species(). Use atlas_taxonomy() instead ala_taxonomy(). Use atlas_media() instead ala_media(). Use atlas_citation() instead ala_citation(). Use show_all_reasons() instead find_reasons(). Use show_all_cached_files() instead find_cached_files(). Use show_all_ranks() instead find_ranks(). Use show_all_profiles() instead find_profiles(). Use show_all_atlases() instead find_atlases(). Use galah_config() instead ala_config(). Use show_values() instead search_field_values() Use show_values() instead search_profile_attributes()","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/deprecated.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Deprecated functions — deprecated","text":"","code":"select_taxa(query, is_id = FALSE)  select_columns(..., group)  select_filters(..., profile = NULL)  select_locations(query)  ala_occurrences(   taxa = NULL,   filters = NULL,   locations = NULL,   columns = select_columns(group = \"basic\"),   mint_doi = FALSE,   doi = NULL,   refresh_cache = FALSE )  ala_counts(   taxa = NULL,   filters = NULL,   locations = NULL,   limit = 100,   type = c(\"record\", \"species\"),   refresh_cache = FALSE )  ala_species(   taxa = NULL,   filters = NULL,   locations = NULL,   refresh_cache = FALSE )  ala_taxonomy(taxa, down_to)  ala_media(   taxa = NULL,   filters = NULL,   locations = NULL,   columns = select_columns(group = \"basic\"),   download_dir,   refresh_cache = FALSE )  ala_citation(data)  find_reasons()  find_cached_files()  find_ranks()  find_profiles()  find_atlases()  ala_config(..., profile_path = NULL)  search_field_values(field, query)  search_profile_attributes(profile)"},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/galah.html","id":null,"dir":"Reference","previous_headings":"","what":"Download biodiversity data from the Atlas of Living Australia — galah","title":"Download biodiversity data from the Atlas of Living Australia — galah","text":"galah R interface Atlas Living Australia (ALA; https://www.ala.org.au/), biodiversity data repository focussed primarily observations individual life forms. also supports access 'living atlases' use computational infrastructure. basic unit data ALA occurrence record, based 'Darwin Core' data standard (https://dwc.tdwg.org). galah enables users locate download species observations, taxonomic information, associated media images sounds, restrict queries particular taxa locations. Users can specify columns returned query, restrict results observations meet particular quality-control criteria.","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/galah.html","id":"functions","dir":"Reference","previous_headings":"","what":"Functions","title":"Download biodiversity data from the Atlas of Living Australia — galah","text":"Start data query galah_call() Start build data query Narrow results galah_identify() Search taxonomic identifiers galah_filter() Filter records galah_select() Fields report information galah_group_by() Fields group counts galah_geolocate() Specify location galah_down_to() Specify taxonomic rank Download data atlas_occurrences() Download occurrence records atlas_counts() Count number records species returned query atlas_species() Download species lists atlas_taxonomy() Return section ALA taxonomic tree atlas_media() View images sounds available download collect_media() Download images sounds collect_occurrences() Download previously downloaded occurrence records Look information search_taxa() Search taxa using text-search search_identifiers() Search taxa using taxonomic identifiers show_all() & search_all() Data generating filter queries show_values() & search_values() Show search values within fields, profiles, lists, collections, datasets providers Manage cache show_all_cached_files() List previously cached files metadata clear_cached_files() Clear previously cached files metadata Configure session galah_config() Package configuration options Cite atlas_citation() Citation dataset","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/galah.html","id":"terminology","dir":"Reference","previous_headings":"","what":"Terminology","title":"Download biodiversity data from the Atlas of Living Australia — galah","text":"get value galah, helpful understand terminology used ALA. occurrence record contains taxonomic information, usually information observation , location. addition record-specific information, ALA appends contextual information record, particularly data spatial layers reflecting climate gradients political boundaries. ALA also runs number quality checks record, resulting assertions attached record. piece information associated given occurrence record stored field, corresponds column imported R data.frame. See show_all(fields) view valid fields, layers assertions, conduct search using search_all(fields). Data fields important provide means filter occurrence records;  .e. return information need, . Consequently, much architecture galah designed make filtering simple possible. Functions galah_ prefix offer ways shape query call. galah_ function allows user filter different way. , function suffix reveals one . galah_filter, galah_select galah_group_by intentionally match dplyr's select(), filter() group_by() functions, name used. example, can use galah_select() choose information returned columns. Alternatively, can use galah_filter() filter rows. can also choose specific taxa galah_identify() choose specific location using galah_geolocate(). combining different filter functions, possible build complex queries return valuable information given problem. notable extension filtering approach remove records low 'quality'. ALA performs quality control checks records stores. checks used generate new fields, can used filter records unsuitable particular applications. However, many possible data quality checks, always clear appropriate given instance. Therefore, galah supports ALA data quality profiles, can passed galah_filter() quickly remove undesirable records. full list data quality profiles returned show_all(profiles). outside Australia, 'galah' common name Eolophus roseicapilla, widely-distributed Australian bird species.","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/galah.html","id":"package-design","dir":"Reference","previous_headings":"","what":"Package design","title":"Download biodiversity data from the Atlas of Living Australia — galah","text":"cases, users primarily interested using galah return data one living atlases. functions named prefix atlas_, followed suffix describing information provide. example, users wish download occurrence data can use function atlas_occurrences(). Alternatively, users wish download data species (rather occurrence record) can use atlas_species() download media content (largely images) using atlas_media(). Users can also assess many records meet particular criteria using atlas_counts() return taxonomic tree specific clade one level another level (e.g., family genus). functions return data.frame standard format, except atlas_taxonomy() returns data.tree. Functions galah designed according nested architecture. Users require data begin locating relevant atlas_ function; arguments within function call correspondingly-named galah_ functions; specific values can interpreted galah_ functions can searched listed using search_all() show_all() functions; desired taxa can also identified using search_taxa() passed within galah_identify() taxa argument atlas_ functions.","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/galah.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Download biodiversity data from the Atlas of Living Australia — galah","text":"information ALA API, visit https://api.ala.org.au/. questions, comments suggestions, please email support@ala.org.au.","code":""},{"path":[]},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/galah.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"Download biodiversity data from the Atlas of Living Australia — galah","text":"Maintainer: Martin Westgate martin.westgate@csiro.au Authors: Matilda Stevenson Dax Kellie dax.kellie@csiro.au Peggy Newman peggy.newman@csiro.au","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/galah_apply_profile.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply a data quality profile — galah_apply_profile","title":"Apply a data quality profile — galah_apply_profile","text":"'profile' group filters pre-applied ALA. Using data profile allows query filtered quickly relevant quality-assured data fit--purpose. example, \"ALA\" profile designed exclude lower quality records, whereas profiles apply filters specific species distribution modelling (e.g. CDSM).","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/galah_apply_profile.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply a data quality profile — galah_apply_profile","text":"","code":"galah_apply_profile(...)"},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/galah_apply_profile.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply a data quality profile — galah_apply_profile","text":"... profile name. string - name abbreviation data quality profile apply query. Valid values can seen using show_all(profiles)","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/galah_apply_profile.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply a data quality profile — galah_apply_profile","text":"tibble containing valid data profile value.","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/galah_apply_profile.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Apply a data quality profile — galah_apply_profile","text":"Note one profile can loaded time; multiple profiles given, first valid profile used. bespoke editing filters within profile, use galah_filter()","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/galah_apply_profile.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Apply a data quality profile — galah_apply_profile","text":"Apply data profile query","code":"galah_call() |>    galah_identify(\"reptilia\") |>   galah_filter(year == 2021) |>   galah_apply_profile(ALA) |>   atlas_counts() #> # A tibble: 1 x 1 #>   count #>   <int> #> 1 29296"},{"path":[]},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/galah_bbox.html","id":null,"dir":"Reference","previous_headings":"","what":"Narrow a query to within a bounding box — galah_bbox","title":"Narrow a query to within a bounding box — galah_bbox","text":"Restrict results within bounding box (box constructed min/max latitude & longitude coordinates). Bounding boxes can extracted supplied sf/sfc object shapefile. bounding box can also supplied bbox object (via sf::st_bbox) tibble/data.frame.","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/galah_bbox.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Narrow a query to within a bounding box — galah_bbox","text":"","code":"galah_bbox(...)"},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/galah_bbox.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Narrow a query to within a bounding box — galah_bbox","text":"... sf object shapefile (.shp), bounding box coordinates supplied bbox, tibble/data.frame","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/galah_bbox.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Narrow a query to within a bounding box — galah_bbox","text":"length-1 object class character galah_geolocate, containing multipolygon WKT string representing bounding box area provided.","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/galah_bbox.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Narrow a query to within a bounding box — galah_bbox","text":"sf object shapefile polygon simplified bbox coordinates. bounding box can supplied bbox object tibble/data.frame. Bounding boxes supplied tibble/data.frame must \"xmin\", \"xmax\", \"ymin\" \"ymax\" columns valid numeric values.","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/galah_bbox.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Narrow a query to within a bounding box — galah_bbox","text":"Search records using bounding box coordinates   Search records using bounding box tibble data.frame   Search records within bounding box sf object   Search records within bounding box shapefile","code":"b_box <- sf::st_bbox(c(xmin = 143, xmax = 148, ymin = -29, ymax = -28),                       crs = st_crs(\"WGS84\"))  galah_call() |>   galah_identify(\"reptilia\") |>   galah_bbox(b_box) |>   atlas_counts() #> Data returned for bounding box: #> xmin = 143 xmax = 148 ymin = -29 ymax = -28 #> # A tibble: 1 x 1 #>   count #>   <int> #> 1  1782 b_box <- tibble(xmin = 148, ymin = -29, xmax = 143, ymax = -21)  galah_call() |>   galah_identify(\"vulpes\") |>   galah_bbox(b_box) |>   atlas_counts() #> Data returned for bounding box: #> xmin = 148 xmax = 143 ymin = -29 ymax = -21 #> # A tibble: 1 x 1 #>   count #>   <int> #> 1   225 galah_config(email = \"your-email@email.com\")  location <-  \"POLYGON((143.32 -18.78,145.30 -20.52,141.52 -21.50,143.32 -18.78))\" |>  sf::st_as_sfc()   galah_call() |>   galah_identify(\"vulpes\") |>   galah_bbox(location) |>   atlas_occurrences() galah_config(email = \"your-email@email.com\")  location <- sf::st_read(path/to/shapefile.shp) galah_call() |>   galah_identify(\"vulpes\") |>   galah_bbox(location) |>   atlas_occurrences()"},{"path":[]},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/galah_call.html","id":null,"dir":"Reference","previous_headings":"","what":"Start building a data query — galah_call","title":"Start building a data query — galah_call","text":"download data ALA (another atlas), one must construct data query. query tells atlas API data download return, well filtered. galah package enables users construct data queries using piping syntax (.e., %>% magrittr, |> base). Building data query using piping allows users use functions like search_taxa(), galah_filter(), [galah_select()], galah_group_by(), galah_down_to() specify filters queries line--line, narrowing results query. Users finish query atlas_ function identify type data wish download (.e., atlas_occurrences(), atlas_counts(), atlas_species(), atlas_taxonomy() atlas_media()).","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/galah_call.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Start building a data query — galah_call","text":"","code":"galah_call(   identify = NULL,   filter = NULL,   select = NULL,   geolocate = NULL,   data_profile = NULL,   group_by = NULL,   down_to = NULL,   ... )  # S3 method for data_request print(x, ...)"},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/galah_call.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Start building a data query — galah_call","text":"identify data.frame: generated call galah_identify() filter data.frame: generated call select_filters() select data.frame: generated call galah_select() geolocate string: generated call galah_geolocate() data_profile string: generated call galah_apply_profile() group_by data.frame: generated call galah_group_by() down_to data.frame: generated call galah_down_to() ... function-specific request parameters","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/galah_call.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Start building a data query — galah_call","text":"Using galah_call() pipes allows build, filter download data queries way wrangle data dplyr tidyverse. Begin query galah_call(), use either %>% magrittr |> base narrow/filter results line--line. Find number records Aves 2001 2004 year   Download Eolophus records 2001 2004   Find information species Cacatuidae family","code":"galah_call() |>   galah_identify(\"Aves\") |>   galah_filter(year > 2000 & year < 2005) |>   galah_group_by() |>   atlas_counts() galah_config(email = \"your-email@email.com\")  galah_call() |>    galah_identify(\"Eolophus\") |>   galah_filter(year > 2000 & year < 2005) |>   atlas_occurrences() galah_call() |>   galah_identify(\"Cacatuidae\") |>   atlas_species()"},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/galah_config.html","id":null,"dir":"Reference","previous_headings":"","what":"Get or set configuration options that control galah behaviour — galah_config","title":"Get or set configuration options that control galah behaviour — galah_config","text":"galah package supports large data downloads, also interfaces ALA requires users services provide registered email address reason downloading data. galah_config function provides way manage issues simply possible.","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/galah_config.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get or set configuration options that control galah behaviour — galah_config","text":"","code":"galah_config(..., profile_path = NULL)"},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/galah_config.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get or set configuration options that control galah behaviour — galah_config","text":"... Options can defined using form name = \"value\". Valid arguments : atlas string: Living Atlas point , Australia default caching logical: TRUE, results cached, cached results re-used). FALSE, data downloaded. cache_directory string: directory use cache. default temporary directory, means results cached within R session cleared automatically user exits R. user may wish set non-temporary directory caching across sessions. directory must exist file system. download_reason_id numeric string: \"download reason\" required. ALA services, either numeric ID (currently 0--13) string (see show_all(reasons) list valid ID codes names). default NA. ALA services require valid download_reason_id code, either specified directly associated R function. email string: email address registered ALA address. registered email required functions galah. send_email logical: receive email query atlas_occurrences()? Defaults FALSE; can useful instances, example tracking DOIs assigned specific downloads later citation. verbose logical: galah give verbose output assist debugging? Defaults FALSE. run_checks logical: galah run checks filters columns. making lots requests sequentially, checks can slow process lead HTTP 500 errors, turned . Defaults TRUE. profile_path  Keeping compatibility older package versions. preferable save galah_config options .Rprofile file.","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/galah_config.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get or set configuration options that control galah behaviour — galah_config","text":"galah_config(), list options. galah_config(...) called arguments, nothing returned configuration set.","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/galah_config.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get or set configuration options that control galah behaviour — galah_config","text":"configure session allow download occurrence records, enter email galah_config(). email registered ALA, can   Turn caching session   required ALA services add reason downloading data. look valid reasons enter, use show_all()   Add selected reason using option download_reason_id   can also make debugging session easier setting verbose = TRUE","code":"galah_config(email = \"your-email@email.com\") galah_config(caching = FALSE) show_all(reasons) #> # A tibble: 13 x 2 #>       id name                             #>    <int> <chr>                            #>  1     0 conservation management/planning #>  2     1 biosecurity management/planning  #>  3     2 environmental assessment         #>  4     3 education                        #>  5     4 scientific research              #>  6     5 collection management            #>  7     6 other                            #>  8     7 ecological research              #>  9     8 systematic research/taxonomy     #> 10    10 testing                          #> 11    11 citizen science                  #> 12    12 restoration/remediation          #> 13    13 species modelling galah_config(download_reason_id = 0) galah_config(download_reason_id = 0,              verbose = TRUE)"},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/galah_down_to.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify the lowest taxonomic rank required in a downwards search — galah_down_to","title":"Specify the lowest taxonomic rank required in a downwards search — galah_down_to","text":"atlas_taxonomy generates downwards search taxonomic tree. function can used specify name valid taxonomic rank using non-standard evaluation (NSE), consistency galah_ functions.","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/galah_down_to.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify the lowest taxonomic rank required in a downwards search — galah_down_to","text":"","code":"galah_down_to(...)"},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/galah_down_to.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify the lowest taxonomic rank required in a downwards search — galah_down_to","text":"... name single taxonomic rank","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/galah_down_to.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specify the lowest taxonomic rank required in a downwards search — galah_down_to","text":"string named rank","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/galah_down_to.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify the lowest taxonomic rank required in a downwards search — galah_down_to","text":"example using galah_down_to() atlas_taxonomy(). Return taxonomic tree Chordata class level   Another example: return taxonomic tree Cacatuidae genus level","code":"galah_call() |>     galah_identify(\"Chordata\") |>     galah_down_to(class) |>     atlas_taxonomy() #>                             levelName #> 1  Chordata                           #> 2   ¦--Cephalochordata                #> 3   ¦   °--Amphioxi                   #> 4   ¦--Craniata                       #> 5   ¦   °--Agnatha                    #> 6   ¦       ¦--Cephalasipidomorphi    #> 7   ¦       °--Myxini                 #> 8   ¦--Tunicata                       #> 9   ¦   ¦--Appendicularia             #> 10  ¦   ¦--Ascidiacea                 #> 11  ¦   °--Thaliacea                  #> 12  °--Vertebrata                     #> 13      °--Gnathostomata              #> 14          ¦--Amphibia               #> 15          ¦--Aves                   #> 16          ¦--Mammalia               #> 17          ¦--Pisces                 #> 18          ¦   ¦--Actinopterygii     #> 19          ¦   ¦--Chondrichthyes     #> 20          ¦   ¦--Cephalaspidomorphi #> 21          ¦   °--Sarcopterygii      #> 22          °--Reptilia galah_call() |>   galah_identify(\"Cacatuidae\") |>   galah_down_to(genus) |>   atlas_taxonomy() #>                    levelName #> 1  Cacatuidae                #> 2   ¦--Cacatuinae            #> 3   ¦   ¦--Cacatuini         #> 4   ¦   ¦   ¦--Cacatua       #> 5   ¦   ¦   ¦--Callocephalon #> 6   ¦   ¦   ¦--Eolophus      #> 7   ¦   ¦   °--Lophochroa    #> 8   ¦   °--Microglossini     #> 9   ¦       °--Probosciger   #> 10  ¦--Calyptorhynchinae     #> 11  ¦   ¦--Calyptorhynchus   #> 12  ¦   °--Zanda             #> 13  °--Nymphicinae           #> 14      °--Nymphicus"},{"path":[]},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/galah_filter.html","id":null,"dir":"Reference","previous_headings":"","what":"Narrow a query by specifying filters — galah_filter","title":"Narrow a query by specifying filters — galah_filter","text":"'filters' arguments form field logical value used narrow number records returned specific query. example, common users request records particular year (year == 2020), return records except fossils (basisOfRecord != \"FossilSpecimen\"). result galah_filter can passed filters argument atlas_occurrences(), atlas_species() atlas_counts(). galah_filter uses non-standard evaluation (NSE), designed compatible possible dplyr::filter syntax.","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/galah_filter.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Narrow a query by specifying filters — galah_filter","text":"","code":"galah_filter(..., profile = NULL)"},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/galah_filter.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Narrow a query by specifying filters — galah_filter","text":"... filters, form field logical value profile Use galah_apply_profile instead. supplied, string recording data quality profile apply query. See show_all_profiles() valid profiles. default profile applied.","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/galah_filter.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Narrow a query by specifying filters — galah_filter","text":"tibble containing filter values.","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/galah_filter.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Narrow a query by specifying filters — galah_filter","text":"statements passed galah_filter() (except profile argument) take form field - logical - value. Permissible examples include: = == (e.g. year = 2020) !=, e.g. year != 2020) > >= (e.g. year >= 2020) < <= (e.g. year <= 2020) statements (e.g. year == 2018 | year == 2020) statements (e.g. year >= 2000 & year <= 2020) cases R fail parse inputs single equals sign (=), particularly statements separated & |. problem can avoided using double-equals (==) instead.","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/galah_filter.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Narrow a query by specifying filters — galah_filter","text":"Filter query results return records interest       Use filters exclude particular values   Separating statements comma equivalent statement   statements must include field name   possible use object specify required values     solr supports range queries text well numbers. following queries Australian States Territories alphabetically \"Tasmania\"   Filter specific records unreliable using \"assertions\"","code":"galah_call() |>   galah_filter(year >= 2019) |>   atlas_counts() #> # A tibble: 1 x 1 #>      count #>      <int> #> 1 20366547 galah_call() |>   galah_filter(year >= 2019,                basisOfRecord == \"HumanObservation\") |>   atlas_counts() #> # A tibble: 1 x 1 #>      count #>      <int> #> 1 19913665 galah_call() |>   galah_filter(year >= 2019,                basisOfRecord == \"HumanObservation\",                stateProvince == \"New South Wales\") |>   atlas_counts() #> # A tibble: 1 x 1 #>     count #>     <int> #> 1 5718532 galah_call() |>    galah_filter(year >= 2010 & year != 2021) |>   atlas_counts() #> # A tibble: 1 x 1 #>      count #>      <int> #> 1 47747818 galah_filter(year >= 2010 & year < 2020) # is the same as: galah_filter(year >= 2010, year < 2020) galah_filter(year == 2010 | year == 2021) # this works (note double equals) galah_filter(year == c(2010, 2021)) # same as above  galah_filter(year == 2010 | 2021) # this fails # Numeric example  year_value <- 2010  galah_call() %>%   galah_filter(year > year_value) %>%   atlas_counts() #> # A tibble: 1 x 1 #>      count #>      <int> #> 1 52394462 # Categorical example  basis_of_record <- c(\"HumanObservation\", \"MaterialSample\")  galah_call() %>%   galah_filter(basisOfRecord == basis_of_record) %>%   atlas_counts() #> # A tibble: 1 x 1 #>      count #>      <int> #> 1 89210548 galah_call() %>%   galah_filter(cl22 >= \"Tasmania\") %>%   atlas_counts() #> # A tibble: 1 x 1 #>      count #>      <int> #> 1 33660317 search_assertions(\"coordinate invalid\") #> # A tibble: 1 x 4 #>   id                 description        category type       #>   <chr>              <chr>              <chr>    <chr>      #> 1 COORDINATE_INVALID Coordinate invalid Warning  assertions  galah_call() %>%   galah_filter(COORDINATE_INVALID == FALSE) %>%   atlas_counts() #> # A tibble: 1 x 1 #>       count #>       <int> #> 1 110687468"},{"path":[]},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/galah_geolocate.html","id":null,"dir":"Reference","previous_headings":"","what":"Narrow a query to within a specified area — galah_geolocate","title":"Narrow a query to within a specified area — galah_geolocate","text":"Restrict results specified area. Areas can specified either polygons bounding boxes, depending type.","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/galah_geolocate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Narrow a query to within a specified area — galah_geolocate","text":"","code":"galah_geolocate(..., type = c(\"polygon\", \"bbox\"))"},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/galah_geolocate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Narrow a query to within a specified area — galah_geolocate","text":"... single sf object, WKT string shapefile. Bounding boxes can supplied tibble/data.frame bbox type string: one c(\"polygon\", \"bbox\"). Defaults \"polygon\". type = \"polygon\", multipolygon built via galah_polygon(). type = \"bbox\", multipolygon built via galah_bbox(). multipolygon used narrow query ALA.","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/galah_geolocate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Narrow a query to within a specified area — galah_geolocate","text":"length-1 object class character galah_geolocate, containing multipolygon WKT string representing area provided.","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/galah_geolocate.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Narrow a query to within a specified area — galah_geolocate","text":"default, type set \"polygon\" narrows queries within area supplied polygon. Polygons must specified either sf object, 'well-known text' (WKT) string, shapefile. Shapefiles must simple accepted ALA. Alternatively, set type = \"bbox\" narrow queries within bounding box. Bounding boxes can extracted supplied sf object shapefile. bounding box can also supplied bbox object (via sf::st_bbox) tibble/data.frame. type = \"polygon\", WKT strings longer 10000 characters sf objects 500 vertices accepted ALA. polygons  may need simplified. type = \"bbox\", sf objects shapefiles converted bounding box query ALA.","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/galah_geolocate.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Narrow a query to within a specified area — galah_geolocate","text":"Search records within polygon using sf object   Search records within polygon using shapefile   Search records using Well-known Text string (WKT)   Search records within bounding box extracted sf object   Search records within bounding box shapefile   Search records using bounding box coordinates   Search records using bounding box tibble data.frame","code":"location <-  \"POLYGON((143.32 -18.78,145.30 -20.52,141.52 -21.50,143.32 -18.78))\" |>  sf::st_as_sfc()   galah_call() |>   galah_identify(\"reptilia\") |>   galah_polygon(location) |>   atlas_counts() galah_config(email = \"your-email@email.com\")  location <- galah_geolocate(sf::st_read(path/to/shapefile.shp)) galah_call() |>   galah_identify(\"vulpes\") |>   galah_geolocate(location) |>   atlas_occurrences() wkt <- \"POLYGON((142.36228 -29.00703,142.74131 -29.00703,142.74131 -29.39064,142.36228 -29.39064,142.36228 -29.00703))\"  galah_call() |>   galah_identify(\"vulpes\") |>   galah_geolocate(wkt) |>   atlas_counts() #> # A tibble: 1 x 1 #>   count #>   <int> #> 1     1 galah_config(email = \"your-email@email.com\")  location <-  \"POLYGON((143.32 -18.78,145.30 -20.52,141.52 -21.50,143.32 -18.78))\" |>  sf::st_as_sfc()   galah_call() |>   galah_identify(\"vulpes\") |>   galah_geolocate(location, type = \"bbox\") |>   atlas_occurrences() galah_config(email = \"your-email@email.com\")  location <- sf::st_read(path/to/shapefile.shp) galah_call() |>   galah_identify(\"vulpes\") |>   galah_geolocate(location, type = \"bbox\") |>   atlas_occurrences() b_box <- sf::st_bbox(c(xmin = 143, xmax = 148, ymin = -29, ymax = -28),                       crs = st_crs(\"WGS84\"))  galah_call() |>   galah_identify(\"reptilia\") |>   galah_geolocate(b_box, type = \"bbox\") |>   atlas_counts() #> Data returned for bounding box: #> xmin = 143 xmax = 148 ymin = -29 ymax = -28 #> # A tibble: 1 x 1 #>   count #>   <int> #> 1  1782 b_box <- tibble(xmin = 148, ymin = -29, xmax = 143, ymax = -21)  galah_call() |>   galah_identify(\"vulpes\") |>   galah_geolocate(b_box, type = \"bbox\") |>   atlas_counts() #> Data returned for bounding box: #> xmin = 148 xmax = 143 ymin = -29 ymax = -21 #> # A tibble: 1 x 1 #>   count #>   <int> #> 1   225"},{"path":[]},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/galah_group_by.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify fields to group when downloading record counts — galah_group_by","title":"Specify fields to group when downloading record counts — galah_group_by","text":"atlas_counts supports server-side grouping data. Grouping can used return record counts grouped multiple, valid fields (found search_all(fields). Use galah_group_by using group_by argument atlas_counts return record counts summed one valid fields.","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/galah_group_by.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify fields to group when downloading record counts — galah_group_by","text":"","code":"galah_group_by(..., expand = TRUE)"},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/galah_group_by.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify fields to group when downloading record counts — galah_group_by","text":"... zero individual column names include expand logical: passed group_by argument atlas_counts, factor levels expanded? Defaults TRUE.","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/galah_group_by.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specify fields to group when downloading record counts — galah_group_by","text":"arguments provided, returns data.frame columns name type, per galah_select(); arguments provided, returns NULL.","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/galah_group_by.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify fields to group when downloading record counts — galah_group_by","text":"Return record counts since 2010 year     Return record counts since 2010 year data provider     Return record counts Litoria species year since 2015, limiting results top 5 year","code":"records <- galah_call() |>      galah_filter(year > 2010) |>     galah_group_by(year) |>     atlas_counts() records #> # A tibble: 12 x 2 #>    year    count #>    <chr>   <int> #>  1 2021  7117113 #>  2 2020  6399409 #>  3 2019  5760766 #>  4 2018  5625143 #>  5 2017  4856883 #>  6 2014  4037074 #>  7 2016  4010111 #>  8 2015  3834166 #>  9 2013  3723858 #> 10 2012  3153655 #> 11 2011  2787025 #> 12 2022  1089259 records <- galah_call() |>     galah_filter(year > 2010) |>     galah_group_by(year, dataResourceName) |>     atlas_counts() records #> # A tibble: 127 x 3 #>   dataResourceName year    count #>   <chr>            <chr>   <int> #> 1 eBird Australia  2021  5473631 #> 2 eBird Australia  2020  4613576 #> 3 eBird Australia  2019  4181309 #> 4 eBird Australia  2018  3630154 #> # ... with 123 more rows records <- galah_call() |>     galah_identify(\"Litoria\") |>     galah_filter(year > 2015) |>     galah_group_by(year, species) |>     atlas_counts(limit = 5) records #> # A tibble: 35 x 3 #>   species         year  count #>   <chr>           <chr> <int> #> 1 Litoria peronii 2020  18370 #> 2 Litoria peronii 2019  11122 #> 3 Litoria peronii 2018  11093 #> 4 Litoria peronii 2017   6385 #> # ... with 31 more rows"},{"path":[]},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/galah_identify.html","id":null,"dir":"Reference","previous_headings":"","what":"Narrow a query by passing taxonomic identifiers — galah_identify","title":"Narrow a query by passing taxonomic identifiers — galah_identify","text":"conducting search creating data query, common identify known taxon group taxa narrow records results returned. function allows users pass scientific names taxonomic identifiers pipes provide data biological group interest.","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/galah_identify.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Narrow a query by passing taxonomic identifiers — galah_identify","text":"","code":"galah_identify(..., search = TRUE)"},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/galah_identify.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Narrow a query by passing taxonomic identifiers — galah_identify","text":"... one scientific names (search = TRUE) taxonomic identifiers (search = FALSE); object class ala_id (search_taxa), gbifid, nbnid (taxize) international atlases. search (logical); results question passed search_taxa? Ignored object class ala_id, gbifid, nbnid given ....","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/galah_identify.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Narrow a query by passing taxonomic identifiers — galah_identify","text":"tibble containing identified taxa.","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/galah_identify.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Narrow a query by passing taxonomic identifiers — galah_identify","text":"galah_identify() used identify taxa want returned search data query. good use search_taxa() search_identifiers() first check taxa provide galah_identify() return correct results. Specify taxon. valid taxon return identifier.   Specify one taxon time.   Use galah_identify() narrow queries   already know valid taxon identifier, add set search = FALSE.","code":"galah_identify(\"reptilia\") #> # A tibble: 1 x 1 #>   identifier                                                                #>   <chr>                                                                     #> 1 https://biodiversity.org.au/afd/taxa/682e1228-5b3c-45ff-833b-550efd40c399 galah_identify(\"reptilia\", \"mammalia\", \"aves\", \"pisces\") #> # A tibble: 4 x 1 #>   identifier                                                                #>   <chr>                                                                     #> 1 https://biodiversity.org.au/afd/taxa/682e1228-5b3c-45ff-833b-550efd40c399 #> 2 https://biodiversity.org.au/afd/taxa/e9e7db31-04df-41fb-bd8d-e0b0f3c332d6 #> 3 https://biodiversity.org.au/afd/taxa/65625205-db74-4a87-b566-ca387b119974 #> 4 https://biodiversity.org.au/afd/taxa/e22efeb4-2cb5-4250-8d71-61c48bdaa051 galah_call() |>    galah_identify(\"Eolophus\") |>   atlas_counts() #> # A tibble: 1 x 1 #>    count #>    <int> #> 1 994158 galah_call() |>    galah_identify(\"https://biodiversity.org.au/afd/taxa/009169a9-a916-40ee-866c-669ae0a21c5c\",                   search = FALSE) |>   atlas_counts() #> # A tibble: 1 x 1 #>    count #>    <int> #> 1 994158"},{"path":[]},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/galah_polygon.html","id":null,"dir":"Reference","previous_headings":"","what":"Narrow a query to within a specified polygon — galah_polygon","title":"Narrow a query to within a specified polygon — galah_polygon","text":"Restrict results specified area. Areas must polygons. Polygons must supplied sf object, 'well-known text' (WKT) string, shapefile. Polygons shapefiles must overly complex (.e. many characters many vertices) accepted query ALA.","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/galah_polygon.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Narrow a query to within a specified polygon — galah_polygon","text":"","code":"galah_polygon(...)"},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/galah_polygon.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Narrow a query to within a specified polygon — galah_polygon","text":"... single sf object, WKT string shapefile.","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/galah_polygon.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Narrow a query to within a specified polygon — galah_polygon","text":"length-1 object class character galah_geolocate, containing multipolygon WKT string representing area provided.","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/galah_polygon.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Narrow a query to within a specified polygon — galah_polygon","text":"WKT strings longer 10000 characters sf objects 500 vertices accepted ALA. polygons  may need simplified.","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/galah_polygon.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Narrow a query to within a specified polygon — galah_polygon","text":"Search records within polygon using sf object   Search records using shapefile   Search records using Well-known Text string (WKT)","code":"location <-  \"POLYGON((143.32 -18.78,145.30 -20.52,141.52 -21.50,143.32 -18.78))\" |>  sf::st_as_sfc()   galah_call() |>   galah_identify(\"reptilia\") |>   galah_polygon(location) |>   atlas_counts() galah_config(email = \"your-email@email.com\")  location <- galah_geolocate(sf::st_read(path/to/shapefile.shp)) galah_call() |>   galah_identify(\"vulpes\") |>   galah_polygon(location) |>   atlas_occurrences() wkt <- \"POLYGON((142.36228 -29.00703,142.74131 -29.00703,142.74131 -29.39064,142.36228 -29.39064,142.36228 -29.00703))\"  galah_call() |>   galah_identify(\"vulpes\") |>   galah_polygon(wkt) |>   atlas_counts() #> # A tibble: 1 x 1 #>   count #>   <int> #> 1     1"},{"path":[]},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/galah_select.html","id":null,"dir":"Reference","previous_headings":"","what":"Specify fields for occurrence download — galah_select","title":"Specify fields for occurrence download — galah_select","text":"living atlases store content hundreds different fields, users often require thousands millions records time. reduce time taken download data, limit complexity resulting data.frame, sensible restrict fields returned atlas_occurrences(). function allows easy selection fields, commonly-requested groups columns, following syntax shared dplyr::select().","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/galah_select.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Specify fields for occurrence download — galah_select","text":"","code":"galah_select(..., group = c(\"basic\", \"event\", \"media\", \"assertions\"))"},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/galah_select.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Specify fields for occurrence download — galah_select","text":"... zero individual column names include group string: (optional) name one column groups include. Valid options \"basic\", \"event\" \"assertions\"","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/galah_select.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Specify fields for occurrence download — galah_select","text":"tibble specifying name type column include call atlas_counts() atlas_occurrences().","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/galah_select.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Specify fields for occurrence download — galah_select","text":"full list available fields can viewed show_all(fields). Calling argument group = \"basic\" returns following columns: decimalLatitude decimalLongitude eventDate scientificName taxonConceptID recordID dataResourceName occurrenceStatus Using group = \"event\" returns following columns: eventRemarks eventTime eventID eventDate samplingEffort samplingProtocol Using group = \"media\" returns following columns: multimedia multimediaLicence images videos sounds Using group = \"assertions\" returns quality assertion-related columns. list assertions shown show_all_assertions().","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/galah_select.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Specify fields for occurrence download — galah_select","text":"Download occurrence records Perameles taken 2001, returning scientific name event date   Download occurrence record Perameles taken 2001, returning \"basic\" group columns plus Basis Record","code":"galah_config(email = \"your-email@email.com\") galah_call() |>   galah_identify(\"perameles\")|>   galah_filter(year == 2001) |>   galah_select(scientificName, eventDate) |>   atlas_occurrences() galah_call() |>   galah_identify(\"perameles\") |>   galah_filter(year == 2001) |>   galah_select(group = c(\"basic\", \"event\"), basisOfRecord) |>   atlas_occurrences()"},{"path":[]},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/search_all.html","id":null,"dir":"Reference","previous_headings":"","what":"Search for record information — search_all","title":"Search for record information — search_all","text":"living atlases store huge amount information, beyond occurrence records main output. galah, one way users can investigate information searching specific option category type information interested . Functions prefixed search_ , displaying matches search term within valid options information specified suffix. search_all() helper function can searches within multiple types information search_ sub-functions. See Details () accepted values.","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/search_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search for record information — search_all","text":"","code":"search_all(type, query)  search_apis(query)  search_assertions(query)  search_atlases(query)  search_collections(query)  search_datasets(query)  search_providers(query)  search_fields(query)  search_licences(query)  search_reasons(query)  search_ranks(query)  search_profiles(query)  search_lists(query)"},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/search_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search for record information — search_all","text":"type string specify type parameters searched. query string specifying search term. Searches case-sensitive.","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/search_all.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search for record information — search_all","text":"object class tbl_df data.frame (aka tibble) containing data match search query.","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/search_all.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Search for record information — search_all","text":"five categories information, specific sub-functions look-type information. available types information search_all() :","code":""},{"path":[]},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/search_all.html","id":"fields","dir":"Reference","previous_headings":"","what":"Fields","title":"Search for record information — search_all","text":"Search fields use include word \"date\"     Search fields string \"basisofrecord\"     Search fields information \"marine\"     Search Wordclim layers","code":"search_fields(\"date\") #> # A tibble: 22 x 4 #>   id        description                                              type  link  #>   <chr>     <chr>                                                    <chr> <chr> #> 1 month     \"Month of observation, specimen collection date. http:/~ fiel~ <NA>  #> 2 cl23      \"Local Government Areas 2012 deprecated LGA Boundaries ~ laye~ http~ #> 3 eventDate \"The ISO formatted date of observation, specimen collec~ fiel~ <NA>  #> 4 cl10903   \"Tenure of Australia's forests (2013) v2.0 Tenure of Au~ laye~ http~ #> # ... with 18 more rows search_all(fields, \"date\") # equivalent search_fields(\"basisofrecord\") #> # A tibble: 2 x 4 #>   id                description                                      type  link  #>   <chr>             <chr>                                            <chr> <chr> #> 1 basisOfRecord     What this is a record of e.g. specimen, human o~ fiel~ <NA>  #> 2 raw_basisOfRecord The basis of record as supplied by the data pub~ fiel~ <NA> search_all(fields, \"basisofrecord\") # equivalent search_fields(\"marine\") |>    head() # only show first 5 results #> # A tibble: 6 x 4 #>   id     description                                                 type  link  #>   <chr>  <chr>                                                       <chr> <chr> #> 1 biome  \"A field indicating if the record has been located in Terr~ fiel~  <NA> #> 2 cl2105 \"FAO Fishery Statistical Areas FAO Fishing areas (Marine)\"  laye~ \"htt~ #> 3 el1056 \"Endemism (Non-marine) Endemism (Non-marine) based on Cris~ laye~ \"\"    #> 4 el957  \"Averaged Topographic Relief  This data represents the ave~ laye~ \"htt~ #> 5 cl988  \"Marine Ecoregions of the World Marine Ecoregions of the W~ laye~ \"htt~ #> 6 cl2085 \"Global 200 priority ecoregions - Marine WWF's Global 200 ~ laye~ \"htt~ search_all(fields, \"marine\") # equivalent search_fields(\"worldclim\") #> # A tibble: 38 x 4 #>   id      description                                                type  link  #>   <chr>   <chr>                                                      <chr> <chr> #> 1 el10982 WorldClim 2.1: Temperature - warmest month max Max Temper~ laye~ http~ #> 2 el10981 WorldClim 2.1: Temperature - seasonality Temperature Seas~ laye~ http~ #> 3 el10980 WorldClim 2.1: Temperature - isothermality Isothermality   laye~ http~ #> 4 el10990 WorldClim 2.1: Precipitation - wettest month Precipitatio~ laye~ http~ #> # ... with 34 more rows search_all(fields, \"worldclim\") # equivalent"},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/search_all.html","id":"taxa","dir":"Reference","previous_headings":"","what":"Taxa","title":"Search for record information — search_all","text":"Search using single term (See search_taxa() info)     Note search_taxa() case sensitive   Search multiple taxa. search_taxa() return one row per taxon   galah_identify() uses search_taxa() narrow data queries","code":"search_taxa(\"Reptilia\") #> # A tibble: 1 x 9 #>   search_term scientific_name taxon_~1 rank  match~2 kingdom phylum class issues #>   <chr>       <chr>           <chr>    <chr> <chr>   <chr>   <chr>  <chr> <chr>  #> 1 Reptilia    REPTILIA        https:/~ class exactM~ Animal~ Chord~ Rept~ noIss~ #> # ... with abbreviated variable names 1: taxon_concept_id, 2: match_type search_all(taxa, \"Reptilia\") # equivalent search_taxa(\"reptilia\") # not case sensitive #> # A tibble: 1 x 9 #>   search_term scientific_name taxon_~1 rank  match~2 kingdom phylum class issues #>   <chr>       <chr>           <chr>    <chr> <chr>   <chr>   <chr>  <chr> <chr>  #> 1 reptilia    REPTILIA        https:/~ class exactM~ Animal~ Chord~ Rept~ noIss~ #> # ... with abbreviated variable names 1: taxon_concept_id, 2: match_type search_taxa(c(\"reptilia\", \"mammalia\")) #> # A tibble: 2 x 10 #>   search_term scient~1 taxon~2 rank  match~3 kingdom phylum class issues verna~4 #>   <chr>       <chr>    <chr>   <chr> <chr>   <chr>   <chr>  <chr> <chr>  <chr>   #> 1 reptilia    REPTILIA https:~ class exactM~ Animal~ Chord~ Rept~ noIss~ <NA>    #> 2 mammalia    MAMMALIA https:~ class exactM~ Animal~ Chord~ Mamm~ noIss~ Mammals #> # ... with abbreviated variable names 1: scientific_name, 2: taxon_concept_id, #> #   3: match_type, 4: vernacular_name galah_call() |>   galah_identify(\"reptilia\") |>   atlas_counts() #> # A tibble: 1 x 1 #>     count #>     <int> #> 1 1474341"},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/search_all.html","id":"identifiers","dir":"Reference","previous_headings":"","what":"Identifiers","title":"Search for record information — search_all","text":"Look unique taxon identifier (See search_identifiers() info)     galah_identify() uses identifiers narrow data queries, . Ensure search = FALSE.","code":"search_identifiers(identifier = \"https://id.biodiversity.org.au/node/apni/2914510\") #> # A tibble: 1 x 14 #>   scient~1 scien~2 taxon~3 rank  match~4 kingdom phylum class order family genus #>   <chr>    <chr>   <chr>   <chr> <chr>   <chr>   <chr>  <chr> <chr> <chr>  <chr> #> 1 Eucalyp~ Maiden  https:~ spec~ taxonI~ Plantae Charo~ Equi~ Myrt~ Myrta~ Euca~ #> # ... with 3 more variables: species <chr>, vernacular_name <chr>, #> #   issues <chr>, and abbreviated variable names 1: scientific_name, #> #   2: scientific_name_authorship, 3: taxon_concept_id, 4: match_type search_all(identifiers,             \"https://id.biodiversity.org.au/node/apni/2914510\") # equivalent galah_call() |>   galah_identify(\"https://id.biodiversity.org.au/node/apni/2914510\",                  search = FALSE) |>   atlas_counts() #> # A tibble: 1 x 1 #>   count #>   <int> #> 1 13466"},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/search_all.html","id":"lists","dir":"Reference","previous_headings":"","what":"Lists","title":"Search for record information — search_all","text":"Search species lists match \"endangered\"","code":"search_lists(\"endangered\") #> # A tibble: 7 x 16 #>   dataR~1 listN~2 listT~3 dateC~4 lastU~5 usern~6 fullN~7 itemC~8 region categ~9 #>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <lgl>     <int> <chr>  <chr>   #> 1 dr19257 Endang~ OTHER   2022-0~ 2022-0~ alanah~ NA           17 <NA>   <NA>    #> 2 dr4890  Endang~ CONSER~ 2016-0~ 2016-0~ kiashe~ NA          340 <NA>   <NA>    #> 3 dr17208 My spe~ OTHER   2021-0~ 2021-0~ caterp~ NA            1 <NA>   <NA>    #> 4 dr17134 Endang~ CONSER~ 2021-0~ 2021-0~ 100588~ NA           20 <NA>   <NA>    #> 5 dr16896 Rare a~ CONSER~ 2021-0~ 2021-0~ matthe~ NA            1 <NA>   <NA>    #> 6 dr16203 EPBC A~ SPATIA~ 2020-0~ 2020-0~ robina~ NA           10 <NA>   <NA>    #> 7 dr19750 Endang~ OTHER   2022-0~ 2022-0~ anneke~ NA           73 <NA>   <NA>    #> # ... with 6 more variables: generalisation <chr>, authority <chr>, #> #   sdsType <chr>, isAuthoritative <lgl>, isInvasive <lgl>, isThreatened <lgl>, #> #   and abbreviated variable names 1: dataResourceUid, 2: listName, #> #   3: listType, 4: dateCreated, 5: lastUpdated, 6: username, 7: fullName, #> #   8: itemCount, 9: category search_all(lists, \"endangered\") # equivalent"},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/search_all.html","id":"ranks","dir":"Reference","previous_headings":"","what":"Ranks","title":"Search for record information — search_all","text":"Search valid taxonomic rank, \"subphylum\"     Use ranks galah_down_to() atlas_taxonomy() get taxonomic trees","code":"search_ranks(\"subphylum\") #> # A tibble: 1 x 2 #>      id name      #>   <int> <chr>     #> 1     7 subphylum search_all(ranks, \"subphylum\") # equivalent galah_call() %>%   galah_identify(\"fungi\") %>%   galah_down_to(subphylum) %>%   atlas_taxonomy() #>                        levelName #> 1  Fungi                         #> 2   ¦--Ascomycota                #> 3   ¦   ¦--Pezizomycotina        #> 4   ¦   ¦--Saccharomycotina      #> 5   ¦   °--Taphrinomycotina      #> 6   ¦--Basidiomycota             #> 7   ¦   ¦--Agaricomycotina       #> 8   ¦   ¦--Pucciniomycotina      #> 9   ¦   ¦--Ustilaginomycotina    #> 10  ¦   °--Wallemiomycotina      #> 11  ¦--Mucoromycota              #> 12  ¦   °--Glomeromycotina       #> 13  °--Zygomycota                #> 14      ¦--Entomophthoromycotina #> 15      ¦--Kickxellomycotina     #> 16      ¦--Mortierellomycotina   #> 17      ¦--Mucoromycotina        #> 18      °--Zoopagomycotina"},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/search_all.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Search for record information — search_all","text":"Darwin Core terms https://dwc.tdwg.org/terms/ ALA fields https://api.ala.org.au/#ws72 ALA assertions fields https://api.ala.org.au/#ws81","code":""},{"path":[]},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/search_identifiers.html","id":null,"dir":"Reference","previous_headings":"","what":"Search for taxa with taxonomic identifiers — search_identifiers","title":"Search for taxa with taxonomic identifiers — search_identifiers","text":"ALA, records associated identifier uniquely identifies taxon record belongs. identifiers known, function allows use look information taxon question. Effectively inverse function search_taxa(), takes names provides identifiers. resulting data.frame taxonomic information can also passed directly atlas_ functions filter records specified taxon taxa.","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/search_identifiers.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search for taxa with taxonomic identifiers — search_identifiers","text":"","code":"search_identifiers(identifier)"},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/search_identifiers.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search for taxa with taxonomic identifiers — search_identifiers","text":"identifier string: vector containing one taxonomic identifiers, given strings.","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/search_identifiers.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search for taxa with taxonomic identifiers — search_identifiers","text":"object class tbl_df, data.frame (aka tibble) ala_id containing taxonomic information.","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/search_identifiers.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search for taxa with taxonomic identifiers — search_identifiers","text":"Look unique taxon identifier","code":"search_identifiers(identifier = \"https://id.biodiversity.org.au/node/apni/2914510\") #> # A tibble: 1 x 14 #>   scient~1 scien~2 taxon~3 rank  match~4 kingdom phylum class order family genus #>   <chr>    <chr>   <chr>   <chr> <chr>   <chr>   <chr>  <chr> <chr> <chr>  <chr> #> 1 Eucalyp~ Maiden  https:~ spec~ taxonI~ Plantae Charo~ Equi~ Myrt~ Myrta~ Euca~ #> # ... with 3 more variables: species <chr>, vernacular_name <chr>, #> #   issues <chr>, and abbreviated variable names 1: scientific_name, #> #   2: scientific_name_authorship, 3: taxon_concept_id, 4: match_type"},{"path":[]},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/search_media.html","id":null,"dir":"Reference","previous_headings":"","what":"Search for associated media of occurrence records — search_media","title":"Search for associated media of occurrence records — search_media","text":"Search media files set occurrence records downloaded using atlas_occurrences(). search_media() also accepts set media IDs (parsed unparsed).","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/search_media.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Search for associated media of occurrence records — search_media","text":"","code":"search_media(df)"},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/search_media.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Search for associated media of occurrence records — search_media","text":"df tibble species occurrence records media IDs.","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/search_media.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Search for associated media of occurrence records — search_media","text":"tibble matching media files occurrence records media ids","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/search_media.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Search for associated media of occurrence records — search_media","text":"Search media files associated specified set species occurrence records","code":"occs <- galah_call() |>   galah_identify(\"perameles\") |>   galah_filter(year == 2001) |>   atlas_occurrences()    search_media(occs)"},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/search_taxa.html","id":null,"dir":"Reference","previous_headings":"","what":"Look up taxon information — search_taxa","title":"Look up taxon information — search_taxa","text":"Look taxonomic names downloading data ALA, using atlas_occurrences(), atlas_species() atlas_counts(). Taxon information returned search_taxa() may passed galah_identify() provide identify argument atlas_ functions. search_taxa() allows users disambiguate homonyms (.e. name refers taxa different clades) prior downloading data.","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/search_taxa.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Look up taxon information — search_taxa","text":"","code":"search_taxa(...)"},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/search_taxa.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Look up taxon information — search_taxa","text":"... : string one scientific names, separated commas, data frame specifying taxonomic levels. Note searches case-sensitive.","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/search_taxa.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Look up taxon information — search_taxa","text":"object class tbl_df, data.frame (aka tibble) ala_id containing taxonomic information.","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/search_taxa.html","id":"examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Look up taxon information — search_taxa","text":"Search using single string. Note search_taxa() case sensitive   Search using multiple strings. search_taxa() return one row per taxon   Specify taxonomic levels search using data frame (tibble). Taxa may specified using either specificEpithet argument designate second element Latin binomial, scientificName argument specify scientific name, may include subspecific epithet required.   galah_identify() uses search_taxa() narrow data queries","code":"search_taxa(\"Reptilia\") #> # A tibble: 1 x 9 #>   search_term scientific_name taxon_~1 rank  match~2 kingdom phylum class issues #>   <chr>       <chr>           <chr>    <chr> <chr>   <chr>   <chr>  <chr> <chr>  #> 1 Reptilia    REPTILIA        https:/~ class exactM~ Animal~ Chord~ Rept~ noIss~ #> # ... with abbreviated variable names 1: taxon_concept_id, 2: match_type search_taxa(\"reptilia\", \"mammalia\") #> # A tibble: 2 x 10 #>   search_term scient~1 taxon~2 rank  match~3 kingdom phylum class issues verna~4 #>   <chr>       <chr>    <chr>   <chr> <chr>   <chr>   <chr>  <chr> <chr>  <chr>   #> 1 reptilia    REPTILIA https:~ class exactM~ Animal~ Chord~ Rept~ noIss~ <NA>    #> 2 mammalia    MAMMALIA https:~ class exactM~ Animal~ Chord~ Mamm~ noIss~ Mammals #> # ... with abbreviated variable names 1: scientific_name, 2: taxon_concept_id, #> #   3: match_type, 4: vernacular_name search_taxa(tibble(  class = \"aves\",   family = \"pardalotidae\",   genus = \"pardalotus\",   specificEpithet = \"punctatus\")) #> # A tibble: 1 x 15 #>   search_term   scien~1 scien~2 taxon~3 rank  match~4 kingdom phylum class order #>   <chr>         <chr>   <chr>   <chr>   <chr> <chr>   <chr>   <chr>  <chr> <chr> #> 1 aves_pardalo~ Pardal~ (Shaw,~ https:~ spec~ exactM~ Animal~ Chord~ Aves  Pass~ #> # ... with 5 more variables: family <chr>, genus <chr>, species <chr>, #> #   vernacular_name <chr>, issues <chr>, and abbreviated variable names #> #   1: scientific_name, 2: scientific_name_authorship, 3: taxon_concept_id, #> #   4: match_type                       search_taxa(tibble(  family = c(\"pardalotidae\", \"maluridae\"),   scientificName = c(\"Pardalotus striatus striatus\", \"malurus cyaneus\"))) #> # A tibble: 2 x 15 #>   search_term   scien~1 scien~2 taxon~3 rank  match~4 kingdom phylum class order #>   <chr>         <chr>   <chr>   <chr>   <chr> <chr>   <chr>   <chr>  <chr> <chr> #> 1 pardalotidae~ Pardal~ (Gmeli~ https:~ subs~ exactM~ Animal~ Chord~ Aves  Pass~ #> 2 maluridae_ma~ Maluru~ (Ellis~ https:~ spec~ exactM~ Animal~ Chord~ Aves  Pass~ #> # ... with 5 more variables: family <chr>, genus <chr>, species <chr>, #> #   issues <chr>, vernacular_name <chr>, and abbreviated variable names #> #   1: scientific_name, 2: scientific_name_authorship, 3: taxon_concept_id, #> #   4: match_type galah_call() |>   galah_identify(\"reptilia\") |>   atlas_counts() #> # A tibble: 1 x 1 #>     count #>     <int> #> 1 1474341"},{"path":[]},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/show_all.html","id":null,"dir":"Reference","previous_headings":"","what":"Show valid record information — show_all","title":"Show valid record information — show_all","text":"living atlases store huge amount information, beyond occurrence records main output. galah, one way users can investigate information showing available options categories type information interested . Functions prefixed show_all_ , displaying valid options information specified suffix. show_all() helper function can display multiple types information show_all_ sub-functions. See Details () accepted values.","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/show_all.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show valid record information — show_all","text":"","code":"show_all(type)  show_all_assertions()  show_all_atlases()  show_all_cached_files()  show_all_apis()  show_all_collections()  show_all_datasets()  show_all_providers()  show_all_fields()  show_all_licences()  show_all_reasons()  show_all_ranks()  show_all_profiles()  show_all_lists()"},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/show_all.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show valid record information — show_all","text":"type string specify type parameters shown.","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/show_all.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show valid record information — show_all","text":"object class tbl_df data.frame (aka tibble) containing data interest.","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/show_all.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Show valid record information — show_all","text":"five categories information, specific sub-functions look-type information. available types information show_all_ :","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/show_all.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Show valid record information — show_all","text":"Darwin Core terms https://dwc.tdwg.org/terms/ ALA fields https://api.ala.org.au/#ws72 ALA assertions fields https://api.ala.org.au/#ws81","code":""},{"path":[]},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/show_all.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show valid record information — show_all","text":"","code":"## Atlases ---------------------------  # See all supported atlases show_all(atlases) #> # A tibble: 10 × 4 #>    atlas          institution                                      acronym url   #>    <chr>          <chr>                                            <chr>   <chr> #>  1 Australia      Atlas of Living Australia                        ALA     http… #>  2 Austria        Biodiversitäts-Atlas Österreich                  BAO     http… #>  3 Brazil         Sistemas de Informações sobre a Biodiversidade … SiBBr   http… #>  4 Estonia        eElurikkus                                       NA      http… #>  5 France         Inventaire National du Patrimoine Naturel        INPN    http… #>  6 Guatemala      Sistema Nacional de Información sobre Diversida… SNIBgt  http… #>  7 Portugal       GBIF Portugal                                    GBIF.pt http… #>  8 Spain          GBIF Spain                                       GBIF.es http… #>  9 Sweden         Swedish Biodiversity Data Infrastructure         SBDI    http… #> 10 United Kingdom National Biodiversity Network                    NBN     http…  ## Fields ----------------------------  # See a listing of all valid fields and layers if (FALSE) { show_all(fields) }  ## Reasons ---------------------------  # Show a listing of all accepted reasons for downloading occurrence data if (FALSE) { show_all(reasons) }  # Add your download reason when configuring your session with [galah_config()] if (FALSE) { galah_config(download_reason_id = 3) }  ## Profiles --------------------------  # Show a list of all available data quality profiles if (FALSE) { show_all(profiles) }  # Values in the `shortName` column can be used with [galah_apply_profile()]  # to narrow your data query results if (FALSE) { galah_call() |>    galah_apply_profile(\"ALA\") |>    atlas_counts() }  ## Lists ----------------------------  # Show a listing of species lists if (FALSE) { show_all(lists) }  ## Ranks ---------------------------  # Show a listing of all taxonomic ranks if (FALSE) { show_all(ranks) }  # Use ranks with [galah_down_to()] and [atlas_taxonomy()] to get taxonomic  # trees if (FALSE) { galah_call() %>%   galah_identify(\"fungi\") %>%   galah_down_to(subphylum) %>%   atlas_taxonomy() }  ## Cache files ---------------------  # Configure caching and create a query to cache with [galah_config()] if (FALSE) { galah_config(caching = TRUE) dat <- atlas_counts(group_by = galah_group_by(year))   # Show a listing of previously cached files show_all_cached_files() }"},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/show_values.html","id":null,"dir":"Reference","previous_headings":"","what":"Show or search for values within a specified field — show_values","title":"Show or search for values within a specified field — show_values","text":"Users may wish see specific values within chosen field, profile list narrow queries understand information interest. show_values() provides users values. search_values() allows users search specific values within specified field.","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/show_values.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Show or search for values within a specified field — show_values","text":"","code":"show_values(df)  search_values(df, query)"},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/show_values.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Show or search for values within a specified field — show_values","text":"df search result search_fields(), search_profiles() search_lists(). query string specifying search term. case sensitive.","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/show_values.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Show or search for values within a specified field — show_values","text":"tibble values specified field, profile list.","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/show_values.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Show or search for values within a specified field — show_values","text":"Field contains categorical numeric values. example: field \"year\" contains values 2021, 2020, 2019, etc. field \"stateProvince\" contains values New South Wales, Victoria, Queensland, etc. used narrow queries galah_filter(). Profile consists many individual quality filters. example, \"ALA\" profile consists values: Exclude records spatial validity FALSE Exclude records latitude value zero Exclude records longitude value zero List contains list species, usually taxonomic name. example, Endangered Plant species list contains values: Acacia curranii (Curly-bark Wattle) Brachyscome papillosa (Mossgiel Daisy) Solanum karsense (Menindee Nightshade)","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/reference/show_values.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Show or search for values within a specified field — show_values","text":"","code":"# Show values in field 'cl22' if (FALSE) { search_fields(\"cl22\") |>    show_values() }  # Search for any values in field 'cl22' that match 'tas' if (FALSE) { search_fields(\"cl22\") |>    search_values(\"tas\") }  # See items within species list \"dr19257\" if (FALSE) { search_lists(\"dr19257\") |>    show_values() }"},{"path":[]},{"path":"https://atlasoflivingaustralia.github.io/galah/news/index.html","id":"expanded-support-for-querying-other-international-living-atlases-1-5-0","dir":"Changelog","previous_headings":"","what":"Expanded support for querying other International Living Atlases","title":"galah 1.5.0","text":"Support complex queries 10 Living Atlases, including France, Guatemala Sweden. Complex queries can constructed using galah_call(), filtered galah_ functions, downloaded atlas_ functions. Previously, functionality possible queries ALA (#126)","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/news/index.html","id":"collect_media-1-5-0","dir":"Changelog","previous_headings":"","what":"collect_media()","title":"galah 1.5.0","text":"Show available media: atlas_media() returns tibble available media files Download media: collect_media() downloads list media atlas_media() local machine Download image thumbnails specifying type = \"thumbnails\" collect_media() (#140)","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/news/index.html","id":"updates-to-galah_geolocate-1-5-0","dir":"Changelog","previous_headings":"","what":"Updates to galah_geolocate()","title":"galah 1.5.0","text":"galah_geolocate() now supports filtering queries using polygons bounding boxes. Overall improvements bug fixes galah_geolocate() new internal functions galah_polygon() galah_bbox() (#125)","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/news/index.html","id":"show_all-search_all--show_values-search_values-1-5-0","dir":"Changelog","previous_headings":"","what":"show_all(), search_all() & show_values(), search_values()","title":"galah 1.5.0","text":"Experimental functions show_all() search_all() flexible look-functions can search information {galah}, rather separate search_/show_all_ functions (e.g. search_fields(), search_atlases(), show_all_fields(), show_all_reasons(), etc) (#127, #132) Added look-support collections, data providers, data resources, licenses, APIs species lists (e.g. list endangered species) (#126, #127, #132, #151) Checking valid values within fields, profiles species lists improved functions show_values() & search_values() (#131)","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/news/index.html","id":"minor-improvements-1-5-0","dir":"Changelog","previous_headings":"","what":"Minor improvements","title":"galah 1.5.0","text":"Apply data quality profiles pipe galah_apply_profile() function (#130) Improved internal consistency galah_ functions (#133) galah_geolocate() longer depends archived {wellknown} package (#141) Added support queries exclude/include missing values (e.g. galah_filter(species != \"\") galah_filter(species == \"\") (#143) Re-download previously-minted DOI collect_doi() (#140) checks ensure galah fails gracefully API fails (#157)","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/news/index.html","id":"bug-fixes-1-5-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"galah 1.5.0","text":"galah_select() longer adds “basic” group columns automatically (#128) galah_config() doesn’t display incorrect preserve = TRUE message (#136) Fixes error selecting assertion columns galah_select() (#137) atlas_counts() atlas_occurrences() longer return different record numbers field empty (#138) atlas_media() results longer differ results returned galah_filter() & atlas_counts() (#151)","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/news/index.html","id":"galah-140","dir":"Changelog","previous_headings":"","what":"galah 1.4.0","title":"galah 1.4.0","text":"CRAN release: 2022-01-24","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/news/index.html","id":"revamped-syntax-1-4-0","dir":"Changelog","previous_headings":"","what":"Revamped syntax","title":"galah 1.4.0","text":"ala_ functions renamed use prefix atlas_. change reflects functionality international atlases (.e., atlas_occurrences, atlas_counts, atlas_species, atlas_media, atlas_taxonomy, atlas_citation) (#103) select_taxa replaced 3 functions: galah_identify, search_taxa search_identifiers. galah_identify used building data queries, whereas search_taxa search_identifiers now exclusively used search taxonomic information. Syntax changes intended reflect usage expected output (#112, #122) select_ functions renamed use prefix galah_. Specifically, galah_filter, galah_select galah_geolocate replace select_filters, select_columns select_locations. syntax changes reflect move towards consistency dplyr naming functionality (#101, #108) find_ functions provide listing possible values renamed show_all_ (.e., show_all_profiles, show_all_ranks, show_all_atlases, show_all_cached_files, show_all_fields, show_all_reasons). find_ functions require input return specific results renamed search_ (.e., search_field_values, search_profile_attributes) (#112, #113)","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/news/index.html","id":"galah_group_by-1-4-0","dir":"Changelog","previous_headings":"","what":"galah_group_by","title":"galah 1.4.0","text":"Group fields using galah_group_by(), groups summarises record counts based categorical field values, similar dplyr::group_by() (#90, #95)","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/news/index.html","id":"galah_down_to-1-4-0","dir":"Changelog","previous_headings":"","what":"galah_down_to","title":"galah 1.4.0","text":"Select taxonomic level taxonomic tree go galah_down_to() + atlas_taxonomy(), uses tidy evaluation like galah_ functions (#101, #120)","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/news/index.html","id":"pipe-queries-using-galah_call-1-4-0","dir":"Changelog","previous_headings":"","what":"Pipe queries using galah_call","title":"galah 1.4.0","text":"Build data queries using piping syntax (.e., |>, %>%) first using galah_call(), narrowing queries galah_ functions finishing queries atlas_ function (#60, #120). S3 methods now implemented functions allow piping (#40)","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/news/index.html","id":"minor-improvements-1-4-0","dir":"Changelog","previous_headings":"","what":"Minor improvements","title":"galah 1.4.0","text":"Improved error messages using {glue} {rlang} (#117) Revamped syntax functions return output tibbles (#110, #118) Pass vectors galah_filter (#91, #92) Cache valid fields faster field look (#73, #116) New vignettes updated syntax (#104, #105), plus improvements previous vignettes. Updated R Markdown-style documentation added warnings deprecated functions (#113, #121)","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/news/index.html","id":"bug-fixes-1-4-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"galah 1.4.0","text":"galah longer returns error ALA system /API fails (#102, #119) search_taxa returns correct IDs search terms parentheses (#96) search_taxa returns best-fit taxonomic result ranks specified data.frame tibble (#115)","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/news/index.html","id":"galah-131","dir":"Changelog","previous_headings":"","what":"galah 1.3.1","title":"galah 1.3.1","text":"CRAN release: 2021-08-21","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/news/index.html","id":"search_taxonomy-renamed-to-ala_taxonomy-1-3-1","dir":"Changelog","previous_headings":"","what":"search_taxonomy() renamed to ala_taxonomy()","title":"galah 1.3.1","text":"bug fix: ala_taxonomy longer fails nodes ranked informal unranked (#86) function now returns tree built using data.tree package change function name required greater consistency data-providing functions galah","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/news/index.html","id":"vignettes-1-3-1","dir":"Changelog","previous_headings":"","what":"Vignettes","title":"galah 1.3.1","text":"vignettes now pre-compiled avoid failing CRAN (#85) expanded vignette navigating taxonomic information (#42)","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/news/index.html","id":"galah-130","dir":"Changelog","previous_headings":"","what":"galah 1.3.0","title":"galah 1.3.0","text":"CRAN release: 2021-08-06","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/news/index.html","id":"galah_config-1-3-0","dir":"Changelog","previous_headings":"","what":"galah_config()","title":"galah 1.3.0","text":"ala_config() renamed galah_config() improve internal consistency (#68)","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/news/index.html","id":"search_taxonomy-1-3-0","dir":"Changelog","previous_headings":"","what":"search_taxonomy()","title":"galah 1.3.0","text":"search_taxonomy() provides means search taxonomic names check results ‘correct’ proceeding download data via ala_occurrences(), ala_species() ala_counts() (e.g., ambiguous homonymous) (#64 #75) search_taxonomy() returns information author authority taxonomic names (#79) search_taxonomy() consistently orders column names, including correct taxonomic order rank (#81)","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/news/index.html","id":"caching-helper-functions-1-3-0","dir":"Changelog","previous_headings":"","what":"Caching helper functions","title":"galah 1.3.0","text":"find_cached_files() lists user cached files stored metadata (#57) clear_cached_files() removes previously cached files stored metadata (#71) ala_counts(), ala_occurrences(), ala_media() ala_species() now refresh_cache argument remove previously cached files replace current query (#71)","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/news/index.html","id":"minor-improvements-1-3-0","dir":"Changelog","previous_headings":"","what":"Minor improvements","title":"galah 1.3.0","text":"Cache files saved RDS format, making query attributes easier find, including data DOI, search url (#55, #32, #28) ala_media() caches media metadata galah_config(caching = TRUE) search_fields() allows user pass qid argument (#59) Users can now optionally skip filter count validation checks spatial biocache web services setting galah_config(run_checks = FALSE). helps users avoid slowing data request download speeds many requests made quick succession via galah_filter() ala_occurrences() (#61, #80) ala_counts(), select_columns() search_fields() now use match.arg approximate strings fuzzy matching (#66) Better handling cache errors improved error messages (#70)","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/news/index.html","id":"bug-fixes-1-3-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"galah 1.3.0","text":"select_columns(group = 'assertions') now sends qa = includeall ALA web service API return assertion columns (#48) ala_occurrences() returns data DOI ala_occurrences(mint_doi = TRUE) re-downloads data called multiple times (#56) ala_occurrences() longer converts field names -CAPS camelCase (#62)","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/news/index.html","id":"galah-120","dir":"Changelog","previous_headings":"","what":"galah 1.2.0","title":"galah 1.2.0","text":"CRAN release: 2021-07-02","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/news/index.html","id":"living-atlases-1-2-0","dir":"Changelog","previous_headings":"","what":"Living Atlases","title":"galah 1.2.0","text":"ala_config() allows users specify international Atlas download data (#21)","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/news/index.html","id":"minor-improvements-1-2-0","dir":"Changelog","previous_headings":"","what":"Minor improvements","title":"galah 1.2.0","text":"ala_media() includes file path downloaded media returned metadata (#22) Data returned ala_occurrences() contains search_url used download records; takes user website search page (#32) ala_species() provides helpful error species found (#39) Data quality filters created using specific web service argument, rather constructing filters attributes (#37) select_taxa() optional all_ranks argument return intermediate rank information (#35)","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/news/index.html","id":"bug-fixes-1-2-0","dir":"Changelog","previous_headings":"","what":"Bug fixes","title":"galah 1.2.0","text":"R > 4.0.0 now required (#43, #45) select_taxa() behaves expected character strings 32 36 characters provided (#23) Caching functionality ala_occurrences() uses columns expected (#30) galah_filter() negates assertion filters required, fixing issue assertion values ignored (#27) select_taxa() longer throws error queries one term differing number columns return value (#41) ala_counts() returns data.frame consistent column classes group_by parameter called multiple times ala_config(caching = TRUE) (#47) ala_ functions fail gracefully non-id character string passed (#49)","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/news/index.html","id":"galah-110","dir":"Changelog","previous_headings":"","what":"galah 1.1.0","title":"galah 1.1.0","text":"CRAN release: 2021-05-05","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/news/index.html","id":"downloading-media-1-1-0","dir":"Changelog","previous_headings":"","what":"Downloading media","title":"galah 1.1.0","text":"ala_media() now takes select_ arguments ala_ functions (#18) Filtering media metadata e.g. licence type possible (#19) search_fields now media type argument option Performance improvement download times (#13) Progress bar displayed downloads verbose == TRUE (#8) media download types supported","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/news/index.html","id":"select_-functions-1-1-0","dir":"Changelog","previous_headings":"","what":"select_ functions","title":"galah 1.1.0","text":"galah_location auto-detects type argument provided takes single argument, query, place sf wkt (#17) select_taxa auto-detects type argument provided takes single argument, query, place term term_type (#16)","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/news/index.html","id":"minor-improvements-1-1-0","dir":"Changelog","previous_headings":"","what":"Minor improvements","title":"galah 1.1.0","text":"Provide useful error message empty occurrence download (#7) ala_counts uses group_by field name returned data.frame column name (#6) ala_occurrences sends sourceId parameter ALA (#5) search_fields provides helpful error invalid types (#11)","code":""},{"path":"https://atlasoflivingaustralia.github.io/galah/news/index.html","id":"galah-100","dir":"Changelog","previous_headings":"","what":"galah 1.0.0","title":"galah 1.0.0","text":"CRAN release: 2021-04-06 First version galah, built earlier functionality ALA4R package.","code":""}]
