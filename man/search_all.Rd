% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/search_all.R
\name{search_all}
\alias{search_all}
\alias{search_atlases}
\alias{search_reasons}
\alias{search_ranks}
\alias{search_fields}
\alias{search_values}
\alias{search_assertions}
\alias{search_profiles}
\alias{search_profile_attributes}
\alias{search_providers}
\alias{search_collections}
\alias{search_datasets}
\alias{search_licences}
\alias{search_apis}
\alias{search_lists}
\title{Search for record information}
\usage{
search_all(type, query)

search_apis(query)

search_assertions(query)

search_atlases(query)

search_collections(query)

search_datasets(query)

search_providers(query)

search_fields(query)

search_licences(query)

search_reasons(query)

search_ranks(query)

search_profiles(query)

search_lists(query)
}
\arguments{
\item{type}{A string to specify what type of parameters should be searched.}

\item{query}{A string specifying a search term. Searches are not
case-sensitive.}
}
\value{
An object of class \code{tbl_df} and \code{data.frame} (aka a tibble)
containing all data that match the search query.
}
\description{
The living atlases store a huge amount of information, above and beyond the
occurrence records that are their main output. In \code{galah}, one way that
users can investigate this information is by searching for a specific option
or category for the type of information they are interested in.
Functions prefixed with \code{search_} do this, displaying any matches to a
search term within the valid options for the information specified by the
suffix.

\ifelse{html}{\href{https://lifecycle.r-lib.org/articles/stages.html#experimental}{\figure{lifecycle-experimental.svg}{options: alt='[Experimental]'}}}{\strong{[Experimental]}}
\code{search_all()} is a helper function that can do searches within multiple
types of information from \code{search_} sub-functions.
See \code{Details} (below) for accepted values.
}
\details{
There are five categories of information, each with their own
specific sub-functions to look-up each type of information.
The available types of information for \code{search_all()} are:\tabular{llll}{
   \strong{Category} \tab \strong{Type} \tab \strong{Description} \tab \strong{Sub-functions} \cr
   configuration \tab \code{atlases} \tab Search for what atlases are available \tab \code{\link[=search_atlases]{search_atlases()}} \cr
    \tab \code{apis} \tab Search for what APIs & functions are available for each atlas \tab \code{\link[=search_apis]{search_apis()}} \cr
    \tab \code{reasons} \tab Search for what values are acceptable as 'download reasons' for a specified atlas \tab \code{\link[=search_reasons]{search_reasons()}} \cr
   taxonomy \tab \code{taxa} \tab Search for one or more taxonomic names \tab \code{\link[=search_taxa]{search_taxa()}} \cr
    \tab \code{identifiers} \tab Take a universal identifier and return taxonomic information \tab \code{\link[=search_identifiers]{search_identifiers()}} \cr
    \tab \code{ranks} \tab Search for valid taxonomic ranks (e.g. Kingdom, Class, Order, etc.) \tab \code{\link[=search_ranks]{search_ranks()}}) \cr
   filters \tab \code{fields} \tab Search for fields that are stored in an atlas \tab \code{\link[=search_fields]{search_fields()}} \cr
    \tab \code{assertions} \tab Search for results of data quality checks run by each atlas \tab \code{\link[=search_assertions]{search_assertions()}} \cr
    \tab \code{licenses} \tab Search for copyright licences applied to media \tab \code{search_licenses()} \cr
   group filters \tab \code{profiles} \tab Search for what data profiles are available \tab \code{\link[=search_profiles]{search_profiles()}} \cr
    \tab \code{lists} \tab Search for what species lists are available \tab \code{search_lists()} \cr
   data providers \tab \code{providers} \tab Search for which institutions have provided data \tab \code{\link[=search_providers]{search_providers()}} \cr
    \tab \code{collections} \tab Search for the specific collections within those institutions \tab \code{\link[=search_collections]{search_collections()}} \cr
    \tab \code{datasets} \tab Search for the data groupings within those collections \tab \code{\link[=search_datasets]{search_datasets()}} \cr
}
}
\section{Examples}{

\subsection{Fields}{

Search for all fields that use include the word "date"

\if{html}{\out{<div class="sourceCode r">}}\preformatted{search_fields("date")
#> # A tibble: 22 x 4
#>   id             description                                         type  link 
#>   <chr>          <chr>                                               <chr> <chr>
#> 1 dateIdentified http://rs.tdwg.org/dwc/terms/dateIdentified         fiel~ <NA> 
#> 2 datePrecision  The precision of the date information for the reco~ fiel~ <NA> 
#> 3 eventDate      The ISO formatted date of observation, specimen co~ fiel~ <NA> 
#> 4 eventDateEnd   <NA>                                                fiel~ <NA> 
#> # ... with 18 more rows
}\if{html}{\out{</div>}}

\if{html}{\out{<div class="sourceCode r">}}\preformatted{search_all(fields, "date") # equivalent
}\if{html}{\out{</div>}}

Search for all fields with the string "basisofrecord"

\if{html}{\out{<div class="sourceCode r">}}\preformatted{search_fields("basisofrecord")
#> # A tibble: 2 x 4
#>   id                description                                      type  link 
#>   <chr>             <chr>                                            <chr> <chr>
#> 1 basisOfRecord     What this is a record of e.g. specimen, human o~ fiel~ <NA> 
#> 2 raw_basisOfRecord The basis of record as supplied by the data pub~ fiel~ <NA>
}\if{html}{\out{</div>}}

\if{html}{\out{<div class="sourceCode r">}}\preformatted{search_all(fields, "basisofrecord") # equivalent
}\if{html}{\out{</div>}}

Search for all fields that have information for "marine"

\if{html}{\out{<div class="sourceCode r">}}\preformatted{search_fields("marine") |> 
  head() # only show first 5 results
#> # A tibble: 6 x 4
#>   id      description                                                type  link 
#>   <chr>   <chr>                                                      <chr> <chr>
#> 1 biome   "A field indicating if the record has been located in Ter~ fiel~  <NA>
#> 2 cl2105  "FAO Fishery Statistical Areas FAO Fishing areas (Marine)" laye~ "htt~
#> 3 cl10948 "CAPAD 2018 Terrestrial The Collaborative Australian Prot~ laye~ "htt~
#> 4 cl10957 "CAPAD 2018 Marine The Collaborative Australian Protected~ laye~ "htt~
#> 5 el1056  "Endemism (Non-marine) Endemism (Non-marine) based on Cri~ laye~ ""   
#> 6 el957   "Averaged Topographic Relief  This data represents the av~ laye~ "htt~
}\if{html}{\out{</div>}}

\if{html}{\out{<div class="sourceCode r">}}\preformatted{search_all(fields, "marine") # equivalent
}\if{html}{\out{</div>}}

Search for all Wordclim layers

\if{html}{\out{<div class="sourceCode r">}}\preformatted{search_fields("worldclim")
#> # A tibble: 38 x 4
#>   id      description                                                type  link 
#>   <chr>   <chr>                                                      <chr> <chr>
#> 1 el10982 WorldClim 2.1: Temperature - warmest month max Max Temper~ laye~ http~
#> 2 el10981 WorldClim 2.1: Temperature - seasonality Temperature Seas~ laye~ http~
#> 3 el10980 WorldClim 2.1: Temperature - isothermality Isothermality   laye~ http~
#> 4 el10990 WorldClim 2.1: Precipitation - wettest month Precipitatio~ laye~ http~
#> # ... with 34 more rows
}\if{html}{\out{</div>}}

\if{html}{\out{<div class="sourceCode r">}}\preformatted{search_all(fields, "worldclim") # equivalent
}\if{html}{\out{</div>}}
}

\subsection{Taxa}{

Search using a single term (See \code{\link[=search_taxa]{search_taxa()}} for more info)

\if{html}{\out{<div class="sourceCode r">}}\preformatted{search_taxa("Reptilia")
#> # A tibble: 1 x 9
#>   search_term scientific_name taxon_~1 rank  match~2 kingdom phylum class issues
#>   <chr>       <chr>           <chr>    <chr> <chr>   <chr>   <chr>  <chr> <chr> 
#> 1 Reptilia    REPTILIA        https:/~ class exactM~ Animal~ Chord~ Rept~ noIss~
#> # ... with abbreviated variable names 1: taxon_concept_id, 2: match_type
}\if{html}{\out{</div>}}

\if{html}{\out{<div class="sourceCode r">}}\preformatted{search_all(taxa, "Reptilia") # equivalent
}\if{html}{\out{</div>}}

Note that \code{search_taxa()} is not case sensitive

\if{html}{\out{<div class="sourceCode r">}}\preformatted{search_taxa("reptilia") # not case sensitive
#> # A tibble: 1 x 9
#>   search_term scientific_name taxon_~1 rank  match~2 kingdom phylum class issues
#>   <chr>       <chr>           <chr>    <chr> <chr>   <chr>   <chr>  <chr> <chr> 
#> 1 reptilia    REPTILIA        https:/~ class exactM~ Animal~ Chord~ Rept~ noIss~
#> # ... with abbreviated variable names 1: taxon_concept_id, 2: match_type
}\if{html}{\out{</div>}}

Search multiple taxa. \code{search_taxa()} will return one row per taxon

\if{html}{\out{<div class="sourceCode r">}}\preformatted{search_taxa(c("reptilia", "mammalia"))
#> # A tibble: 2 x 10
#>   search_term scient~1 taxon~2 rank  match~3 kingdom phylum class issues verna~4
#>   <chr>       <chr>    <chr>   <chr> <chr>   <chr>   <chr>  <chr> <chr>  <chr>  
#> 1 reptilia    REPTILIA https:~ class exactM~ Animal~ Chord~ Rept~ noIss~ <NA>   
#> 2 mammalia    MAMMALIA https:~ class exactM~ Animal~ Chord~ Mamm~ noIss~ Mammals
#> # ... with abbreviated variable names 1: scientific_name, 2: taxon_concept_id,
#> #   3: match_type, 4: vernacular_name
}\if{html}{\out{</div>}}

\code{galah_identify()} uses \code{search_taxa()} to narrow data queries

\if{html}{\out{<div class="sourceCode r">}}\preformatted{galah_call() |>
  galah_identify("reptilia") |>
  atlas_counts()
#> # A tibble: 1 x 1
#>     count
#>     <int>
#> 1 1471577
}\if{html}{\out{</div>}}
}

\subsection{Identifiers}{

Look up a unique taxon identifier (See \code{\link[=search_identifier]{search_identifier()}} for more info)

\if{html}{\out{<div class="sourceCode r">}}\preformatted{search_identifiers(identifier = "https://id.biodiversity.org.au/node/apni/2914510")
#> # A tibble: 1 x 14
#>   scient~1 scien~2 taxon~3 rank  match~4 kingdom phylum class order family genus
#>   <chr>    <chr>   <chr>   <chr> <chr>   <chr>   <chr>  <chr> <chr> <chr>  <chr>
#> 1 Eucalyp~ Maiden  https:~ spec~ taxonI~ Plantae Charo~ Equi~ Myrt~ Myrta~ Euca~
#> # ... with 3 more variables: species <chr>, vernacular_name <chr>,
#> #   issues <chr>, and abbreviated variable names 1: scientific_name,
#> #   2: scientific_name_authorship, 3: taxon_concept_id, 4: match_type
}\if{html}{\out{</div>}}

\if{html}{\out{<div class="sourceCode r">}}\preformatted{search_all(identifiers, 
           "https://id.biodiversity.org.au/node/apni/2914510") # equivalent
}\if{html}{\out{</div>}}

\code{galah_identify()} uses identifiers to narrow data queries, too. Ensure
that \code{search = FALSE}.

\if{html}{\out{<div class="sourceCode r">}}\preformatted{galah_call() |>
  galah_identify("https://id.biodiversity.org.au/node/apni/2914510",
                 search = FALSE) |>
  atlas_counts()
#> # A tibble: 1 x 1
#>   count
#>   <int>
#> 1 13462
}\if{html}{\out{</div>}}
}

\subsection{Lists}{

Search for species lists that match "endangered"

\if{html}{\out{<div class="sourceCode r">}}\preformatted{search_lists("endangered")
#> # A tibble: 7 x 16
#>   dataR~1 listN~2 listT~3 dateC~4 lastU~5 usern~6 fullN~7 itemC~8 region categ~9
#>   <chr>   <chr>   <chr>   <chr>   <chr>   <chr>   <lgl>     <int> <chr>  <chr>  
#> 1 dr19750 Endang~ OTHER   2022-0~ 2022-0~ anneke~ NA           73 <NA>   <NA>   
#> 2 dr19257 Endang~ OTHER   2022-0~ 2022-0~ alanah~ NA           17 <NA>   <NA>   
#> 3 dr4890  Endang~ CONSER~ 2016-0~ 2016-0~ kiashe~ NA          340 <NA>   <NA>   
#> 4 dr17134 Endang~ CONSER~ 2021-0~ 2021-0~ 100588~ NA           20 <NA>   <NA>   
#> 5 dr16203 EPBC A~ SPATIA~ 2020-0~ 2020-0~ robina~ NA           10 <NA>   <NA>   
#> 6 dr17208 My spe~ OTHER   2021-0~ 2021-0~ caterp~ NA            1 <NA>   <NA>   
#> 7 dr16896 Rare a~ CONSER~ 2021-0~ 2021-0~ matthe~ NA            1 <NA>   <NA>   
#> # ... with 6 more variables: generalisation <chr>, authority <chr>,
#> #   sdsType <chr>, isAuthoritative <lgl>, isInvasive <lgl>, isThreatened <lgl>,
#> #   and abbreviated variable names 1: dataResourceUid, 2: listName,
#> #   3: listType, 4: dateCreated, 5: lastUpdated, 6: username, 7: fullName,
#> #   8: itemCount, 9: category
}\if{html}{\out{</div>}}

\if{html}{\out{<div class="sourceCode r">}}\preformatted{search_all(lists, "endangered") # equivalent
}\if{html}{\out{</div>}}
}

\subsection{Ranks}{

Search for a valid taxonomic rank, "subphylum"

\if{html}{\out{<div class="sourceCode r">}}\preformatted{search_ranks("subphylum")
#> # A tibble: 1 x 2
#>      id name     
#>   <int> <chr>    
#> 1     7 subphylum
}\if{html}{\out{</div>}}

\if{html}{\out{<div class="sourceCode r">}}\preformatted{search_all(ranks, "subphylum") # equivalent
}\if{html}{\out{</div>}}

Use ranks with \code{\link[=galah_down_to]{galah_down_to()}} and \code{\link[=atlas_taxonomy]{atlas_taxonomy()}} to get taxonomic
trees

\if{html}{\out{<div class="sourceCode r">}}\preformatted{galah_call() \%>\%
  galah_identify("fungi") \%>\%
  galah_down_to(subphylum) \%>\%
  atlas_taxonomy()
#>                        levelName
#> 1  Fungi                        
#> 2   ¦--Ascomycota               
#> 3   ¦   ¦--Pezizomycotina       
#> 4   ¦   ¦--Saccharomycotina     
#> 5   ¦   °--Taphrinomycotina     
#> 6   ¦--Basidiomycota            
#> 7   ¦   ¦--Agaricomycotina      
#> 8   ¦   ¦--Pucciniomycotina     
#> 9   ¦   ¦--Ustilaginomycotina   
#> 10  ¦   °--Wallemiomycotina     
#> 11  ¦--Mucoromycota             
#> 12  ¦   °--Glomeromycotina      
#> 13  °--Zygomycota               
#> 14      ¦--Entomophthoromycotina
#> 15      ¦--Kickxellomycotina    
#> 16      ¦--Mortierellomycotina  
#> 17      ¦--Mucoromycotina       
#> 18      °--Zoopagomycotina
}\if{html}{\out{</div>}}
}
}

\references{
\itemize{
\item Darwin Core terms \url{https://dwc.tdwg.org/terms/}
\item ALA fields \url{https://api.ala.org.au/#ws72}
\item ALA assertions fields \url{https://api.ala.org.au/#ws81}
}
}
\seealso{
See \code{\link[=search_taxa]{search_taxa()}} and \code{\link[=search_identifiers]{search_identifiers()}} for more information
on taxonomic searches.
Use the \code{\link[=show_all]{show_all()}} function and \code{show_all_()} sub-functions to
show available options of information. These functions are used to pass valid
arguments to \code{\link[=galah_select]{galah_select()}}, \code{\link[=galah_filter]{galah_filter()}}, and related functions.
}
