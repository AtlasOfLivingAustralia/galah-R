---
title: "Download data"
author: "Martin Westgate & Dax Kellie"
date: '`r Sys.Date()`'
output:
  rmarkdown::html_vignette
vignette: >
  %\VignetteIndexEntry{Download data}
  %\VignetteEngine{knitr::rmarkdown}
  %\VignetteEncoding{UTF-8}
---
The `atlas_` functions are used to return data from the atlas chosen using 
`galah_config()`. They are:

-   `atlas_counts`
-   `atlas_occurrences`
-   `atlas_species`
-   `atlas_media`
-   `atlas_taxonomy`

The final `atlas_` function - `atlas_citation` - is unusual in that it does not
return any new data. Instead it provides a citation for an existing dataset (
downloaded using `atlas_occurrences`) that has an associated DOI. The other 
functions are described below.

Note that it is equally permissable to use the `type` argument of `galah_call()`
to specify the kind of data you want, and then retrive it using `collect()`. 
Here we use the `atlas_` prefix for consistency with earlier versions of `galah`,
and because the `atlas_` functions sometimes include shortcuts to make your life
easier.

```{r include = FALSE}
galah_config(email = "ala4r@ala.org.au",
             atlas = "Australia", 
             caching = FALSE, 
             verbose = FALSE)
```
# Record counts
`atlas_counts()` provides summary counts on records in the specified atlas, 
without needing to download all the records. 

```{r, warning = FALSE}
galah_config(atlas = "Australia")
# Total number of records in the ALA
atlas_counts()
```

In addition to the filter arguments, it has an optional `group_by` argument, 
which provides counts binned by the requested field.

```{r, warning = FALSE}
galah_call() |>
  galah_group_by(kingdom) |>
  atlas_counts()
```


# Species lists
A common use case of atlas data is to identify which species occur in a specified
region, time period, or taxonomic group. `atlas_species()` is similar to 
`search_taxa`, in that it returns taxonomic information and unique identifiers 
in a `tibble`. It differs in not being able to return information on taxonomic 
levels other than the species; but also in being more flexible by supporting filtering:

```{r}
species <- galah_call() |>
  galah_identify("Rodentia") |>
  galah_filter(stateProvince == "Northern Territory") |>
  atlas_species()
  
species |> head()
```


# Occurrence data
To download occurrence data you will need to specify your email in
`galah_config()`. This email must be associated with an active ALA account. See
more information in the [config section](#config)

```{r, eval = FALSE}
galah_config(email = "your_email@email.com", atlas = "Australia")
```

Download occurrence records for *Eolophus roseicapilla*

```{r}
occ <- galah_call() |>
  galah_identify("Eolophus roseicapilla") |>
  galah_filter(
    stateProvince == "Australian Capital Territory",
    year >= 2010,
    profile = "ALA"
  ) |>
  galah_select(institutionID, group = "basic") |>
  atlas_occurrences()
  
occ |> head()
```


# Media metadata
In addition to text data describing individual occurrences and their attributes, 
ALA stores images, sounds and videos associated with a given record. Metadata on
these records can be downloaded to `R` using `atlas_media()` and the same set of 
filters as the other data download functions.

```{r, warning=FALSE}
media_data <- galah_call() |>
  galah_identify("Eolophus roseicapilla") |>
  galah_filter(
    year == 2020,
    cl22 == "Australian Capital Territory") |>
  atlas_media()
  
media_data |> head()
```

To actually download the media files to your computer, use [collect_media()].


# Taxonomic trees
`atlas_taxonomy` provides a way to build taxonomic trees from one clade down to 
another using each service's internal taxonomy. Specify which taxonomic level 
your tree will go down to with `galah_filter()` using the `rank` argument.

```{r, warning = FALSE}
galah_call() |>
  galah_identify("chordata") |>
  galah_filter(rank == class) |>
  atlas_taxonomy()
```

# Configuring `galah`
Various aspects of the galah package can be customized. 

## Email
To download occurrence records, you will need to provide an email address
registered with the service that you want to use (e.g. for the ALA you can 
create an account 
[here](https://auth.ala.org.au/userdetails/registration/createAccount)).
Once an email is registered, it should be stored in the config:
```{r eval=FALSE}
galah_config(email = "myemail@gmail.com")
```

## Setting your directory
By default, `galah` stores downloads in a temporary folder, meaning that the 
local files are automatically deleted when the R session is ended. This 
behaviour can be altered so that downloaded files are preserved by setting the 
directory to a non-temporary location.

```{r eval=FALSE}
galah_config(directory = "example/dir")
```

## Setting the download reason
ALA requires that you provide a reason when downloading occurrence data 
(via the galah `atlas_occurrences()` function). The reason is set as 
"scientific research" by default, but you can change this using `galah_config()`. 
See `show_all_reasons()` for valid download reasons.

```{r eval=FALSE}
galah_config(download_reason_id = your_reason_id)
```

## Debugging
If things aren't working as expected, more detail (particularly about web 
requests and caching behaviour) can be obtained by setting the `verbose` 
configuration option:

```{r eval=FALSE}
galah_config(verbose = TRUE)
```