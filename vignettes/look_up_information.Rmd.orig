---
title: "Look up information"
author: "Martin Westgate & Dax Kellie"
date: '`r Sys.Date()`'
output:
  rmarkdown::html_vignette
vignette: >
  %\VignetteIndexEntry{Look up information}
  %\VignetteEngine{knitr::rmarkdown}
  %\VignetteEncoding{UTF-8}
---

# `show_all_` functions
Functions with the prefix `show_all_` return a `tibble` doing exactly that 
- showing all the possible values of the category specified. These functions include:

-   `show_all_fields`
-   `show_all_atlases`
-   `show_all_ranks`
-   `show_all_profiles`
-   `show_all_reasons`
-   `show_all_cached_files`

`show_all_` functions require no arguments. Simply call the function and it will 
return all accepted values as a tibble:

```{r}
show_all_atlases()
show_all_reasons()
```

Of these functions, the one that has by far the largest output is `show_all_fields`.
Given how important fields are to the proper use of `galah`, it might be more 
useful to search for a specific field. This need for a more detailed search is when
`search_` functions come in handy.


# `search_` functions
The second subset of lookup functions use the `search_` prefix, and differ from
`show_all_` in that they require a query to work. They are used to search for 
detailed information that can't be summarised across the whole atlas, and include:

-   `search_taxa`
-   `search_identifiers`
-   `search_fields`
-   `search_field_values`
-   `search_profile attributes`

Search for a single taxon or multiple taxa by name with `search_taxa`.

```{r}
search_taxa("reptilia")

search_taxa("reptilia", "aves", "mammalia", "pisces")
```

Alternatively, `search_identifiers` is the partner function to `search_taxa`. 
If we already know a taxonomic identifier, we can search for 
which taxa the identifier belongs to with `search_identifiers`:

```{r}
search_identifiers("urn:lsid:biodiversity.org.au:afd.taxon:682e1228-5b3c-45ff-833b-550efd40c399")
```

Sifting through the output of `show_all_fields` to find a specific field can be 
inefficient. Instead, we might wish to use `search_fields` to look for specific 
fields that match a search. As with `search_taxa`, `search_fields` requires a 
query to work.

```{r}
search_fields("date") |> head()
```

Once a desired field is found, use `search_field_values` to find values to pass 
to `galah_filter`

```{r}
search_field_values("basisOfRecord")
galah_call() |> galah_filter(basisOfRecord == "LIVING_SPECIMEN") |> atlas_counts()
``` 

`search_profile_attributes` gives more information on criteria used
to remove records in data quality profiles, for example:

```{r}
search_profile_attributes("ALA") |> head()
```
