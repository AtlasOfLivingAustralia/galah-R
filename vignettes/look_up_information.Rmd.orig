---
title: "Look up information"
author: "Martin Westgate & Dax Kellie"
date: '`r Sys.Date()`'
output:
  rmarkdown::html_vignette
vignette: >
  %\VignetteIndexEntry{Look up information}
  %\VignetteEngine{knitr::rmarkdown}
  %\VignetteEncoding{UTF-8}
---
```{r, include = FALSE}
galah_config(atlas = "Australia", verbose = FALSE)
```

galah supports two functions to look up information: `show_all()` and 
`search_all()`. The first argument to both functions is a type of information that you 
wish to look up; for example to see what fields are available to filter a query by, use:

```{r}
show_all(fields)
```

And to search for a specific field:

```{r}
search_all(fields, "australian states")
```

Here is a list of information types that can be used with `show_all()` and 
`search_all()`:

```{r echo = FALSE, warning = FALSE, message = FALSE}
library(kableExtra)
library(tibble)
library(magrittr)
library(dplyr)

tribble(
  ~Lookup, ~Description, ~Subfunctions,
  
  "atlases", "Show what living atlases are available", "show_all_atlases(), search_atlases()",
  "apis", "Show what APIs & functions are available for each atlas", "show_all_apis(), search_apis()",
  "reasons", "Show what values are acceptable as 'download reasons' for a specified atlas", "show_all_reasons(), search_reasons()",
  "taxa", "Search for one or more taxonomic names", "	search_taxa()",
  "identifiers", "Take a universal identifier and return taxonomic information", "search_identifiers()",
  "ranks", "Show valid taxonomic ranks (e.g. Kingdom, Class, Order, etc.)", "show_all_ranks(), search_ranks())",
  "fields", "Show fields that are stored in an atlas", "show_all_fields(), search_fields()",
  "assertions", "Show results of data quality checks run by each atlas", "show_all_assertions(), search_assertions()",
  "profiles", "Show what data quality profiles are available", "show_all_profiles(), search_profiles()",
  "lists", "Show what species lists are available", "show_lists(), search_lists()",
  "providers", "Show which institutions have provided data", "show_all_providers(), search_providers()",
  "collections", "Show the specific collections within those institutions", "show_all_collections(), search_collections()",
  "datasets", "Shows all the data groupings within those collections", "show_all_datasets(), search_datasets()"
  
) %>% 
  rename("Information type" = "Lookup") %>%
  rename("Sub-functions" = "Subfunctions") %>%
  kbl() %>%
  kable_styling(full_width = FALSE) %>%
  kable_paper() %>%
  column_spec(1, monospace = TRUE) %>%
  column_spec(3, monospace = TRUE) %>%
  pack_rows("Configuration", 1, 3, label_row_css = "background-color: #fdebf2; color: #343a40;") %>%
  pack_rows("Taxonomy", 4, 6, label_row_css = "background-color: #fdebf2; color: #343a40;") %>%
  pack_rows("Filters", 7, 8, label_row_css = "background-color: #fdebf2; color: #343a40;") %>%
  pack_rows("Group filters", 9, 10, label_row_css = "background-color: #fdebf2; color: #343a40;") %>%
  pack_rows("Data providers", 11, 13, label_row_css = "background-color: #fdebf2; color: #343a40;")
```


# `show_all_` subfunctions
While `show_all` is useful for a variety of cases, you can 
still call the underlying subfunctions if you prefer. Functions with 
the prefix `show_all_` do exactly that; they show all the 
possible values of the category specified. 

```{r, echo = FALSE}
galah_config(atlas = "Australia")
```

```{r}
show_all_atlases()
show_all_reasons()
```

# `search_` subfunctions
You can also call subfunctions that use the `search_` prefix to lookup information. 
`search_` subfunctions differ from `show_all_` in that they require a query to work,
and they useful to search for 
detailed information that can't be summarised across the whole atlas.

`search_taxa()` is an especially useful function in galah. It let's you search 
for a single taxon or multiple taxa by name.

```{r}
search_taxa("reptilia")

search_taxa("reptilia", "aves", "mammalia", "pisces")
```

Alternatively, `search_identifiers()` is the partner function to `search_taxa()`. 
If we already know a taxonomic identifier, we can search for 
which taxa the identifier belongs to.

```{r}
search_identifiers("urn:lsid:biodiversity.org.au:afd.taxon:682e1228-5b3c-45ff-833b-550efd40c399")
```

# `show_values()` & `search_values()`

Once a desired field is found, you can use `show_values()` to understand the 
information contained within that field. For example, we can show the values 
contained in the field `basisOfRecord`.

```{r}
search_all(fields, "basisOfRecord") |> show_values()
```

Use this information to pass meaningful queries to `galah_filter()`.

```{r}
galah_call() |> 
  galah_filter(basisOfRecord == "LIVING_SPECIMEN") |> 
  atlas_counts()
``` 

This works for other types of query, such as data profiles:

```{r}
search_all(profiles, "ALA") |> 
  show_values() |> 
  head()
```
