---
title: "Quick start guide"
author: "Martin Westgate & Dax Kellie"
date: '`r Sys.Date()`'
output:
  rmarkdown::html_vignette
vignette: >
  %\VignetteIndexEntry{Quick start guide}
  %\VignetteEngine{knitr::rmarkdown}
  %\VignetteEncoding{UTF-8}
---
# About
`galah` is an R interface to biodiversity data hosted by the 'living atlases'; 
a set of organisations that share a common codebase, and act as nodes of the
Global Biodiversity Information Facility ([GBIF](https://www.gbif.org)). These 
organisations collate and store observations of individual life forms, using the 
['Darwin Core'](https://dwc.tdwg.org) data standard. `galah` was built and is 
maintained by the [Science & Decision Support Team](https://labs.ala.org.au) at 
the [Atlas of Living Australia](https://ala.org.au) (ALA).

`galah` enables users to locate and download species observations, taxonomic
information, record counts, or associated media such as images or sounds. Users 
can restrict their queries to particular taxa or locations by specifying which 
columns and rows are returned by a query, or by restricting their results to 
observations that meet particular quality-control criteria. With a few minor
exceptions, all functions return a `tibble` as their standard format.


# Installation
To install from CRAN:
```{r eval=FALSE}
install.packages("galah")
```

Or install the development version from GitHub:
```{r eval=FALSE}
install.packages("remotes")
remotes::install_github("AtlasOfLivingAustralia/galah")
```

Load the package
```{r eval=FALSE}
library(galah)
```

# Choosing an atlas
By default, `galah` downloads information from the Atlas of Living Australia (ALA).
To show the full list of Atlases currently supported by `galah`, use 
`show_all(atlases)`.

```{r}
show_all(atlases)
```

Use `galah_config()` to set the Atlas to use. This will automatically populate the 
server configuration for your selected Atlas. By default, the atlas is Australia.

```{r eval=FALSE}
galah_config(atlas = "United Kingdom")
```

# Building queries
Functions that return data from the chosen atlas have the prefix `atlas_`; e.g.
to find the total number of records in the atlas, use:
  
```{r}
atlas_counts()
```

To pass more complex queries, start with the `galah_call()` function and pipe
additional arguments to modify the query. modifying functions have a `galah_`
prefix and support non-standard evaluation (NSE).

```{r}
galah_call() |> 
  galah_filter(year >= 2020) |> 
  atlas_counts()
```

To narrow the search to a particular taxonomic group, use `galah_identify()`. Note
that this function only accepts scientific names and is not case sensitive. It's 
good practice to first use `search_taxa()` to check that the taxa you provide 
returns the correct taxonomic results.

```{r}
search_taxa("reptilia") # Check whether taxonomic info is correct

galah_call() |>
  galah_filter(year >= 2020) |> 
  galah_identify("reptilia") |> 
  atlas_counts()
```

# Downloading records
The most common use case for `galah` is to download 'occurrence' records; 
observations of plants or animals made by contributors to the atlas. To download,
first register with the relevant atlas, then provide your registration email. 

```{r, eval=FALSE}
galah_config(email = "email@email.com")
```

```{r, echo=FALSE}
galah_config(verbose = FALSE)
```
Then you can customise records you require and query the atlas in question:
```{r}
result <- galah_call() |>
  galah_identify("Litoria") |>
  galah_filter(year >= 2020, cl22 == "Tasmania") |>
  galah_select(basisOfRecord, group = "basic") |>
  atlas_occurrences()

result |> head()
```

Check out our other vignettes for more detail on how to use these functions.