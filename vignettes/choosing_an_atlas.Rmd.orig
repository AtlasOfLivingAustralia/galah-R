---
title: "Choosing an atlas"
author: "Martin Westgate, Dax Kellie"
date: '`r Sys.Date()`'
output:
  rmarkdown::html_vignette
vignette: >
  %\VignetteIndexEntry{Choosing an atlas}
  %\VignetteEngine{knitr::rmarkdown}
  %\VignetteEncoding{UTF-8}
---

```{r, include = FALSE}
library(galah)
galah_config(atlas = "Australia", verbose = FALSE)
```

The GBIF network consists of a series of a series of 'node' organisations who
collate biodiversity data from their own countries, with GBIF acting as an 
umbrella organisation to store data from all nodes. Several nodes have their 
own APIs, often built from the 'living atlas' codebase developed by the ALA.
At present, `galah` supports the following functions and atlases:

<img src="atlases_plot.png">

## Set Organisation

Set which atlas you want to use by changing the `atlas` argument in 
`galah_config()`. The `atlas` argument can accept a full name, an acronym, or a 
region to select a given atlas, all of which are available via `show_all(atlases)`. 
Once a value is provided, it will automatically update `galah`'s server 
configuration to your selected atlas. The default `atlas` is Australia.

If you intend to download records, you may need to register a user profile with 
the relevant atlas first. 

```{r eval=FALSE}
galah_config(atlas = "GBIF.es", email = "your_email_here")
```

## Look up Information

You can use the same look-up functions to find useful information about the 
Atlas you have set. Available information may vary for each Living Atlas.

```{r}
galah_config(atlas = "Guatemala")

show_all(datasets)
show_all(fields)
search_all(fields, "year")
search_taxa("lagomorpha")
```

## Download data

You can build queries as you normally would in `galah`. For taxonomic 
queries, use `search_taxa()` to make sure your searches are 
returning the correct taxonomic data.

```{r}
galah_config(atlas = "United Kingdom")

search_taxa("vlps")   # Returns no data due to misspelling
search_taxa("vulpes") # Returns data

galah_call() |>
  galah_identify("vulpes") |>
  galah_filter(year > 2010) |>
  atlas_counts()
```

Download species occurrence records from other atlases with 
`atlas_occurrences()`

```{r, eval = TRUE}
galah_config(atlas = "Guatemala")

galah_call() |>
  galah_identify("Lagomorpha") |>
  galah_filter(year <= 1980) |>
  galah_select(taxon_name, year) |>
  atlas_occurrences()
```


# Complex queries with multiple Atlases

It is also possible to create more complex queries that return data from 
multiple Living Atlases. As an example, setting atlases within a loop with 
`galah_config()` and `purrr::map()` allows us to return the total number of 
species records in each Living Atlas in one table.

```{r, message = FALSE, warning = FALSE}
library(purrr)
library(tibble)
library(dplyr)
library(gt)

atlases <- show_all(atlases)

counts <- map(atlases$region, 
  function(x){
    galah_config(atlas = x)
    atlas_counts()
})

tibble(
  atlas = atlases$region, 
  n = unlist(counts)) |> 
  filter(n > 0) |>
  arrange(desc(n)) |>
  gt() |>
  fmt_number(column = n)
```

